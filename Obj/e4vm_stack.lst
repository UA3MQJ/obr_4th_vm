                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.9.3 #11378 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module e4vm_stack
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _e4vm_stack__init
                             12 	.globl _Console_WriteStr_C_COMPACT
                             13 	.globl _Console_WriteLn_COMPACT
                             14 	.globl _e4vm_stack_drop
                             15 	.globl _e4vm_stack_swap
                             16 	.globl _e4vm_stack_dup
                             17 	.globl _e4vm_stack_over
                             18 	.globl _e4vm_stack_rot
                             19 	.globl _e4vm_stack_nrot
                             20 ;--------------------------------------------------------
                             21 ; special function registers
                             22 ;--------------------------------------------------------
                             23 ;--------------------------------------------------------
                             24 ; ram data
                             25 ;--------------------------------------------------------
                             26 	.area _DATA
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area _INITIALIZED
                             31 ;--------------------------------------------------------
                             32 ; absolute external ram data
                             33 ;--------------------------------------------------------
                             34 	.area _DABS (ABS)
                             35 ;--------------------------------------------------------
                             36 ; global & static initialisations
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _GSINIT
                             40 	.area _GSFINAL
                             41 	.area _GSINIT
                             42 ;--------------------------------------------------------
                             43 ; Home
                             44 ;--------------------------------------------------------
                             45 	.area _HOME
                             46 	.area _HOME
                             47 ;--------------------------------------------------------
                             48 ; code
                             49 ;--------------------------------------------------------
                             50 	.area _CODE
                             51 ;e4vm_stack.c:22: void e4vm_stack_drop (e4vm_type_x4thPtr *v)
                             52 ;	---------------------------------
                             53 ; Function e4vm_stack_drop
                             54 ; ---------------------------------
   0000                      55 _e4vm_stack_drop::
   0000 CDr00r00      [17]   56 	call	___sdcc_enter_ix
                             57 ;e4vm_stack.c:24: Console_WriteStrLn((CHAR*)"drop", 5);
   0003 21r24r00      [10]   58 	ld	hl, #___str_0
   0006 CDr00r00      [17]   59 	call	_Console_WriteStr_C_COMPACT
   0009 CDr00r00      [17]   60 	call	_Console_WriteLn_COMPACT
                             61 ;e4vm_stack.c:25: (*v)->ds_p = (*v)->ds_p - 1;
   000C DD 6E 04      [19]   62 	ld	l, 4 (ix)
   000F DD 66 05      [19]   63 	ld	h, 5 (ix)
   0012 4E            [ 7]   64 	ld	c, (hl)
   0013 23            [ 6]   65 	inc	hl
   0014 46            [ 7]   66 	ld	b, (hl)
   0015 21 86 00      [10]   67 	ld	hl, #0x0086
   0018 09            [11]   68 	add	hl, bc
   0019 4E            [ 7]   69 	ld	c, (hl)
   001A 23            [ 6]   70 	inc	hl
   001B 46            [ 7]   71 	ld	b, (hl)
   001C 2B            [ 6]   72 	dec	hl
   001D 0B            [ 6]   73 	dec	bc
   001E 71            [ 7]   74 	ld	(hl), c
   001F 23            [ 6]   75 	inc	hl
   0020 70            [ 7]   76 	ld	(hl), b
                             77 ;e4vm_stack.c:26: }
   0021 DD E1         [14]   78 	pop	ix
   0023 C9            [10]   79 	ret
   0024                      80 ___str_0:
   0024 64 72 6F 70          81 	.ascii "drop"
   0028 00                   82 	.db 0x00
                             83 ;e4vm_stack.c:29: void e4vm_stack_swap (e4vm_type_x4thPtr *v)
                             84 ;	---------------------------------
                             85 ; Function e4vm_stack_swap
                             86 ; ---------------------------------
   0029                      87 _e4vm_stack_swap::
   0029 CDr00r00      [17]   88 	call	___sdcc_enter_ix
   002C F5            [11]   89 	push	af
   002D F5            [11]   90 	push	af
   002E F5            [11]   91 	push	af
                             92 ;e4vm_stack.c:32: Console_WriteStrLn((CHAR*)"swap", 5);
   002F 21rA9r00      [10]   93 	ld	hl, #___str_1
   0032 CDr00r00      [17]   94 	call	_Console_WriteStr_C_COMPACT
   0035 CDr00r00      [17]   95 	call	_Console_WriteLn_COMPACT
                             96 ;e4vm_stack.c:33: T = (*v)->ds[(*v)->ds_p - 1];
   0038 DD 7E 04      [19]   97 	ld	a, 4 (ix)
   003B DD 77 FA      [19]   98 	ld	-6 (ix), a
   003E DD 7E 05      [19]   99 	ld	a, 5 (ix)
   0041 DD 77 FB      [19]  100 	ld	-5 (ix), a
   0044 E1            [10]  101 	pop	hl
   0045 E5            [11]  102 	push	hl
   0046 4E            [ 7]  103 	ld	c, (hl)
   0047 23            [ 6]  104 	inc	hl
   0048 46            [ 7]  105 	ld	b, (hl)
   0049 21 44 00      [10]  106 	ld	hl, #0x0044
   004C 09            [11]  107 	add	hl, bc
   004D EB            [ 4]  108 	ex	de, hl
   004E 69            [ 4]  109 	ld	l, c
   004F 60            [ 4]  110 	ld	h, b
   0050 01 86 00      [10]  111 	ld	bc, #0x0086
   0053 09            [11]  112 	add	hl, bc
   0054 4E            [ 7]  113 	ld	c, (hl)
   0055 79            [ 4]  114 	ld	a, c
   0056 3D            [ 4]  115 	dec	a
   0057 87            [ 4]  116 	add	a, a
   0058 83            [ 4]  117 	add	a, e
   0059 DD 77 FC      [19]  118 	ld	-4 (ix), a
   005C 3E 00         [ 7]  119 	ld	a, #0x00
   005E 8A            [ 4]  120 	adc	a, d
   005F DD 77 FD      [19]  121 	ld	-3 (ix), a
   0062 DD 6E FC      [19]  122 	ld	l, -4 (ix)
   0065 DD 66 FD      [19]  123 	ld	h, -3 (ix)
   0068 7E            [ 7]  124 	ld	a, (hl)
   0069 DD 77 FE      [19]  125 	ld	-2 (ix), a
   006C 23            [ 6]  126 	inc	hl
   006D 7E            [ 7]  127 	ld	a, (hl)
   006E DD 77 FF      [19]  128 	ld	-1 (ix), a
                            129 ;e4vm_stack.c:34: (*v)->ds[(*v)->ds_p - 1] = (*v)->ds[(*v)->ds_p - 2];
   0071 79            [ 4]  130 	ld	a, c
   0072 3D            [ 4]  131 	dec	a
   0073 3D            [ 4]  132 	dec	a
   0074 87            [ 4]  133 	add	a, a
   0075 6F            [ 4]  134 	ld	l, a
   0076 26 00         [ 7]  135 	ld	h, #0x00
   0078 19            [11]  136 	add	hl, de
   0079 4E            [ 7]  137 	ld	c, (hl)
   007A 23            [ 6]  138 	inc	hl
   007B 46            [ 7]  139 	ld	b, (hl)
   007C D1            [10]  140 	pop	de
   007D E1            [10]  141 	pop	hl
   007E E5            [11]  142 	push	hl
   007F D5            [11]  143 	push	de
   0080 71            [ 7]  144 	ld	(hl), c
   0081 23            [ 6]  145 	inc	hl
   0082 70            [ 7]  146 	ld	(hl), b
                            147 ;e4vm_stack.c:35: (*v)->ds[(*v)->ds_p - 2] = T;
   0083 E1            [10]  148 	pop	hl
   0084 E5            [11]  149 	push	hl
   0085 4E            [ 7]  150 	ld	c, (hl)
   0086 23            [ 6]  151 	inc	hl
   0087 46            [ 7]  152 	ld	b, (hl)
   0088 21 44 00      [10]  153 	ld	hl, #0x0044
   008B 09            [11]  154 	add	hl, bc
   008C EB            [ 4]  155 	ex	de, hl
   008D 69            [ 4]  156 	ld	l, c
   008E 60            [ 4]  157 	ld	h, b
   008F 01 86 00      [10]  158 	ld	bc, #0x0086
   0092 09            [11]  159 	add	hl, bc
   0093 7E            [ 7]  160 	ld	a, (hl)
   0094 3D            [ 4]  161 	dec	a
   0095 3D            [ 4]  162 	dec	a
   0096 87            [ 4]  163 	add	a, a
   0097 6F            [ 4]  164 	ld	l, a
   0098 26 00         [ 7]  165 	ld	h, #0x00
   009A 19            [11]  166 	add	hl, de
   009B DD 7E FE      [19]  167 	ld	a, -2 (ix)
   009E 77            [ 7]  168 	ld	(hl), a
   009F 23            [ 6]  169 	inc	hl
   00A0 DD 7E FF      [19]  170 	ld	a, -1 (ix)
   00A3 77            [ 7]  171 	ld	(hl), a
                            172 ;e4vm_stack.c:36: }
   00A4 DD F9         [10]  173 	ld	sp, ix
   00A6 DD E1         [14]  174 	pop	ix
   00A8 C9            [10]  175 	ret
   00A9                     176 ___str_1:
   00A9 73 77 61 70         177 	.ascii "swap"
   00AD 00                  178 	.db 0x00
                            179 ;e4vm_stack.c:39: void e4vm_stack_dup (e4vm_type_x4thPtr *v)
                            180 ;	---------------------------------
                            181 ; Function e4vm_stack_dup
                            182 ; ---------------------------------
   00AE                     183 _e4vm_stack_dup::
   00AE CDr00r00      [17]  184 	call	___sdcc_enter_ix
                            185 ;e4vm_stack.c:41: Console_WriteStrLn((CHAR*)"dup", 4);
   00B1 21rFEr00      [10]  186 	ld	hl, #___str_2
   00B4 CDr00r00      [17]  187 	call	_Console_WriteStr_C_COMPACT
   00B7 CDr00r00      [17]  188 	call	_Console_WriteLn_COMPACT
                            189 ;e4vm_stack.c:42: (*v)->ds_p = (*v)->ds_p + 1;
   00BA DD 4E 04      [19]  190 	ld	c, 4 (ix)
   00BD DD 46 05      [19]  191 	ld	b, 5 (ix)
   00C0 69            [ 4]  192 	ld	l, c
   00C1 60            [ 4]  193 	ld	h, b
   00C2 5E            [ 7]  194 	ld	e, (hl)
   00C3 23            [ 6]  195 	inc	hl
   00C4 56            [ 7]  196 	ld	d, (hl)
   00C5 21 86 00      [10]  197 	ld	hl, #0x0086
   00C8 19            [11]  198 	add	hl, de
   00C9 5E            [ 7]  199 	ld	e, (hl)
   00CA 23            [ 6]  200 	inc	hl
   00CB 56            [ 7]  201 	ld	d, (hl)
   00CC 2B            [ 6]  202 	dec	hl
   00CD 13            [ 6]  203 	inc	de
   00CE 7A            [ 4]  204 	ld	a, d
   00CF 73            [ 7]  205 	ld	(hl), e
   00D0 23            [ 6]  206 	inc	hl
   00D1 77            [ 7]  207 	ld	(hl), a
                            208 ;e4vm_stack.c:43: (*v)->ds[(*v)->ds_p - 1] = (*v)->ds[(*v)->ds_p - 2];
   00D2 69            [ 4]  209 	ld	l, c
   00D3 60            [ 4]  210 	ld	h, b
   00D4 4E            [ 7]  211 	ld	c, (hl)
   00D5 23            [ 6]  212 	inc	hl
   00D6 46            [ 7]  213 	ld	b, (hl)
   00D7 21 44 00      [10]  214 	ld	hl, #0x0044
   00DA 09            [11]  215 	add	hl, bc
   00DB EB            [ 4]  216 	ex	de, hl
   00DC 69            [ 4]  217 	ld	l, c
   00DD 60            [ 4]  218 	ld	h, b
   00DE 01 86 00      [10]  219 	ld	bc, #0x0086
   00E1 09            [11]  220 	add	hl, bc
   00E2 6E            [ 7]  221 	ld	l, (hl)
   00E3 7D            [ 4]  222 	ld	a, l
   00E4 3D            [ 4]  223 	dec	a
   00E5 87            [ 4]  224 	add	a, a
   00E6 83            [ 4]  225 	add	a, e
   00E7 4F            [ 4]  226 	ld	c, a
   00E8 3E 00         [ 7]  227 	ld	a, #0x00
   00EA 8A            [ 4]  228 	adc	a, d
   00EB 47            [ 4]  229 	ld	b, a
   00EC 2D            [ 4]  230 	dec	l
   00ED 2D            [ 4]  231 	dec	l
   00EE CB 25         [ 8]  232 	sla	l
   00F0 26 00         [ 7]  233 	ld	h, #0x00
   00F2 19            [11]  234 	add	hl, de
   00F3 5E            [ 7]  235 	ld	e, (hl)
   00F4 23            [ 6]  236 	inc	hl
   00F5 56            [ 7]  237 	ld	d, (hl)
   00F6 7B            [ 4]  238 	ld	a, e
   00F7 02            [ 7]  239 	ld	(bc), a
   00F8 03            [ 6]  240 	inc	bc
   00F9 7A            [ 4]  241 	ld	a, d
   00FA 02            [ 7]  242 	ld	(bc), a
                            243 ;e4vm_stack.c:44: }
   00FB DD E1         [14]  244 	pop	ix
   00FD C9            [10]  245 	ret
   00FE                     246 ___str_2:
   00FE 64 75 70            247 	.ascii "dup"
   0101 00                  248 	.db 0x00
                            249 ;e4vm_stack.c:47: void e4vm_stack_over (e4vm_type_x4thPtr *v)
                            250 ;	---------------------------------
                            251 ; Function e4vm_stack_over
                            252 ; ---------------------------------
   0102                     253 _e4vm_stack_over::
   0102 CDr00r00      [17]  254 	call	___sdcc_enter_ix
                            255 ;e4vm_stack.c:49: Console_WriteStrLn((CHAR*)"over", 5);
   0105 21r53r01      [10]  256 	ld	hl, #___str_3
   0108 CDr00r00      [17]  257 	call	_Console_WriteStr_C_COMPACT
   010B CDr00r00      [17]  258 	call	_Console_WriteLn_COMPACT
                            259 ;e4vm_stack.c:50: (*v)->ds_p = (*v)->ds_p + 1;
   010E DD 4E 04      [19]  260 	ld	c, 4 (ix)
   0111 DD 46 05      [19]  261 	ld	b, 5 (ix)
   0114 69            [ 4]  262 	ld	l, c
   0115 60            [ 4]  263 	ld	h, b
   0116 5E            [ 7]  264 	ld	e, (hl)
   0117 23            [ 6]  265 	inc	hl
   0118 56            [ 7]  266 	ld	d, (hl)
   0119 21 86 00      [10]  267 	ld	hl, #0x0086
   011C 19            [11]  268 	add	hl, de
   011D 5E            [ 7]  269 	ld	e, (hl)
   011E 23            [ 6]  270 	inc	hl
   011F 56            [ 7]  271 	ld	d, (hl)
   0120 2B            [ 6]  272 	dec	hl
   0121 13            [ 6]  273 	inc	de
   0122 7A            [ 4]  274 	ld	a, d
   0123 73            [ 7]  275 	ld	(hl), e
   0124 23            [ 6]  276 	inc	hl
   0125 77            [ 7]  277 	ld	(hl), a
                            278 ;e4vm_stack.c:51: (*v)->ds[(*v)->ds_p - 1] = (*v)->ds[(*v)->ds_p - 3];
   0126 69            [ 4]  279 	ld	l, c
   0127 60            [ 4]  280 	ld	h, b
   0128 4E            [ 7]  281 	ld	c, (hl)
   0129 23            [ 6]  282 	inc	hl
   012A 46            [ 7]  283 	ld	b, (hl)
   012B 21 44 00      [10]  284 	ld	hl, #0x0044
   012E 09            [11]  285 	add	hl, bc
   012F EB            [ 4]  286 	ex	de, hl
   0130 69            [ 4]  287 	ld	l, c
   0131 60            [ 4]  288 	ld	h, b
   0132 01 86 00      [10]  289 	ld	bc, #0x0086
   0135 09            [11]  290 	add	hl, bc
   0136 6E            [ 7]  291 	ld	l, (hl)
   0137 7D            [ 4]  292 	ld	a, l
   0138 3D            [ 4]  293 	dec	a
   0139 87            [ 4]  294 	add	a, a
   013A 83            [ 4]  295 	add	a, e
   013B 4F            [ 4]  296 	ld	c, a
   013C 3E 00         [ 7]  297 	ld	a, #0x00
   013E 8A            [ 4]  298 	adc	a, d
   013F 47            [ 4]  299 	ld	b, a
   0140 7D            [ 4]  300 	ld	a, l
   0141 C6 FD         [ 7]  301 	add	a, #0xfd
   0143 87            [ 4]  302 	add	a, a
   0144 6F            [ 4]  303 	ld	l, a
   0145 26 00         [ 7]  304 	ld	h, #0x00
   0147 19            [11]  305 	add	hl, de
   0148 5E            [ 7]  306 	ld	e, (hl)
   0149 23            [ 6]  307 	inc	hl
   014A 56            [ 7]  308 	ld	d, (hl)
   014B 7B            [ 4]  309 	ld	a, e
   014C 02            [ 7]  310 	ld	(bc), a
   014D 03            [ 6]  311 	inc	bc
   014E 7A            [ 4]  312 	ld	a, d
   014F 02            [ 7]  313 	ld	(bc), a
                            314 ;e4vm_stack.c:52: }
   0150 DD E1         [14]  315 	pop	ix
   0152 C9            [10]  316 	ret
   0153                     317 ___str_3:
   0153 6F 76 65 72         318 	.ascii "over"
   0157 00                  319 	.db 0x00
                            320 ;e4vm_stack.c:55: void e4vm_stack_rot (e4vm_type_x4thPtr *v)
                            321 ;	---------------------------------
                            322 ; Function e4vm_stack_rot
                            323 ; ---------------------------------
   0158                     324 _e4vm_stack_rot::
   0158 CDr00r00      [17]  325 	call	___sdcc_enter_ix
   015B F5            [11]  326 	push	af
   015C F5            [11]  327 	push	af
   015D F5            [11]  328 	push	af
                            329 ;e4vm_stack.c:58: Console_WriteStrLn((CHAR*)"rot", 4);
   015E 21r01r02      [10]  330 	ld	hl, #___str_4
   0161 CDr00r00      [17]  331 	call	_Console_WriteStr_C_COMPACT
   0164 CDr00r00      [17]  332 	call	_Console_WriteLn_COMPACT
                            333 ;e4vm_stack.c:59: T = (*v)->ds[(*v)->ds_p - 3];
   0167 DD 7E 04      [19]  334 	ld	a, 4 (ix)
   016A DD 77 FA      [19]  335 	ld	-6 (ix), a
   016D DD 7E 05      [19]  336 	ld	a, 5 (ix)
   0170 DD 77 FB      [19]  337 	ld	-5 (ix), a
   0173 E1            [10]  338 	pop	hl
   0174 E5            [11]  339 	push	hl
   0175 4E            [ 7]  340 	ld	c, (hl)
   0176 23            [ 6]  341 	inc	hl
   0177 46            [ 7]  342 	ld	b, (hl)
   0178 21 44 00      [10]  343 	ld	hl, #0x0044
   017B 09            [11]  344 	add	hl, bc
   017C EB            [ 4]  345 	ex	de, hl
   017D 69            [ 4]  346 	ld	l, c
   017E 60            [ 4]  347 	ld	h, b
   017F 01 86 00      [10]  348 	ld	bc, #0x0086
   0182 09            [11]  349 	add	hl, bc
   0183 4E            [ 7]  350 	ld	c, (hl)
   0184 79            [ 4]  351 	ld	a, c
   0185 C6 FD         [ 7]  352 	add	a, #0xfd
   0187 87            [ 4]  353 	add	a, a
   0188 83            [ 4]  354 	add	a, e
   0189 DD 77 FC      [19]  355 	ld	-4 (ix), a
   018C 3E 00         [ 7]  356 	ld	a, #0x00
   018E 8A            [ 4]  357 	adc	a, d
   018F DD 77 FD      [19]  358 	ld	-3 (ix), a
   0192 DD 6E FC      [19]  359 	ld	l, -4 (ix)
   0195 DD 66 FD      [19]  360 	ld	h, -3 (ix)
   0198 7E            [ 7]  361 	ld	a, (hl)
   0199 DD 77 FE      [19]  362 	ld	-2 (ix), a
   019C 23            [ 6]  363 	inc	hl
   019D 7E            [ 7]  364 	ld	a, (hl)
   019E DD 77 FF      [19]  365 	ld	-1 (ix), a
                            366 ;e4vm_stack.c:60: (*v)->ds[(*v)->ds_p - 3] = (*v)->ds[(*v)->ds_p - 2];
   01A1 79            [ 4]  367 	ld	a, c
   01A2 3D            [ 4]  368 	dec	a
   01A3 3D            [ 4]  369 	dec	a
   01A4 87            [ 4]  370 	add	a, a
   01A5 6F            [ 4]  371 	ld	l, a
   01A6 26 00         [ 7]  372 	ld	h, #0x00
   01A8 19            [11]  373 	add	hl, de
   01A9 4E            [ 7]  374 	ld	c, (hl)
   01AA 23            [ 6]  375 	inc	hl
   01AB 46            [ 7]  376 	ld	b, (hl)
   01AC D1            [10]  377 	pop	de
   01AD E1            [10]  378 	pop	hl
   01AE E5            [11]  379 	push	hl
   01AF D5            [11]  380 	push	de
   01B0 71            [ 7]  381 	ld	(hl), c
   01B1 23            [ 6]  382 	inc	hl
   01B2 70            [ 7]  383 	ld	(hl), b
                            384 ;e4vm_stack.c:61: (*v)->ds[(*v)->ds_p - 2] = (*v)->ds[(*v)->ds_p - 1];
   01B3 E1            [10]  385 	pop	hl
   01B4 E5            [11]  386 	push	hl
   01B5 4E            [ 7]  387 	ld	c, (hl)
   01B6 23            [ 6]  388 	inc	hl
   01B7 46            [ 7]  389 	ld	b, (hl)
   01B8 21 44 00      [10]  390 	ld	hl, #0x0044
   01BB 09            [11]  391 	add	hl, bc
   01BC EB            [ 4]  392 	ex	de, hl
   01BD 69            [ 4]  393 	ld	l, c
   01BE 60            [ 4]  394 	ld	h, b
   01BF 01 86 00      [10]  395 	ld	bc, #0x0086
   01C2 09            [11]  396 	add	hl, bc
   01C3 6E            [ 7]  397 	ld	l, (hl)
   01C4 7D            [ 4]  398 	ld	a, l
   01C5 3D            [ 4]  399 	dec	a
   01C6 3D            [ 4]  400 	dec	a
   01C7 87            [ 4]  401 	add	a, a
   01C8 83            [ 4]  402 	add	a, e
   01C9 4F            [ 4]  403 	ld	c, a
   01CA 3E 00         [ 7]  404 	ld	a, #0x00
   01CC 8A            [ 4]  405 	adc	a, d
   01CD 47            [ 4]  406 	ld	b, a
   01CE 2D            [ 4]  407 	dec	l
   01CF CB 25         [ 8]  408 	sla	l
   01D1 26 00         [ 7]  409 	ld	h, #0x00
   01D3 19            [11]  410 	add	hl, de
   01D4 5E            [ 7]  411 	ld	e, (hl)
   01D5 23            [ 6]  412 	inc	hl
   01D6 56            [ 7]  413 	ld	d, (hl)
   01D7 7B            [ 4]  414 	ld	a, e
   01D8 02            [ 7]  415 	ld	(bc), a
   01D9 03            [ 6]  416 	inc	bc
   01DA 7A            [ 4]  417 	ld	a, d
   01DB 02            [ 7]  418 	ld	(bc), a
                            419 ;e4vm_stack.c:62: (*v)->ds[(*v)->ds_p - 1] = T;
   01DC E1            [10]  420 	pop	hl
   01DD E5            [11]  421 	push	hl
   01DE 4E            [ 7]  422 	ld	c, (hl)
   01DF 23            [ 6]  423 	inc	hl
   01E0 46            [ 7]  424 	ld	b, (hl)
   01E1 21 44 00      [10]  425 	ld	hl, #0x0044
   01E4 09            [11]  426 	add	hl, bc
   01E5 EB            [ 4]  427 	ex	de, hl
   01E6 69            [ 4]  428 	ld	l, c
   01E7 60            [ 4]  429 	ld	h, b
   01E8 01 86 00      [10]  430 	ld	bc, #0x0086
   01EB 09            [11]  431 	add	hl, bc
   01EC 7E            [ 7]  432 	ld	a, (hl)
   01ED 3D            [ 4]  433 	dec	a
   01EE 87            [ 4]  434 	add	a, a
   01EF 6F            [ 4]  435 	ld	l, a
   01F0 26 00         [ 7]  436 	ld	h, #0x00
   01F2 19            [11]  437 	add	hl, de
   01F3 DD 7E FE      [19]  438 	ld	a, -2 (ix)
   01F6 77            [ 7]  439 	ld	(hl), a
   01F7 23            [ 6]  440 	inc	hl
   01F8 DD 7E FF      [19]  441 	ld	a, -1 (ix)
   01FB 77            [ 7]  442 	ld	(hl), a
                            443 ;e4vm_stack.c:63: }
   01FC DD F9         [10]  444 	ld	sp, ix
   01FE DD E1         [14]  445 	pop	ix
   0200 C9            [10]  446 	ret
   0201                     447 ___str_4:
   0201 72 6F 74            448 	.ascii "rot"
   0204 00                  449 	.db 0x00
                            450 ;e4vm_stack.c:66: void e4vm_stack_nrot (e4vm_type_x4thPtr *v)
                            451 ;	---------------------------------
                            452 ; Function e4vm_stack_nrot
                            453 ; ---------------------------------
   0205                     454 _e4vm_stack_nrot::
   0205 CDr00r00      [17]  455 	call	___sdcc_enter_ix
   0208 F5            [11]  456 	push	af
   0209 F5            [11]  457 	push	af
   020A F5            [11]  458 	push	af
                            459 ;e4vm_stack.c:69: Console_WriteStrLn((CHAR*)"nrot", 5);
   020B 21rB0r02      [10]  460 	ld	hl, #___str_5
   020E CDr00r00      [17]  461 	call	_Console_WriteStr_C_COMPACT
   0211 CDr00r00      [17]  462 	call	_Console_WriteLn_COMPACT
                            463 ;e4vm_stack.c:70: T = (*v)->ds[(*v)->ds_p - 1];
   0214 DD 7E 04      [19]  464 	ld	a, 4 (ix)
   0217 DD 77 FA      [19]  465 	ld	-6 (ix), a
   021A DD 7E 05      [19]  466 	ld	a, 5 (ix)
   021D DD 77 FB      [19]  467 	ld	-5 (ix), a
   0220 E1            [10]  468 	pop	hl
   0221 E5            [11]  469 	push	hl
   0222 4E            [ 7]  470 	ld	c, (hl)
   0223 23            [ 6]  471 	inc	hl
   0224 46            [ 7]  472 	ld	b, (hl)
   0225 21 44 00      [10]  473 	ld	hl, #0x0044
   0228 09            [11]  474 	add	hl, bc
   0229 EB            [ 4]  475 	ex	de, hl
   022A 69            [ 4]  476 	ld	l, c
   022B 60            [ 4]  477 	ld	h, b
   022C 01 86 00      [10]  478 	ld	bc, #0x0086
   022F 09            [11]  479 	add	hl, bc
   0230 4E            [ 7]  480 	ld	c, (hl)
   0231 79            [ 4]  481 	ld	a, c
   0232 3D            [ 4]  482 	dec	a
   0233 87            [ 4]  483 	add	a, a
   0234 83            [ 4]  484 	add	a, e
   0235 DD 77 FC      [19]  485 	ld	-4 (ix), a
   0238 3E 00         [ 7]  486 	ld	a, #0x00
   023A 8A            [ 4]  487 	adc	a, d
   023B DD 77 FD      [19]  488 	ld	-3 (ix), a
   023E DD 6E FC      [19]  489 	ld	l, -4 (ix)
   0241 DD 66 FD      [19]  490 	ld	h, -3 (ix)
   0244 7E            [ 7]  491 	ld	a, (hl)
   0245 DD 77 FE      [19]  492 	ld	-2 (ix), a
   0248 23            [ 6]  493 	inc	hl
   0249 7E            [ 7]  494 	ld	a, (hl)
   024A DD 77 FF      [19]  495 	ld	-1 (ix), a
                            496 ;e4vm_stack.c:71: (*v)->ds[(*v)->ds_p - 1] = (*v)->ds[(*v)->ds_p - 2];
   024D 79            [ 4]  497 	ld	a, c
   024E 3D            [ 4]  498 	dec	a
   024F 3D            [ 4]  499 	dec	a
   0250 87            [ 4]  500 	add	a, a
   0251 6F            [ 4]  501 	ld	l, a
   0252 26 00         [ 7]  502 	ld	h, #0x00
   0254 19            [11]  503 	add	hl, de
   0255 4E            [ 7]  504 	ld	c, (hl)
   0256 23            [ 6]  505 	inc	hl
   0257 46            [ 7]  506 	ld	b, (hl)
   0258 D1            [10]  507 	pop	de
   0259 E1            [10]  508 	pop	hl
   025A E5            [11]  509 	push	hl
   025B D5            [11]  510 	push	de
   025C 71            [ 7]  511 	ld	(hl), c
   025D 23            [ 6]  512 	inc	hl
   025E 70            [ 7]  513 	ld	(hl), b
                            514 ;e4vm_stack.c:72: (*v)->ds[(*v)->ds_p - 2] = (*v)->ds[(*v)->ds_p - 3];
   025F E1            [10]  515 	pop	hl
   0260 E5            [11]  516 	push	hl
   0261 4E            [ 7]  517 	ld	c, (hl)
   0262 23            [ 6]  518 	inc	hl
   0263 46            [ 7]  519 	ld	b, (hl)
   0264 21 44 00      [10]  520 	ld	hl, #0x0044
   0267 09            [11]  521 	add	hl, bc
   0268 EB            [ 4]  522 	ex	de, hl
   0269 69            [ 4]  523 	ld	l, c
   026A 60            [ 4]  524 	ld	h, b
   026B 01 86 00      [10]  525 	ld	bc, #0x0086
   026E 09            [11]  526 	add	hl, bc
   026F 6E            [ 7]  527 	ld	l, (hl)
   0270 7D            [ 4]  528 	ld	a, l
   0271 3D            [ 4]  529 	dec	a
   0272 3D            [ 4]  530 	dec	a
   0273 87            [ 4]  531 	add	a, a
   0274 83            [ 4]  532 	add	a, e
   0275 4F            [ 4]  533 	ld	c, a
   0276 3E 00         [ 7]  534 	ld	a, #0x00
   0278 8A            [ 4]  535 	adc	a, d
   0279 47            [ 4]  536 	ld	b, a
   027A 7D            [ 4]  537 	ld	a, l
   027B C6 FD         [ 7]  538 	add	a, #0xfd
   027D 87            [ 4]  539 	add	a, a
   027E 6F            [ 4]  540 	ld	l, a
   027F 26 00         [ 7]  541 	ld	h, #0x00
   0281 19            [11]  542 	add	hl, de
   0282 5E            [ 7]  543 	ld	e, (hl)
   0283 23            [ 6]  544 	inc	hl
   0284 56            [ 7]  545 	ld	d, (hl)
   0285 7B            [ 4]  546 	ld	a, e
   0286 02            [ 7]  547 	ld	(bc), a
   0287 03            [ 6]  548 	inc	bc
   0288 7A            [ 4]  549 	ld	a, d
   0289 02            [ 7]  550 	ld	(bc), a
                            551 ;e4vm_stack.c:73: (*v)->ds[(*v)->ds_p - 3] = T;
   028A E1            [10]  552 	pop	hl
   028B E5            [11]  553 	push	hl
   028C 4E            [ 7]  554 	ld	c, (hl)
   028D 23            [ 6]  555 	inc	hl
   028E 46            [ 7]  556 	ld	b, (hl)
   028F 21 44 00      [10]  557 	ld	hl, #0x0044
   0292 09            [11]  558 	add	hl, bc
   0293 EB            [ 4]  559 	ex	de, hl
   0294 69            [ 4]  560 	ld	l, c
   0295 60            [ 4]  561 	ld	h, b
   0296 01 86 00      [10]  562 	ld	bc, #0x0086
   0299 09            [11]  563 	add	hl, bc
   029A 7E            [ 7]  564 	ld	a, (hl)
   029B C6 FD         [ 7]  565 	add	a, #0xfd
   029D 87            [ 4]  566 	add	a, a
   029E 6F            [ 4]  567 	ld	l, a
   029F 26 00         [ 7]  568 	ld	h, #0x00
   02A1 19            [11]  569 	add	hl, de
   02A2 DD 7E FE      [19]  570 	ld	a, -2 (ix)
   02A5 77            [ 7]  571 	ld	(hl), a
   02A6 23            [ 6]  572 	inc	hl
   02A7 DD 7E FF      [19]  573 	ld	a, -1 (ix)
   02AA 77            [ 7]  574 	ld	(hl), a
                            575 ;e4vm_stack.c:74: }
   02AB DD F9         [10]  576 	ld	sp, ix
   02AD DD E1         [14]  577 	pop	ix
   02AF C9            [10]  578 	ret
   02B0                     579 ___str_5:
   02B0 6E 72 6F 74         580 	.ascii "nrot"
   02B4 00                  581 	.db 0x00
                            582 ;e4vm_stack.c:78: export void *e4vm_stack__init (void)
                            583 ;	---------------------------------
                            584 ; Function e4vm_stack__init
                            585 ; ---------------------------------
   02B5                     586 _e4vm_stack__init::
                            587 ;e4vm_stack.c:80: __DEFMOD;
   02B5 21rB5r02      [10]  588 	LD	HL,#. 
   02B8 36 C9         [10]  589 	LD (HL),#0xC9 
                            590 ;e4vm_stack.c:86: }
   02BA C9            [10]  591 	ret
                            592 	.area _CODE
                            593 	.area _INITIALIZER
                            594 	.area _CABS (ABS)
