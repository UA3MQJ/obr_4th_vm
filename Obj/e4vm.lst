                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.9.3 #11378 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module e4vm
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _e4vm_core_ext__init
                             13 	.globl _e4vm_core_ext_branch
                             14 	.globl _e4vm_utils__init
                             15 	.globl _e4vm_utils_init
                             16 	.globl _e4vm_core__init
                             17 	.globl _e4vm_core_do_nop
                             18 	.globl _e4vm_core_do_next
                             19 	.globl _e4vm_core_do_list
                             20 	.globl _e4vm_core_do_exit
                             21 	.globl _e4vm_type__init
                             22 	.globl _Basic_Quit_IM1
                             23 	.globl _Console_Clear_COMPACT
                             24 	.globl _Console_WriteStr_C_COMPACT
                             25 	.globl _Console_WriteInt_COMPACT
                             26 	.globl _Console_WriteLn_COMPACT
                             27 ;--------------------------------------------------------
                             28 ; special function registers
                             29 ;--------------------------------------------------------
                             30 ;--------------------------------------------------------
                             31 ; ram data
                             32 ;--------------------------------------------------------
                             33 	.area _DATA
   0000                      34 _e4vm_vm_static:
   0000                      35 	.ds 269
   010D                      36 _e4vm_vm:
   010D                      37 	.ds 2
                             38 ;--------------------------------------------------------
                             39 ; ram data
                             40 ;--------------------------------------------------------
                             41 	.area _INITIALIZED
                             42 ;--------------------------------------------------------
                             43 ; absolute external ram data
                             44 ;--------------------------------------------------------
                             45 	.area _DABS (ABS)
                             46 ;--------------------------------------------------------
                             47 ; global & static initialisations
                             48 ;--------------------------------------------------------
                             49 	.area _HOME
                             50 	.area _GSINIT
                             51 	.area _GSFINAL
                             52 	.area _GSINIT
                             53 ;--------------------------------------------------------
                             54 ; Home
                             55 ;--------------------------------------------------------
                             56 	.area _HOME
                             57 	.area _HOME
                             58 ;--------------------------------------------------------
                             59 ; code
                             60 ;--------------------------------------------------------
                             61 	.area _CODE
                             62 ;e4vm.c:23: static void e4vm_do_hello (e4vm_type_x4thPtr *v)
                             63 ;	---------------------------------
                             64 ; Function e4vm_do_hello
                             65 ; ---------------------------------
   0000                      66 _e4vm_do_hello:
   0000 CDr00r00      [17]   67 	call	___sdcc_enter_ix
                             68 ;e4vm.c:25: Console_WriteStrLn((CHAR*)"hello!", 7);
   0003 21r0Er00      [10]   69 	ld	hl, #___str_0
   0006 CDr00r00      [17]   70 	call	_Console_WriteStr_C_COMPACT
                             71 ;e4vm.c:26: }
   0009 DD E1         [14]   72 	pop	ix
   000B C3r00r00      [10]   73 	jp	_Console_WriteLn_COMPACT
   000E                      74 ___str_0:
   000E 68 65 6C 6C 6F 21    75 	.ascii "hello!"
   0014 00                   76 	.db 0x00
                             77 ;e4vm.c:28: static void e4vm_test_branch (e4vm_type_x4thPtr *v)
                             78 ;	---------------------------------
                             79 ; Function e4vm_test_branch
                             80 ; ---------------------------------
   0015                      81 _e4vm_test_branch:
   0015 CDr00r00      [17]   82 	call	___sdcc_enter_ix
                             83 ;e4vm.c:31: Console_WriteStr((CHAR*)"branch test", 12);
   0018 21rB4r00      [10]   84 	ld	hl, #___str_1
   001B CDr00r00      [17]   85 	call	_Console_WriteStr_C_COMPACT
                             86 ;e4vm.c:32: e4vm_utils_init(v);
   001E DD 6E 04      [19]   87 	ld	l, 4 (ix)
   0021 DD 66 05      [19]   88 	ld	h, 5 (ix)
   0024 E5            [11]   89 	push	hl
   0025 CDr00r00      [17]   90 	call	_e4vm_utils_init
   0028 F1            [10]   91 	pop	af
                             92 ;e4vm.c:33: (*v)->core[0] = e4vm_core_do_nop;
   0029 DD 4E 04      [19]   93 	ld	c, 4 (ix)
   002C DD 46 05      [19]   94 	ld	b, 5 (ix)
   002F 69            [ 4]   95 	ld	l, c
   0030 60            [ 4]   96 	ld	h, b
   0031 5E            [ 7]   97 	ld	e, (hl)
   0032 23            [ 6]   98 	inc	hl
   0033 56            [ 7]   99 	ld	d, (hl)
   0034 21 CD 00      [10]  100 	ld	hl, #0x00cd
   0037 19            [11]  101 	add	hl, de
   0038 EB            [ 4]  102 	ex	de, hl
   0039 3Er00         [ 7]  103 	ld	a, #<(_e4vm_core_do_nop)
   003B 12            [ 7]  104 	ld	(de), a
   003C 13            [ 6]  105 	inc	de
   003D 3Es00         [ 7]  106 	ld	a, #>(_e4vm_core_do_nop)
   003F 12            [ 7]  107 	ld	(de), a
                            108 ;e4vm.c:34: (*v)->core[1] = e4vm_core_do_next;
   0040 69            [ 4]  109 	ld	l, c
   0041 60            [ 4]  110 	ld	h, b
   0042 5E            [ 7]  111 	ld	e, (hl)
   0043 23            [ 6]  112 	inc	hl
   0044 56            [ 7]  113 	ld	d, (hl)
   0045 21 CF 00      [10]  114 	ld	hl, #0x00cf
   0048 19            [11]  115 	add	hl, de
   0049 EB            [ 4]  116 	ex	de, hl
   004A 3Er00         [ 7]  117 	ld	a, #<(_e4vm_core_do_next)
   004C 12            [ 7]  118 	ld	(de), a
   004D 13            [ 6]  119 	inc	de
   004E 3Es00         [ 7]  120 	ld	a, #>(_e4vm_core_do_next)
   0050 12            [ 7]  121 	ld	(de), a
                            122 ;e4vm.c:35: (*v)->core[2] = e4vm_core_do_list;
   0051 69            [ 4]  123 	ld	l, c
   0052 60            [ 4]  124 	ld	h, b
   0053 5E            [ 7]  125 	ld	e, (hl)
   0054 23            [ 6]  126 	inc	hl
   0055 56            [ 7]  127 	ld	d, (hl)
   0056 21 D1 00      [10]  128 	ld	hl, #0x00d1
   0059 19            [11]  129 	add	hl, de
   005A EB            [ 4]  130 	ex	de, hl
   005B 3Er00         [ 7]  131 	ld	a, #<(_e4vm_core_do_list)
   005D 12            [ 7]  132 	ld	(de), a
   005E 13            [ 6]  133 	inc	de
   005F 3Es00         [ 7]  134 	ld	a, #>(_e4vm_core_do_list)
   0061 12            [ 7]  135 	ld	(de), a
                            136 ;e4vm.c:36: (*v)->core[3] = e4vm_core_do_exit;
   0062 69            [ 4]  137 	ld	l, c
   0063 60            [ 4]  138 	ld	h, b
   0064 5E            [ 7]  139 	ld	e, (hl)
   0065 23            [ 6]  140 	inc	hl
   0066 56            [ 7]  141 	ld	d, (hl)
   0067 21 D3 00      [10]  142 	ld	hl, #0x00d3
   006A 19            [11]  143 	add	hl, de
   006B EB            [ 4]  144 	ex	de, hl
   006C 3Er00         [ 7]  145 	ld	a, #<(_e4vm_core_do_exit)
   006E 12            [ 7]  146 	ld	(de), a
   006F 13            [ 6]  147 	inc	de
   0070 3Es00         [ 7]  148 	ld	a, #>(_e4vm_core_do_exit)
   0072 12            [ 7]  149 	ld	(de), a
                            150 ;e4vm.c:37: (*v)->core[4] = e4vm_core_ext_branch;
   0073 69            [ 4]  151 	ld	l, c
   0074 60            [ 4]  152 	ld	h, b
   0075 5E            [ 7]  153 	ld	e, (hl)
   0076 23            [ 6]  154 	inc	hl
   0077 56            [ 7]  155 	ld	d, (hl)
   0078 21 D5 00      [10]  156 	ld	hl, #0x00d5
   007B 19            [11]  157 	add	hl, de
   007C EB            [ 4]  158 	ex	de, hl
   007D 3Er00         [ 7]  159 	ld	a, #<(_e4vm_core_ext_branch)
   007F 12            [ 7]  160 	ld	(de), a
   0080 13            [ 6]  161 	inc	de
   0081 3Es00         [ 7]  162 	ld	a, #>(_e4vm_core_ext_branch)
   0083 12            [ 7]  163 	ld	(de), a
                            164 ;e4vm.c:38: Console_WriteInt(321);
   0084 C5            [11]  165 	push	bc
   0085 21 41 01      [10]  166 	ld	hl, #0x0141
   0088 CDr00r00      [17]  167 	call	_Console_WriteInt_COMPACT
                            168 ;e4vm.c:39: if ((*v)->ip == 777) {
   008B E1            [10]  169 	pop	hl
   008C 4E            [ 7]  170 	ld	c, (hl)
   008D 23            [ 6]  171 	inc	hl
   008E 66            [ 7]  172 	ld	h, (hl)
   008F 69            [ 4]  173 	ld	l, c
   0090 4E            [ 7]  174 	ld	c, (hl)
   0091 23            [ 6]  175 	inc	hl
   0092 46            [ 7]  176 	ld	b, (hl)
   0093 79            [ 4]  177 	ld	a, c
   0094 D6 09         [ 7]  178 	sub	a, #0x09
   0096 20 10         [12]  179 	jr	NZ,00102$
   0098 78            [ 4]  180 	ld	a, b
   0099 D6 03         [ 7]  181 	sub	a, #0x03
   009B 20 0B         [12]  182 	jr	NZ,00102$
                            183 ;e4vm.c:40: Console_WriteStrLn((CHAR*)" - ok", 6);
   009D 21rC0r00      [10]  184 	ld	hl, #___str_2
   00A0 CDr00r00      [17]  185 	call	_Console_WriteStr_C_COMPACT
   00A3 CDr00r00      [17]  186 	call	_Console_WriteLn_COMPACT
   00A6 18 09         [12]  187 	jr	00104$
   00A8                     188 00102$:
                            189 ;e4vm.c:42: Console_WriteStrLn((CHAR*)" - error", 9);
   00A8 21rC6r00      [10]  190 	ld	hl, #___str_3
   00AB CDr00r00      [17]  191 	call	_Console_WriteStr_C_COMPACT
   00AE CDr00r00      [17]  192 	call	_Console_WriteLn_COMPACT
   00B1                     193 00104$:
                            194 ;e4vm.c:44: }
   00B1 DD E1         [14]  195 	pop	ix
   00B3 C9            [10]  196 	ret
   00B4                     197 ___str_1:
   00B4 62 72 61 6E 63 68   198 	.ascii "branch test"
        20 74 65 73 74
   00BF 00                  199 	.db 0x00
   00C0                     200 ___str_2:
   00C0 20 2D 20 6F 6B      201 	.ascii " - ok"
   00C5 00                  202 	.db 0x00
   00C6                     203 ___str_3:
   00C6 20 2D 20 65 72 72   204 	.ascii " - error"
        6F 72
   00CE 00                  205 	.db 0x00
                            206 ;e4vm.c:47: int main (int argc, char **argv)
                            207 ;	---------------------------------
                            208 ; Function main
                            209 ; ---------------------------------
   00CF                     210 _main::
                            211 ;e4vm.c:52: __IMPORT(e4vm_core__init);
   00CF CDr00r00      [17]  212 	call	_e4vm_core__init
                            213 ;e4vm.c:53: __IMPORT(e4vm_core_ext__init);
   00D2 CDr00r00      [17]  214 	call	_e4vm_core_ext__init
                            215 ;e4vm.c:54: __IMPORT(e4vm_type__init);
   00D5 CDr00r00      [17]  216 	call	_e4vm_type__init
                            217 ;e4vm.c:55: __IMPORT(e4vm_utils__init);
   00D8 CDr00r00      [17]  218 	call	_e4vm_utils__init
                            219 ;e4vm.c:58: Basic_Init();
   00DB FD CB 01 A6   [23]  220 	res	4,1(iy) 
   00DF CD 42 16      [17]  221 	call 0x1642 
                            222 ;e4vm.c:59: Console_Clear(7);
   00E2 2E 07         [ 7]  223 	ld	l, #0x07
   00E4 CDr00r00      [17]  224 	call	_Console_Clear_COMPACT
                            225 ;e4vm.c:60: Console_SetColors(56);
   00E7 21r00r00      [10]  226 	ld	hl, #_Console_attrib
   00EA 36 38         [10]  227 	ld	(hl), #0x38
                            228 ;e4vm.c:61: Console_WriteInt(321);
   00EC 21 41 01      [10]  229 	ld	hl, #0x0141
   00EF CDr00r00      [17]  230 	call	_Console_WriteInt_COMPACT
                            231 ;e4vm.c:62: e4vm_vm = (e4vm_type_x4thPtr)((SYSTEM_ADRINT)&e4vm_vm_static);
   00F2 21r00r00      [10]  232 	ld	hl, #_e4vm_vm_static
   00F5 22r0Dr01      [16]  233 	ld	(_e4vm_vm), hl
                            234 ;e4vm.c:63: e4vm_test_branch(&e4vm_vm);
   00F8 21r0Dr01      [10]  235 	ld	hl, #_e4vm_vm
   00FB E5            [11]  236 	push	hl
   00FC CDr15r00      [17]  237 	call	_e4vm_test_branch
   00FF F1            [10]  238 	pop	af
                            239 ;e4vm.c:64: Basic_Quit();
                            240 ;e4vm.c:65: __FINI;
                            241 ;e4vm.c:66: }
   0100 C3r00r00      [10]  242 	jp  _Basic_Quit_IM1
                            243 	.area _CODE
                            244 	.area _INITIALIZER
                            245 	.area _CABS (ABS)
