                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.9.3 #11378 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module e4vm_core
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _e4vm_core__init
                             12 	.globl _e4vm_core_do_nop
                             13 	.globl _e4vm_core_do_list
                             14 	.globl _e4vm_core_do_next
                             15 	.globl _e4vm_core_do_exit
                             16 ;--------------------------------------------------------
                             17 ; special function registers
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; ram data
                             21 ;--------------------------------------------------------
                             22 	.area _DATA
                             23 ;--------------------------------------------------------
                             24 ; ram data
                             25 ;--------------------------------------------------------
                             26 	.area _INITIALIZED
                             27 ;--------------------------------------------------------
                             28 ; absolute external ram data
                             29 ;--------------------------------------------------------
                             30 	.area _DABS (ABS)
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _GSINIT
                             36 	.area _GSFINAL
                             37 	.area _GSINIT
                             38 ;--------------------------------------------------------
                             39 ; Home
                             40 ;--------------------------------------------------------
                             41 	.area _HOME
                             42 	.area _HOME
                             43 ;--------------------------------------------------------
                             44 ; code
                             45 ;--------------------------------------------------------
                             46 	.area _CODE
                             47 ;e4vm_core.c:20: void e4vm_core_do_nop (e4vm_type_x4thPtr *v)
                             48 ;	---------------------------------
                             49 ; Function e4vm_core_do_nop
                             50 ; ---------------------------------
   0000                      51 _e4vm_core_do_nop::
                             52 ;e4vm_core.c:22: }
   0000 DD E1         [14]   53 	pop	ix
   0002 C3r00r00      [10]   54 	jp	___sdcc_enter_ix
                             55 ;e4vm_core.c:25: void e4vm_core_do_list (e4vm_type_x4thPtr *v)
                             56 ;	---------------------------------
                             57 ; Function e4vm_core_do_list
                             58 ; ---------------------------------
   0005                      59 _e4vm_core_do_list::
   0005 CDr00r00      [17]   60 	call	___sdcc_enter_ix
   0008 F5            [11]   61 	push	af
                             62 ;e4vm_core.c:28: (*v)->rs[(*v)->rs_p] = (*v)->ip;
   0009 DD 7E 04      [19]   63 	ld	a, 4 (ix)
   000C DD 77 FE      [19]   64 	ld	-2 (ix), a
   000F DD 7E 05      [19]   65 	ld	a, 5 (ix)
   0012 DD 77 FF      [19]   66 	ld	-1 (ix), a
   0015 E1            [10]   67 	pop	hl
   0016 E5            [11]   68 	push	hl
   0017 4E            [ 7]   69 	ld	c, (hl)
   0018 23            [ 6]   70 	inc	hl
   0019 46            [ 7]   71 	ld	b, (hl)
   001A 21 04 00      [10]   72 	ld	hl, #0x0004
   001D 09            [11]   73 	add	hl, bc
   001E EB            [ 4]   74 	ex	de, hl
   001F 69            [ 4]   75 	ld	l, c
   0020 60            [ 4]   76 	ld	h, b
   0021 C5            [11]   77 	push	bc
   0022 01 84 00      [10]   78 	ld	bc, #0x0084
   0025 09            [11]   79 	add	hl, bc
   0026 C1            [10]   80 	pop	bc
   0027 7E            [ 7]   81 	ld	a, (hl)
   0028 23            [ 6]   82 	inc	hl
   0029 66            [ 7]   83 	ld	h, (hl)
   002A 6F            [ 4]   84 	ld	l, a
   002B 29            [11]   85 	add	hl, hl
   002C 19            [11]   86 	add	hl, de
   002D EB            [ 4]   87 	ex	de, hl
   002E 69            [ 4]   88 	ld	l, c
   002F 60            [ 4]   89 	ld	h, b
   0030 4E            [ 7]   90 	ld	c, (hl)
   0031 23            [ 6]   91 	inc	hl
   0032 46            [ 7]   92 	ld	b, (hl)
   0033 79            [ 4]   93 	ld	a, c
   0034 12            [ 7]   94 	ld	(de), a
   0035 13            [ 6]   95 	inc	de
   0036 78            [ 4]   96 	ld	a, b
   0037 12            [ 7]   97 	ld	(de), a
                             98 ;e4vm_core.c:29: (*v)->rs_p = (*v)->rs_p + 1;
   0038 E1            [10]   99 	pop	hl
   0039 E5            [11]  100 	push	hl
   003A 4E            [ 7]  101 	ld	c, (hl)
   003B 23            [ 6]  102 	inc	hl
   003C 46            [ 7]  103 	ld	b, (hl)
   003D 21 84 00      [10]  104 	ld	hl, #0x0084
   0040 09            [11]  105 	add	hl, bc
   0041 4E            [ 7]  106 	ld	c, (hl)
   0042 23            [ 6]  107 	inc	hl
   0043 46            [ 7]  108 	ld	b, (hl)
   0044 2B            [ 6]  109 	dec	hl
   0045 03            [ 6]  110 	inc	bc
   0046 78            [ 4]  111 	ld	a, b
   0047 71            [ 7]  112 	ld	(hl), c
   0048 23            [ 6]  113 	inc	hl
   0049 77            [ 7]  114 	ld	(hl), a
                            115 ;e4vm_core.c:28: (*v)->rs[(*v)->rs_p] = (*v)->ip;
   004A E1            [10]  116 	pop	hl
   004B E5            [11]  117 	push	hl
   004C 4E            [ 7]  118 	ld	c, (hl)
   004D 23            [ 6]  119 	inc	hl
   004E 46            [ 7]  120 	ld	b, (hl)
                            121 ;e4vm_core.c:30: (*v)->ip = (*v)->wp + 1;
   004F 69            [ 4]  122 	ld	l, c
   0050 60            [ 4]  123 	ld	h, b
   0051 23            [ 6]  124 	inc	hl
   0052 23            [ 6]  125 	inc	hl
   0053 5E            [ 7]  126 	ld	e, (hl)
   0054 23            [ 6]  127 	inc	hl
   0055 56            [ 7]  128 	ld	d, (hl)
   0056 13            [ 6]  129 	inc	de
   0057 7B            [ 4]  130 	ld	a, e
   0058 02            [ 7]  131 	ld	(bc), a
   0059 03            [ 6]  132 	inc	bc
   005A 7A            [ 4]  133 	ld	a, d
   005B 02            [ 7]  134 	ld	(bc), a
                            135 ;e4vm_core.c:31: }
   005C F1            [10]  136 	pop	af
   005D DD E1         [14]  137 	pop	ix
   005F C9            [10]  138 	ret
                            139 ;e4vm_core.c:34: void e4vm_core_do_next (e4vm_type_x4thPtr *v)
                            140 ;	---------------------------------
                            141 ; Function e4vm_core_do_next
                            142 ; ---------------------------------
   0060                     143 _e4vm_core_do_next::
   0060 CDr00r00      [17]  144 	call	___sdcc_enter_ix
   0063 F5            [11]  145 	push	af
   0064 F5            [11]  146 	push	af
                            147 ;e4vm_core.c:37: while (!((*v)->ip == 0)) {
   0065 DD 4E 04      [19]  148 	ld	c, 4 (ix)
   0068 DD 46 05      [19]  149 	ld	b, 5 (ix)
   006B                     150 00101$:
   006B 0A            [ 7]  151 	ld	a, (bc)
   006C DD 77 FC      [19]  152 	ld	-4 (ix), a
   006F 03            [ 6]  153 	inc	bc
   0070 0A            [ 7]  154 	ld	a, (bc)
   0071 DD 77 FD      [19]  155 	ld	-3 (ix), a
   0074 0B            [ 6]  156 	dec	bc
   0075 E1            [10]  157 	pop	hl
   0076 E5            [11]  158 	push	hl
   0077 5E            [ 7]  159 	ld	e, (hl)
   0078 23            [ 6]  160 	inc	hl
   0079 56            [ 7]  161 	ld	d, (hl)
   007A 7A            [ 4]  162 	ld	a, d
   007B B3            [ 4]  163 	or	a, e
   007C 28 78         [12]  164 	jr	Z,00104$
                            165 ;e4vm_core.c:38: next_wp = (*v)->mem[(*v)->ip];
   007E DD 7E FC      [19]  166 	ld	a, -4 (ix)
   0081 C6 8A         [ 7]  167 	add	a, #0x8a
   0083 DD 77 FE      [19]  168 	ld	-2 (ix), a
   0086 DD 7E FD      [19]  169 	ld	a, -3 (ix)
   0089 CE 00         [ 7]  170 	adc	a, #0x00
   008B DD 77 FF      [19]  171 	ld	-1 (ix), a
   008E 6B            [ 4]  172 	ld	l, e
   008F 62            [ 4]  173 	ld	h, d
   0090 29            [11]  174 	add	hl, hl
   0091 7D            [ 4]  175 	ld	a, l
   0092 DD 86 FE      [19]  176 	add	a, -2 (ix)
   0095 6F            [ 4]  177 	ld	l, a
   0096 7C            [ 4]  178 	ld	a, h
   0097 DD 8E FF      [19]  179 	adc	a, -1 (ix)
   009A 67            [ 4]  180 	ld	h, a
   009B 7E            [ 7]  181 	ld	a, (hl)
   009C DD 77 FE      [19]  182 	ld	-2 (ix), a
   009F 23            [ 6]  183 	inc	hl
   00A0 7E            [ 7]  184 	ld	a, (hl)
   00A1 DD 77 FF      [19]  185 	ld	-1 (ix), a
                            186 ;e4vm_core.c:39: next_ip = (*v)->ip + 1;
   00A4 13            [ 6]  187 	inc	de
                            188 ;e4vm_core.c:40: (*v)->ip = next_ip;
   00A5 E1            [10]  189 	pop	hl
   00A6 E5            [11]  190 	push	hl
   00A7 73            [ 7]  191 	ld	(hl), e
   00A8 23            [ 6]  192 	inc	hl
   00A9 72            [ 7]  193 	ld	(hl), d
                            194 ;e4vm_core.c:41: (*v)->wp = next_wp;
   00AA 69            [ 4]  195 	ld	l, c
   00AB 60            [ 4]  196 	ld	h, b
   00AC 7E            [ 7]  197 	ld	a, (hl)
   00AD 23            [ 6]  198 	inc	hl
   00AE 66            [ 7]  199 	ld	h, (hl)
   00AF 6F            [ 4]  200 	ld	l, a
   00B0 23            [ 6]  201 	inc	hl
   00B1 23            [ 6]  202 	inc	hl
   00B2 DD 7E FE      [19]  203 	ld	a, -2 (ix)
   00B5 77            [ 7]  204 	ld	(hl), a
   00B6 23            [ 6]  205 	inc	hl
   00B7 DD 7E FF      [19]  206 	ld	a, -1 (ix)
   00BA 77            [ 7]  207 	ld	(hl), a
                            208 ;e4vm_core.c:42: word_index = (*v)->mem[next_ip];
   00BB 0A            [ 7]  209 	ld	a, (bc)
   00BC DD 77 FE      [19]  210 	ld	-2 (ix), a
   00BF 03            [ 6]  211 	inc	bc
   00C0 0A            [ 7]  212 	ld	a, (bc)
   00C1 DD 77 FF      [19]  213 	ld	-1 (ix), a
   00C4 0B            [ 6]  214 	dec	bc
   00C5 DD 7E FE      [19]  215 	ld	a, -2 (ix)
   00C8 C6 8A         [ 7]  216 	add	a, #0x8a
   00CA 6F            [ 4]  217 	ld	l, a
   00CB DD 7E FF      [19]  218 	ld	a, -1 (ix)
   00CE CE 00         [ 7]  219 	adc	a, #0x00
   00D0 67            [ 4]  220 	ld	h, a
   00D1 CB 23         [ 8]  221 	sla	e
   00D3 CB 12         [ 8]  222 	rl	d
   00D5 19            [11]  223 	add	hl, de
   00D6 7E            [ 7]  224 	ld	a, (hl)
   00D7 23            [ 6]  225 	inc	hl
   00D8 66            [ 7]  226 	ld	h, (hl)
   00D9 6F            [ 4]  227 	ld	l, a
                            228 ;e4vm_core.c:43: (*(*v)->core[word_index])(v);
   00DA DD 7E FE      [19]  229 	ld	a, -2 (ix)
   00DD C6 CD         [ 7]  230 	add	a, #0xcd
   00DF 5F            [ 4]  231 	ld	e, a
   00E0 DD 7E FF      [19]  232 	ld	a, -1 (ix)
   00E3 CE 00         [ 7]  233 	adc	a, #0x00
   00E5 57            [ 4]  234 	ld	d, a
   00E6 29            [11]  235 	add	hl, hl
   00E7 19            [11]  236 	add	hl, de
   00E8 7E            [ 7]  237 	ld	a, (hl)
   00E9 23            [ 6]  238 	inc	hl
   00EA 66            [ 7]  239 	ld	h, (hl)
   00EB 6F            [ 4]  240 	ld	l, a
   00EC C5            [11]  241 	push	bc
   00ED C5            [11]  242 	push	bc
   00EE CDr00r00      [17]  243 	call	___sdcc_call_hl
   00F1 F1            [10]  244 	pop	af
   00F2 C1            [10]  245 	pop	bc
   00F3 C3r6Br00      [10]  246 	jp	00101$
   00F6                     247 00104$:
                            248 ;e4vm_core.c:45: }
   00F6 DD F9         [10]  249 	ld	sp, ix
   00F8 DD E1         [14]  250 	pop	ix
   00FA C9            [10]  251 	ret
                            252 ;e4vm_core.c:48: void e4vm_core_do_exit (e4vm_type_x4thPtr *v)
                            253 ;	---------------------------------
                            254 ; Function e4vm_core_do_exit
                            255 ; ---------------------------------
   00FB                     256 _e4vm_core_do_exit::
   00FB CDr00r00      [17]  257 	call	___sdcc_enter_ix
                            258 ;e4vm_core.c:50: (*v)->rs_p = (*v)->rs_p - 1;
   00FE DD 4E 04      [19]  259 	ld	c, 4 (ix)
   0101 DD 46 05      [19]  260 	ld	b, 5 (ix)
   0104 69            [ 4]  261 	ld	l, c
   0105 60            [ 4]  262 	ld	h, b
   0106 5E            [ 7]  263 	ld	e, (hl)
   0107 23            [ 6]  264 	inc	hl
   0108 56            [ 7]  265 	ld	d, (hl)
   0109 21 84 00      [10]  266 	ld	hl, #0x0084
   010C 19            [11]  267 	add	hl, de
   010D 5E            [ 7]  268 	ld	e, (hl)
   010E 23            [ 6]  269 	inc	hl
   010F 56            [ 7]  270 	ld	d, (hl)
   0110 2B            [ 6]  271 	dec	hl
   0111 1B            [ 6]  272 	dec	de
   0112 73            [ 7]  273 	ld	(hl), e
   0113 23            [ 6]  274 	inc	hl
   0114 72            [ 7]  275 	ld	(hl), d
   0115 69            [ 4]  276 	ld	l, c
   0116 60            [ 4]  277 	ld	h, b
   0117 4E            [ 7]  278 	ld	c, (hl)
   0118 23            [ 6]  279 	inc	hl
   0119 46            [ 7]  280 	ld	b, (hl)
                            281 ;e4vm_core.c:51: (*v)->ip = (*v)->rs[(*v)->rs_p];
   011A 21 04 00      [10]  282 	ld	hl, #0x0004
   011D 09            [11]  283 	add	hl, bc
   011E EB            [ 4]  284 	ex	de, hl
   011F 69            [ 4]  285 	ld	l, c
   0120 60            [ 4]  286 	ld	h, b
   0121 C5            [11]  287 	push	bc
   0122 01 84 00      [10]  288 	ld	bc, #0x0084
   0125 09            [11]  289 	add	hl, bc
   0126 C1            [10]  290 	pop	bc
   0127 7E            [ 7]  291 	ld	a, (hl)
   0128 23            [ 6]  292 	inc	hl
   0129 66            [ 7]  293 	ld	h, (hl)
   012A 6F            [ 4]  294 	ld	l, a
   012B 29            [11]  295 	add	hl, hl
   012C 19            [11]  296 	add	hl, de
   012D 5E            [ 7]  297 	ld	e, (hl)
   012E 23            [ 6]  298 	inc	hl
   012F 56            [ 7]  299 	ld	d, (hl)
   0130 7B            [ 4]  300 	ld	a, e
   0131 02            [ 7]  301 	ld	(bc), a
   0132 03            [ 6]  302 	inc	bc
   0133 7A            [ 4]  303 	ld	a, d
   0134 02            [ 7]  304 	ld	(bc), a
                            305 ;e4vm_core.c:52: }
   0135 DD E1         [14]  306 	pop	ix
   0137 C9            [10]  307 	ret
                            308 ;e4vm_core.c:56: export void *e4vm_core__init (void)
                            309 ;	---------------------------------
                            310 ; Function e4vm_core__init
                            311 ; ---------------------------------
   0138                     312 _e4vm_core__init::
                            313 ;e4vm_core.c:58: __DEFMOD;
   0138 21r38r01      [10]  314 	LD	HL,#. 
   013B 36 C9         [10]  315 	LD (HL),#0xC9 
                            316 ;e4vm_core.c:64: }
   013D C9            [10]  317 	ret
                            318 	.area _CODE
                            319 	.area _INITIALIZER
                            320 	.area _CABS (ABS)
