                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.9.3 #11378 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module e4vm_core
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _e4vm_core__init
                             12 	.globl _e4vm_utils__init
                             13 	.globl _e4vm_utils_add_core_word
                             14 	.globl _e4vm_type__init
                             15 	.globl _memcpy
                             16 	.globl _e4vm_core_do_nop
                             17 	.globl _e4vm_core_do_list
                             18 	.globl _e4vm_core_do_next
                             19 	.globl _e4vm_core_do_exit
                             20 	.globl _e4vm_core_add_core_words
                             21 ;--------------------------------------------------------
                             22 ; special function registers
                             23 ;--------------------------------------------------------
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DATA
                             28 ;--------------------------------------------------------
                             29 ; ram data
                             30 ;--------------------------------------------------------
                             31 	.area _INITIALIZED
                             32 ;--------------------------------------------------------
                             33 ; absolute external ram data
                             34 ;--------------------------------------------------------
                             35 	.area _DABS (ABS)
                             36 ;--------------------------------------------------------
                             37 ; global & static initialisations
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _GSINIT
                             41 	.area _GSFINAL
                             42 	.area _GSINIT
                             43 ;--------------------------------------------------------
                             44 ; Home
                             45 ;--------------------------------------------------------
                             46 	.area _HOME
                             47 	.area _HOME
                             48 ;--------------------------------------------------------
                             49 ; code
                             50 ;--------------------------------------------------------
                             51 	.area _CODE
                             52 ;e4vm_core.c:22: void e4vm_core_do_nop (e4vm_type_x4thPtr *v)
                             53 ;	---------------------------------
                             54 ; Function e4vm_core_do_nop
                             55 ; ---------------------------------
   0000                      56 _e4vm_core_do_nop::
                             57 ;e4vm_core.c:24: }
   0000 C9            [10]   58 	ret
                             59 ;e4vm_core.c:27: void e4vm_core_do_list (e4vm_type_x4thPtr *v)
                             60 ;	---------------------------------
                             61 ; Function e4vm_core_do_list
                             62 ; ---------------------------------
   0001                      63 _e4vm_core_do_list::
   0001 CDr00r00      [17]   64 	call	___sdcc_enter_ix
   0004 F5            [11]   65 	push	af
                             66 ;e4vm_core.c:30: (*v)->rs[(*v)->rs_p] = (*v)->ip;
   0005 DD 7E 04      [19]   67 	ld	a, 4 (ix)
   0008 DD 77 FE      [19]   68 	ld	-2 (ix), a
   000B DD 7E 05      [19]   69 	ld	a, 5 (ix)
   000E DD 77 FF      [19]   70 	ld	-1 (ix), a
   0011 E1            [10]   71 	pop	hl
   0012 E5            [11]   72 	push	hl
   0013 4E            [ 7]   73 	ld	c, (hl)
   0014 23            [ 6]   74 	inc	hl
   0015 46            [ 7]   75 	ld	b, (hl)
   0016 21 04 00      [10]   76 	ld	hl, #0x0004
   0019 09            [11]   77 	add	hl, bc
   001A EB            [ 4]   78 	ex	de, hl
   001B 69            [ 4]   79 	ld	l, c
   001C 60            [ 4]   80 	ld	h, b
   001D C5            [11]   81 	push	bc
   001E 01 84 00      [10]   82 	ld	bc, #0x0084
   0021 09            [11]   83 	add	hl, bc
   0022 C1            [10]   84 	pop	bc
   0023 7E            [ 7]   85 	ld	a, (hl)
   0024 23            [ 6]   86 	inc	hl
   0025 66            [ 7]   87 	ld	h, (hl)
   0026 6F            [ 4]   88 	ld	l, a
   0027 29            [11]   89 	add	hl, hl
   0028 19            [11]   90 	add	hl, de
   0029 EB            [ 4]   91 	ex	de, hl
   002A 69            [ 4]   92 	ld	l, c
   002B 60            [ 4]   93 	ld	h, b
   002C 4E            [ 7]   94 	ld	c, (hl)
   002D 23            [ 6]   95 	inc	hl
   002E 46            [ 7]   96 	ld	b, (hl)
   002F 79            [ 4]   97 	ld	a, c
   0030 12            [ 7]   98 	ld	(de), a
   0031 13            [ 6]   99 	inc	de
   0032 78            [ 4]  100 	ld	a, b
   0033 12            [ 7]  101 	ld	(de), a
                            102 ;e4vm_core.c:31: (*v)->rs_p = (*v)->rs_p + 1;
   0034 E1            [10]  103 	pop	hl
   0035 E5            [11]  104 	push	hl
   0036 4E            [ 7]  105 	ld	c, (hl)
   0037 23            [ 6]  106 	inc	hl
   0038 46            [ 7]  107 	ld	b, (hl)
   0039 21 84 00      [10]  108 	ld	hl, #0x0084
   003C 09            [11]  109 	add	hl, bc
   003D 4E            [ 7]  110 	ld	c, (hl)
   003E 23            [ 6]  111 	inc	hl
   003F 46            [ 7]  112 	ld	b, (hl)
   0040 2B            [ 6]  113 	dec	hl
   0041 03            [ 6]  114 	inc	bc
   0042 78            [ 4]  115 	ld	a, b
   0043 71            [ 7]  116 	ld	(hl), c
   0044 23            [ 6]  117 	inc	hl
   0045 77            [ 7]  118 	ld	(hl), a
                            119 ;e4vm_core.c:30: (*v)->rs[(*v)->rs_p] = (*v)->ip;
   0046 E1            [10]  120 	pop	hl
   0047 E5            [11]  121 	push	hl
   0048 4E            [ 7]  122 	ld	c, (hl)
   0049 23            [ 6]  123 	inc	hl
   004A 46            [ 7]  124 	ld	b, (hl)
                            125 ;e4vm_core.c:32: (*v)->ip = (*v)->wp + 1;
   004B 69            [ 4]  126 	ld	l, c
   004C 60            [ 4]  127 	ld	h, b
   004D 23            [ 6]  128 	inc	hl
   004E 23            [ 6]  129 	inc	hl
   004F 5E            [ 7]  130 	ld	e, (hl)
   0050 23            [ 6]  131 	inc	hl
   0051 56            [ 7]  132 	ld	d, (hl)
   0052 13            [ 6]  133 	inc	de
   0053 7B            [ 4]  134 	ld	a, e
   0054 02            [ 7]  135 	ld	(bc), a
   0055 03            [ 6]  136 	inc	bc
   0056 7A            [ 4]  137 	ld	a, d
   0057 02            [ 7]  138 	ld	(bc), a
                            139 ;e4vm_core.c:33: }
   0058 F1            [10]  140 	pop	af
   0059 DD E1         [14]  141 	pop	ix
   005B C9            [10]  142 	ret
                            143 ;e4vm_core.c:36: void e4vm_core_do_next (e4vm_type_x4thPtr *v)
                            144 ;	---------------------------------
                            145 ; Function e4vm_core_do_next
                            146 ; ---------------------------------
   005C                     147 _e4vm_core_do_next::
   005C CDr00r00      [17]  148 	call	___sdcc_enter_ix
   005F F5            [11]  149 	push	af
                            150 ;e4vm_core.c:39: while (!((*v)->ip == 0)) {
   0060 DD 4E 04      [19]  151 	ld	c, 4 (ix)
   0063 DD 46 05      [19]  152 	ld	b, 5 (ix)
   0066                     153 00101$:
   0066 69            [ 4]  154 	ld	l, c
   0067 60            [ 4]  155 	ld	h, b
   0068 5E            [ 7]  156 	ld	e, (hl)
   0069 23            [ 6]  157 	inc	hl
   006A 56            [ 7]  158 	ld	d, (hl)
   006B 6B            [ 4]  159 	ld	l, e
   006C 62            [ 4]  160 	ld	h, d
   006D 7E            [ 7]  161 	ld	a, (hl)
   006E 23            [ 6]  162 	inc	hl
   006F 66            [ 7]  163 	ld	h, (hl)
   0070 6F            [ 4]  164 	ld	l,a
   0071 B4            [ 4]  165 	or	a,h
   0072 28 70         [12]  166 	jr	Z,00104$
                            167 ;e4vm_core.c:40: (*v)->wp = (*v)->mem[(*v)->ip];
   0074 7B            [ 4]  168 	ld	a, e
   0075 C6 02         [ 7]  169 	add	a, #0x02
   0077 DD 77 FE      [19]  170 	ld	-2 (ix), a
   007A 7A            [ 4]  171 	ld	a, d
   007B CE 00         [ 7]  172 	adc	a, #0x00
   007D DD 77 FF      [19]  173 	ld	-1 (ix), a
   0080 7B            [ 4]  174 	ld	a, e
   0081 C6 8A         [ 7]  175 	add	a, #0x8a
   0083 5F            [ 4]  176 	ld	e, a
   0084 30 01         [12]  177 	jr	NC,00116$
   0086 14            [ 4]  178 	inc	d
   0087                     179 00116$:
   0087 29            [11]  180 	add	hl, hl
   0088 19            [11]  181 	add	hl, de
   0089 5E            [ 7]  182 	ld	e, (hl)
   008A 23            [ 6]  183 	inc	hl
   008B 56            [ 7]  184 	ld	d, (hl)
   008C E1            [10]  185 	pop	hl
   008D E5            [11]  186 	push	hl
   008E 73            [ 7]  187 	ld	(hl), e
   008F 23            [ 6]  188 	inc	hl
   0090 72            [ 7]  189 	ld	(hl), d
                            190 ;e4vm_core.c:39: while (!((*v)->ip == 0)) {
   0091 69            [ 4]  191 	ld	l, c
   0092 60            [ 4]  192 	ld	h, b
   0093 7E            [ 7]  193 	ld	a, (hl)
   0094 23            [ 6]  194 	inc	hl
   0095 66            [ 7]  195 	ld	h, (hl)
   0096 6F            [ 4]  196 	ld	l, a
                            197 ;e4vm_core.c:41: (*v)->ip = (*v)->ip + 1;
   0097 5E            [ 7]  198 	ld	e, (hl)
   0098 23            [ 6]  199 	inc	hl
   0099 56            [ 7]  200 	ld	d, (hl)
   009A 2B            [ 6]  201 	dec	hl
   009B 13            [ 6]  202 	inc	de
   009C 7A            [ 4]  203 	ld	a, d
   009D 73            [ 7]  204 	ld	(hl), e
   009E 23            [ 6]  205 	inc	hl
   009F 77            [ 7]  206 	ld	(hl), a
                            207 ;e4vm_core.c:42: word_index = (*v)->mem[(*v)->wp];
   00A0 69            [ 4]  208 	ld	l, c
   00A1 60            [ 4]  209 	ld	h, b
   00A2 5E            [ 7]  210 	ld	e, (hl)
   00A3 23            [ 6]  211 	inc	hl
   00A4 56            [ 7]  212 	ld	d, (hl)
   00A5 21 8A 00      [10]  213 	ld	hl, #0x008a
   00A8 19            [11]  214 	add	hl, de
   00A9 E3            [19]  215 	ex	(sp), hl
   00AA 6B            [ 4]  216 	ld	l, e
   00AB 62            [ 4]  217 	ld	h, d
   00AC 23            [ 6]  218 	inc	hl
   00AD 23            [ 6]  219 	inc	hl
   00AE 7E            [ 7]  220 	ld	a, (hl)
   00AF 23            [ 6]  221 	inc	hl
   00B0 66            [ 7]  222 	ld	h, (hl)
   00B1 6F            [ 4]  223 	ld	l, a
   00B2 29            [11]  224 	add	hl, hl
   00B3 7D            [ 4]  225 	ld	a, l
   00B4 DD 86 FE      [19]  226 	add	a, -2 (ix)
   00B7 6F            [ 4]  227 	ld	l, a
   00B8 7C            [ 4]  228 	ld	a, h
   00B9 DD 8E FF      [19]  229 	adc	a, -1 (ix)
   00BC 67            [ 4]  230 	ld	h, a
   00BD 7E            [ 7]  231 	ld	a, (hl)
   00BE 23            [ 6]  232 	inc	hl
   00BF 66            [ 7]  233 	ld	h, (hl)
   00C0 6F            [ 4]  234 	ld	l, a
                            235 ;e4vm_core.c:43: (*(*v)->words[word_index].proc)(v);
   00C1 7B            [ 4]  236 	ld	a, e
   00C2 C6 CD         [ 7]  237 	add	a, #0xcd
   00C4 5F            [ 4]  238 	ld	e, a
   00C5 30 01         [12]  239 	jr	NC,00117$
   00C7 14            [ 4]  240 	inc	d
   00C8                     241 00117$:
   00C8 D5            [11]  242 	push	de
   00C9 5D            [ 4]  243 	ld	e, l
   00CA 54            [ 4]  244 	ld	d, h
   00CB 29            [11]  245 	add	hl, hl
   00CC 19            [11]  246 	add	hl, de
   00CD 29            [11]  247 	add	hl, hl
   00CE 19            [11]  248 	add	hl, de
   00CF 29            [11]  249 	add	hl, hl
   00D0 D1            [10]  250 	pop	de
   00D1 19            [11]  251 	add	hl, de
   00D2 11 0A 00      [10]  252 	ld	de, #0x000a
   00D5 19            [11]  253 	add	hl, de
   00D6 7E            [ 7]  254 	ld	a, (hl)
   00D7 23            [ 6]  255 	inc	hl
   00D8 66            [ 7]  256 	ld	h, (hl)
   00D9 6F            [ 4]  257 	ld	l, a
   00DA C5            [11]  258 	push	bc
   00DB C5            [11]  259 	push	bc
   00DC CDr00r00      [17]  260 	call	___sdcc_call_hl
   00DF F1            [10]  261 	pop	af
   00E0 C1            [10]  262 	pop	bc
   00E1 C3r66r00      [10]  263 	jp	00101$
   00E4                     264 00104$:
                            265 ;e4vm_core.c:45: }
   00E4 F1            [10]  266 	pop	af
   00E5 DD E1         [14]  267 	pop	ix
   00E7 C9            [10]  268 	ret
                            269 ;e4vm_core.c:48: void e4vm_core_do_exit (e4vm_type_x4thPtr *v)
                            270 ;	---------------------------------
                            271 ; Function e4vm_core_do_exit
                            272 ; ---------------------------------
   00E8                     273 _e4vm_core_do_exit::
   00E8 CDr00r00      [17]  274 	call	___sdcc_enter_ix
                            275 ;e4vm_core.c:50: (*v)->rs_p = (*v)->rs_p - 1;
   00EB DD 4E 04      [19]  276 	ld	c, 4 (ix)
   00EE DD 46 05      [19]  277 	ld	b, 5 (ix)
   00F1 69            [ 4]  278 	ld	l, c
   00F2 60            [ 4]  279 	ld	h, b
   00F3 5E            [ 7]  280 	ld	e, (hl)
   00F4 23            [ 6]  281 	inc	hl
   00F5 56            [ 7]  282 	ld	d, (hl)
   00F6 21 84 00      [10]  283 	ld	hl, #0x0084
   00F9 19            [11]  284 	add	hl, de
   00FA 5E            [ 7]  285 	ld	e, (hl)
   00FB 23            [ 6]  286 	inc	hl
   00FC 56            [ 7]  287 	ld	d, (hl)
   00FD 2B            [ 6]  288 	dec	hl
   00FE 1B            [ 6]  289 	dec	de
   00FF 73            [ 7]  290 	ld	(hl), e
   0100 23            [ 6]  291 	inc	hl
   0101 72            [ 7]  292 	ld	(hl), d
   0102 69            [ 4]  293 	ld	l, c
   0103 60            [ 4]  294 	ld	h, b
   0104 4E            [ 7]  295 	ld	c, (hl)
   0105 23            [ 6]  296 	inc	hl
   0106 46            [ 7]  297 	ld	b, (hl)
                            298 ;e4vm_core.c:51: (*v)->ip = (*v)->rs[(*v)->rs_p];
   0107 21 04 00      [10]  299 	ld	hl, #0x0004
   010A 09            [11]  300 	add	hl, bc
   010B EB            [ 4]  301 	ex	de, hl
   010C 69            [ 4]  302 	ld	l, c
   010D 60            [ 4]  303 	ld	h, b
   010E C5            [11]  304 	push	bc
   010F 01 84 00      [10]  305 	ld	bc, #0x0084
   0112 09            [11]  306 	add	hl, bc
   0113 C1            [10]  307 	pop	bc
   0114 7E            [ 7]  308 	ld	a, (hl)
   0115 23            [ 6]  309 	inc	hl
   0116 66            [ 7]  310 	ld	h, (hl)
   0117 6F            [ 4]  311 	ld	l, a
   0118 29            [11]  312 	add	hl, hl
   0119 19            [11]  313 	add	hl, de
   011A 5E            [ 7]  314 	ld	e, (hl)
   011B 23            [ 6]  315 	inc	hl
   011C 56            [ 7]  316 	ld	d, (hl)
   011D 7B            [ 4]  317 	ld	a, e
   011E 02            [ 7]  318 	ld	(bc), a
   011F 03            [ 6]  319 	inc	bc
   0120 7A            [ 4]  320 	ld	a, d
   0121 02            [ 7]  321 	ld	(bc), a
                            322 ;e4vm_core.c:52: }
   0122 DD E1         [14]  323 	pop	ix
   0124 C9            [10]  324 	ret
                            325 ;e4vm_core.c:55: void e4vm_core_add_core_words (e4vm_type_x4thPtr *v)
                            326 ;	---------------------------------
                            327 ; Function e4vm_core_add_core_words
                            328 ; ---------------------------------
   0125                     329 _e4vm_core_add_core_words::
   0125 CDr00r00      [17]  330 	call	___sdcc_enter_ix
   0128 21 E0 FF      [10]  331 	ld	hl, #-32
   012B 39            [11]  332 	add	hl, sp
   012C F9            [ 6]  333 	ld	sp, hl
                            334 ;e4vm_core.c:61: __MOVE((CHAR*)"nop", _str__5, 4);
   012D 21 00 00      [10]  335 	ld	hl, #0
   0130 39            [11]  336 	add	hl, sp
   0131 4D            [ 4]  337 	ld	c, l
   0132 44            [ 4]  338 	ld	b, h
   0133 E5            [11]  339 	push	hl
   0134 11 04 00      [10]  340 	ld	de, #0x0004
   0137 D5            [11]  341 	push	de
   0138 11rE2r01      [10]  342 	ld	de, #___str_0
   013B D5            [11]  343 	push	de
   013C C5            [11]  344 	push	bc
   013D CDr00r00      [17]  345 	call	_memcpy
   0140 F1            [10]  346 	pop	af
   0141 F1            [10]  347 	pop	af
   0142 F1            [10]  348 	pop	af
   0143 E1            [10]  349 	pop	hl
                            350 ;e4vm_core.c:62: e4vm_utils_add_core_word(v, (void*)_str__5, e4vm_core_do_nop, 0);
   0144 AF            [ 4]  351 	xor	a, a
   0145 F5            [11]  352 	push	af
   0146 33            [ 6]  353 	inc	sp
   0147 01r00r00      [10]  354 	ld	bc, #_e4vm_core_do_nop
   014A C5            [11]  355 	push	bc
   014B E5            [11]  356 	push	hl
   014C DD 6E 04      [19]  357 	ld	l, 4 (ix)
   014F DD 66 05      [19]  358 	ld	h, 5 (ix)
   0152 E5            [11]  359 	push	hl
   0153 CDr00r00      [17]  360 	call	_e4vm_utils_add_core_word
   0156 F1            [10]  361 	pop	af
   0157 F1            [10]  362 	pop	af
   0158 F1            [10]  363 	pop	af
   0159 33            [ 6]  364 	inc	sp
                            365 ;e4vm_core.c:63: __MOVE((CHAR*)"dolist", _str__4, 7);
   015A 21 08 00      [10]  366 	ld	hl, #8
   015D 39            [11]  367 	add	hl, sp
   015E 4D            [ 4]  368 	ld	c, l
   015F 44            [ 4]  369 	ld	b, h
   0160 E5            [11]  370 	push	hl
   0161 11 07 00      [10]  371 	ld	de, #0x0007
   0164 D5            [11]  372 	push	de
   0165 11rE6r01      [10]  373 	ld	de, #___str_1
   0168 D5            [11]  374 	push	de
   0169 C5            [11]  375 	push	bc
   016A CDr00r00      [17]  376 	call	_memcpy
   016D F1            [10]  377 	pop	af
   016E F1            [10]  378 	pop	af
   016F F1            [10]  379 	pop	af
   0170 E1            [10]  380 	pop	hl
                            381 ;e4vm_core.c:64: e4vm_utils_add_core_word(v, (void*)_str__4, e4vm_core_do_list, 0);
   0171 AF            [ 4]  382 	xor	a, a
   0172 F5            [11]  383 	push	af
   0173 33            [ 6]  384 	inc	sp
   0174 01r01r00      [10]  385 	ld	bc, #_e4vm_core_do_list
   0177 C5            [11]  386 	push	bc
   0178 E5            [11]  387 	push	hl
   0179 DD 6E 04      [19]  388 	ld	l, 4 (ix)
   017C DD 66 05      [19]  389 	ld	h, 5 (ix)
   017F E5            [11]  390 	push	hl
   0180 CDr00r00      [17]  391 	call	_e4vm_utils_add_core_word
   0183 F1            [10]  392 	pop	af
   0184 F1            [10]  393 	pop	af
   0185 F1            [10]  394 	pop	af
   0186 33            [ 6]  395 	inc	sp
                            396 ;e4vm_core.c:65: __MOVE((CHAR*)"next", _str__3, 5);
   0187 21 10 00      [10]  397 	ld	hl, #16
   018A 39            [11]  398 	add	hl, sp
   018B 4D            [ 4]  399 	ld	c, l
   018C 44            [ 4]  400 	ld	b, h
   018D E5            [11]  401 	push	hl
   018E 11 05 00      [10]  402 	ld	de, #0x0005
   0191 D5            [11]  403 	push	de
   0192 11rEDr01      [10]  404 	ld	de, #___str_2
   0195 D5            [11]  405 	push	de
   0196 C5            [11]  406 	push	bc
   0197 CDr00r00      [17]  407 	call	_memcpy
   019A F1            [10]  408 	pop	af
   019B F1            [10]  409 	pop	af
   019C F1            [10]  410 	pop	af
   019D E1            [10]  411 	pop	hl
                            412 ;e4vm_core.c:66: e4vm_utils_add_core_word(v, (void*)_str__3, e4vm_core_do_next, 0);
   019E AF            [ 4]  413 	xor	a, a
   019F F5            [11]  414 	push	af
   01A0 33            [ 6]  415 	inc	sp
   01A1 01r5Cr00      [10]  416 	ld	bc, #_e4vm_core_do_next
   01A4 C5            [11]  417 	push	bc
   01A5 E5            [11]  418 	push	hl
   01A6 DD 6E 04      [19]  419 	ld	l, 4 (ix)
   01A9 DD 66 05      [19]  420 	ld	h, 5 (ix)
   01AC E5            [11]  421 	push	hl
   01AD CDr00r00      [17]  422 	call	_e4vm_utils_add_core_word
   01B0 F1            [10]  423 	pop	af
   01B1 F1            [10]  424 	pop	af
   01B2 F1            [10]  425 	pop	af
   01B3 33            [ 6]  426 	inc	sp
                            427 ;e4vm_core.c:67: __MOVE((CHAR*)"exit", _str__2, 5);
   01B4 21 18 00      [10]  428 	ld	hl, #24
   01B7 39            [11]  429 	add	hl, sp
   01B8 4D            [ 4]  430 	ld	c, l
   01B9 44            [ 4]  431 	ld	b, h
   01BA E5            [11]  432 	push	hl
   01BB 11 05 00      [10]  433 	ld	de, #0x0005
   01BE D5            [11]  434 	push	de
   01BF 11rF2r01      [10]  435 	ld	de, #___str_3
   01C2 D5            [11]  436 	push	de
   01C3 C5            [11]  437 	push	bc
   01C4 CDr00r00      [17]  438 	call	_memcpy
   01C7 F1            [10]  439 	pop	af
   01C8 F1            [10]  440 	pop	af
   01C9 F1            [10]  441 	pop	af
   01CA E1            [10]  442 	pop	hl
                            443 ;e4vm_core.c:68: e4vm_utils_add_core_word(v, (void*)_str__2, e4vm_core_do_exit, 0);
   01CB AF            [ 4]  444 	xor	a, a
   01CC F5            [11]  445 	push	af
   01CD 33            [ 6]  446 	inc	sp
   01CE 01rE8r00      [10]  447 	ld	bc, #_e4vm_core_do_exit
   01D1 C5            [11]  448 	push	bc
   01D2 E5            [11]  449 	push	hl
   01D3 DD 6E 04      [19]  450 	ld	l, 4 (ix)
   01D6 DD 66 05      [19]  451 	ld	h, 5 (ix)
   01D9 E5            [11]  452 	push	hl
   01DA CDr00r00      [17]  453 	call	_e4vm_utils_add_core_word
                            454 ;e4vm_core.c:69: }
   01DD DD F9         [10]  455 	ld	sp,ix
   01DF DD E1         [14]  456 	pop	ix
   01E1 C9            [10]  457 	ret
   01E2                     458 ___str_0:
   01E2 6E 6F 70            459 	.ascii "nop"
   01E5 00                  460 	.db 0x00
   01E6                     461 ___str_1:
   01E6 64 6F 6C 69 73 74   462 	.ascii "dolist"
   01EC 00                  463 	.db 0x00
   01ED                     464 ___str_2:
   01ED 6E 65 78 74         465 	.ascii "next"
   01F1 00                  466 	.db 0x00
   01F2                     467 ___str_3:
   01F2 65 78 69 74         468 	.ascii "exit"
   01F6 00                  469 	.db 0x00
                            470 ;e4vm_core.c:73: export void *e4vm_core__init (void)
                            471 ;	---------------------------------
                            472 ; Function e4vm_core__init
                            473 ; ---------------------------------
   01F7                     474 _e4vm_core__init::
                            475 ;e4vm_core.c:75: __DEFMOD;
   01F7 21rF7r01      [10]  476 	LD	HL,#. 
   01FA 36 C9         [10]  477 	LD (HL),#0xC9 
                            478 ;e4vm_core.c:78: __IMPORT(e4vm_type__init);
   01FC CDr00r00      [17]  479 	call	_e4vm_type__init
                            480 ;e4vm_core.c:79: __IMPORT(e4vm_utils__init);
                            481 ;e4vm_core.c:83: }
   01FF C3r00r00      [10]  482 	jp  _e4vm_utils__init
                            483 	.area _CODE
                            484 	.area _INITIALIZER
                            485 	.area _CABS (ABS)
