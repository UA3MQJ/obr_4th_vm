                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.9.3 #11378 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module e4vm_core
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _e4vm_core__init
                             12 	.globl _e4vm_utils__init
                             13 	.globl _e4vm_utils_add_core_word
                             14 	.globl _e4vm_type__init
                             15 	.globl _memcpy
                             16 	.globl _e4vm_core_do_nop
                             17 	.globl _e4vm_core_do_list
                             18 	.globl _e4vm_core_do_next
                             19 	.globl _e4vm_core_do_exit
                             20 	.globl _e4vm_core_add_core_words
                             21 ;--------------------------------------------------------
                             22 ; special function registers
                             23 ;--------------------------------------------------------
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DATA
                             28 ;--------------------------------------------------------
                             29 ; ram data
                             30 ;--------------------------------------------------------
                             31 	.area _INITIALIZED
                             32 ;--------------------------------------------------------
                             33 ; absolute external ram data
                             34 ;--------------------------------------------------------
                             35 	.area _DABS (ABS)
                             36 ;--------------------------------------------------------
                             37 ; global & static initialisations
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _GSINIT
                             41 	.area _GSFINAL
                             42 	.area _GSINIT
                             43 ;--------------------------------------------------------
                             44 ; Home
                             45 ;--------------------------------------------------------
                             46 	.area _HOME
                             47 	.area _HOME
                             48 ;--------------------------------------------------------
                             49 ; code
                             50 ;--------------------------------------------------------
                             51 	.area _CODE
                             52 ;e4vm_core.c:22: void e4vm_core_do_nop (e4vm_type_x4thPtr *v)
                             53 ;	---------------------------------
                             54 ; Function e4vm_core_do_nop
                             55 ; ---------------------------------
   0000                      56 _e4vm_core_do_nop::
                             57 ;e4vm_core.c:24: }
   0000 C9            [10]   58 	ret
                             59 ;e4vm_core.c:27: void e4vm_core_do_list (e4vm_type_x4thPtr *v)
                             60 ;	---------------------------------
                             61 ; Function e4vm_core_do_list
                             62 ; ---------------------------------
   0001                      63 _e4vm_core_do_list::
   0001 CDr00r00      [17]   64 	call	___sdcc_enter_ix
   0004 F5            [11]   65 	push	af
                             66 ;e4vm_core.c:30: (*v)->rs[(*v)->rs_p] = (*v)->ip;
   0005 DD 7E 04      [19]   67 	ld	a, 4 (ix)
   0008 DD 77 FE      [19]   68 	ld	-2 (ix), a
   000B DD 7E 05      [19]   69 	ld	a, 5 (ix)
   000E DD 77 FF      [19]   70 	ld	-1 (ix), a
   0011 E1            [10]   71 	pop	hl
   0012 E5            [11]   72 	push	hl
   0013 4E            [ 7]   73 	ld	c, (hl)
   0014 23            [ 6]   74 	inc	hl
   0015 46            [ 7]   75 	ld	b, (hl)
   0016 21 04 00      [10]   76 	ld	hl, #0x0004
   0019 09            [11]   77 	add	hl, bc
   001A EB            [ 4]   78 	ex	de, hl
   001B 69            [ 4]   79 	ld	l, c
   001C 60            [ 4]   80 	ld	h, b
   001D C5            [11]   81 	push	bc
   001E 01 84 00      [10]   82 	ld	bc, #0x0084
   0021 09            [11]   83 	add	hl, bc
   0022 C1            [10]   84 	pop	bc
   0023 7E            [ 7]   85 	ld	a, (hl)
   0024 23            [ 6]   86 	inc	hl
   0025 66            [ 7]   87 	ld	h, (hl)
   0026 6F            [ 4]   88 	ld	l, a
   0027 29            [11]   89 	add	hl, hl
   0028 19            [11]   90 	add	hl, de
   0029 EB            [ 4]   91 	ex	de, hl
   002A 69            [ 4]   92 	ld	l, c
   002B 60            [ 4]   93 	ld	h, b
   002C 4E            [ 7]   94 	ld	c, (hl)
   002D 23            [ 6]   95 	inc	hl
   002E 46            [ 7]   96 	ld	b, (hl)
   002F 79            [ 4]   97 	ld	a, c
   0030 12            [ 7]   98 	ld	(de), a
   0031 13            [ 6]   99 	inc	de
   0032 78            [ 4]  100 	ld	a, b
   0033 12            [ 7]  101 	ld	(de), a
                            102 ;e4vm_core.c:31: (*v)->rs_p = (*v)->rs_p + 1;
   0034 E1            [10]  103 	pop	hl
   0035 E5            [11]  104 	push	hl
   0036 4E            [ 7]  105 	ld	c, (hl)
   0037 23            [ 6]  106 	inc	hl
   0038 46            [ 7]  107 	ld	b, (hl)
   0039 21 84 00      [10]  108 	ld	hl, #0x0084
   003C 09            [11]  109 	add	hl, bc
   003D 4E            [ 7]  110 	ld	c, (hl)
   003E 23            [ 6]  111 	inc	hl
   003F 46            [ 7]  112 	ld	b, (hl)
   0040 2B            [ 6]  113 	dec	hl
   0041 03            [ 6]  114 	inc	bc
   0042 78            [ 4]  115 	ld	a, b
   0043 71            [ 7]  116 	ld	(hl), c
   0044 23            [ 6]  117 	inc	hl
   0045 77            [ 7]  118 	ld	(hl), a
                            119 ;e4vm_core.c:30: (*v)->rs[(*v)->rs_p] = (*v)->ip;
   0046 E1            [10]  120 	pop	hl
   0047 E5            [11]  121 	push	hl
   0048 4E            [ 7]  122 	ld	c, (hl)
   0049 23            [ 6]  123 	inc	hl
   004A 46            [ 7]  124 	ld	b, (hl)
                            125 ;e4vm_core.c:32: (*v)->ip = (*v)->wp + 1;
   004B 69            [ 4]  126 	ld	l, c
   004C 60            [ 4]  127 	ld	h, b
   004D 23            [ 6]  128 	inc	hl
   004E 23            [ 6]  129 	inc	hl
   004F 5E            [ 7]  130 	ld	e, (hl)
   0050 23            [ 6]  131 	inc	hl
   0051 56            [ 7]  132 	ld	d, (hl)
   0052 13            [ 6]  133 	inc	de
   0053 7B            [ 4]  134 	ld	a, e
   0054 02            [ 7]  135 	ld	(bc), a
   0055 03            [ 6]  136 	inc	bc
   0056 7A            [ 4]  137 	ld	a, d
   0057 02            [ 7]  138 	ld	(bc), a
                            139 ;e4vm_core.c:33: }
   0058 F1            [10]  140 	pop	af
   0059 DD E1         [14]  141 	pop	ix
   005B C9            [10]  142 	ret
                            143 ;e4vm_core.c:36: void e4vm_core_do_next (e4vm_type_x4thPtr *v)
                            144 ;	---------------------------------
                            145 ; Function e4vm_core_do_next
                            146 ; ---------------------------------
   005C                     147 _e4vm_core_do_next::
   005C CDr00r00      [17]  148 	call	___sdcc_enter_ix
   005F F5            [11]  149 	push	af
                            150 ;e4vm_core.c:39: while (!((*v)->ip == 0)) {
   0060 DD 4E 04      [19]  151 	ld	c, 4 (ix)
   0063 DD 46 05      [19]  152 	ld	b, 5 (ix)
   0066                     153 00101$:
   0066 69            [ 4]  154 	ld	l, c
   0067 60            [ 4]  155 	ld	h, b
   0068 5E            [ 7]  156 	ld	e, (hl)
   0069 23            [ 6]  157 	inc	hl
   006A 56            [ 7]  158 	ld	d, (hl)
   006B 6B            [ 4]  159 	ld	l, e
   006C 62            [ 4]  160 	ld	h, d
   006D 7E            [ 7]  161 	ld	a, (hl)
   006E 23            [ 6]  162 	inc	hl
   006F 66            [ 7]  163 	ld	h, (hl)
   0070 6F            [ 4]  164 	ld	l,a
   0071 B4            [ 4]  165 	or	a,h
   0072 28 72         [12]  166 	jr	Z,00104$
                            167 ;e4vm_core.c:40: (*v)->wp = (*v)->mem[(*v)->ip];
   0074 7B            [ 4]  168 	ld	a, e
   0075 C6 02         [ 7]  169 	add	a, #0x02
   0077 DD 77 FE      [19]  170 	ld	-2 (ix), a
   007A 7A            [ 4]  171 	ld	a, d
   007B CE 00         [ 7]  172 	adc	a, #0x00
   007D DD 77 FF      [19]  173 	ld	-1 (ix), a
   0080 7B            [ 4]  174 	ld	a, e
   0081 C6 8A         [ 7]  175 	add	a, #0x8a
   0083 5F            [ 4]  176 	ld	e, a
   0084 30 01         [12]  177 	jr	NC,00116$
   0086 14            [ 4]  178 	inc	d
   0087                     179 00116$:
   0087 29            [11]  180 	add	hl, hl
   0088 19            [11]  181 	add	hl, de
   0089 5E            [ 7]  182 	ld	e, (hl)
   008A 23            [ 6]  183 	inc	hl
   008B 56            [ 7]  184 	ld	d, (hl)
   008C E1            [10]  185 	pop	hl
   008D E5            [11]  186 	push	hl
   008E 73            [ 7]  187 	ld	(hl), e
   008F 23            [ 6]  188 	inc	hl
   0090 72            [ 7]  189 	ld	(hl), d
                            190 ;e4vm_core.c:39: while (!((*v)->ip == 0)) {
   0091 69            [ 4]  191 	ld	l, c
   0092 60            [ 4]  192 	ld	h, b
   0093 5E            [ 7]  193 	ld	e, (hl)
   0094 23            [ 6]  194 	inc	hl
   0095 56            [ 7]  195 	ld	d, (hl)
                            196 ;e4vm_core.c:41: (*v)->ip = (*v)->ip + 1;
   0096 6B            [ 4]  197 	ld	l, e
   0097 62            [ 4]  198 	ld	h, d
   0098 7E            [ 7]  199 	ld	a, (hl)
   0099 23            [ 6]  200 	inc	hl
   009A 66            [ 7]  201 	ld	h, (hl)
   009B 6F            [ 4]  202 	ld	l, a
   009C 23            [ 6]  203 	inc	hl
   009D E3            [19]  204 	ex	(sp), hl
   009E DD 7E FE      [19]  205 	ld	a, -2 (ix)
   00A1 12            [ 7]  206 	ld	(de), a
   00A2 13            [ 6]  207 	inc	de
   00A3 DD 7E FF      [19]  208 	ld	a, -1 (ix)
   00A6 12            [ 7]  209 	ld	(de), a
                            210 ;e4vm_core.c:42: word_index = (*v)->mem[(*v)->wp];
   00A7 69            [ 4]  211 	ld	l, c
   00A8 60            [ 4]  212 	ld	h, b
   00A9 5E            [ 7]  213 	ld	e, (hl)
   00AA 23            [ 6]  214 	inc	hl
   00AB 56            [ 7]  215 	ld	d, (hl)
   00AC 21 8A 00      [10]  216 	ld	hl, #0x008a
   00AF 19            [11]  217 	add	hl, de
   00B0 E3            [19]  218 	ex	(sp), hl
   00B1 6B            [ 4]  219 	ld	l, e
   00B2 62            [ 4]  220 	ld	h, d
   00B3 23            [ 6]  221 	inc	hl
   00B4 23            [ 6]  222 	inc	hl
   00B5 7E            [ 7]  223 	ld	a, (hl)
   00B6 23            [ 6]  224 	inc	hl
   00B7 66            [ 7]  225 	ld	h, (hl)
   00B8 6F            [ 4]  226 	ld	l, a
   00B9 29            [11]  227 	add	hl, hl
   00BA 7D            [ 4]  228 	ld	a, l
   00BB DD 86 FE      [19]  229 	add	a, -2 (ix)
   00BE 6F            [ 4]  230 	ld	l, a
   00BF 7C            [ 4]  231 	ld	a, h
   00C0 DD 8E FF      [19]  232 	adc	a, -1 (ix)
   00C3 67            [ 4]  233 	ld	h, a
   00C4 7E            [ 7]  234 	ld	a, (hl)
   00C5 23            [ 6]  235 	inc	hl
   00C6 66            [ 7]  236 	ld	h, (hl)
   00C7 6F            [ 4]  237 	ld	l, a
                            238 ;e4vm_core.c:43: (*(*v)->words[word_index].proc)(v);
   00C8 7B            [ 4]  239 	ld	a, e
   00C9 C6 CD         [ 7]  240 	add	a, #0xcd
   00CB 5F            [ 4]  241 	ld	e, a
   00CC 30 01         [12]  242 	jr	NC,00117$
   00CE 14            [ 4]  243 	inc	d
   00CF                     244 00117$:
   00CF 29            [11]  245 	add	hl, hl
   00D0 29            [11]  246 	add	hl, hl
   00D1 29            [11]  247 	add	hl, hl
   00D2 29            [11]  248 	add	hl, hl
   00D3 19            [11]  249 	add	hl, de
   00D4 11 0C 00      [10]  250 	ld	de, #0x000c
   00D7 19            [11]  251 	add	hl, de
   00D8 7E            [ 7]  252 	ld	a, (hl)
   00D9 23            [ 6]  253 	inc	hl
   00DA 66            [ 7]  254 	ld	h, (hl)
   00DB 6F            [ 4]  255 	ld	l, a
   00DC C5            [11]  256 	push	bc
   00DD C5            [11]  257 	push	bc
   00DE CDr00r00      [17]  258 	call	___sdcc_call_hl
   00E1 F1            [10]  259 	pop	af
   00E2 C1            [10]  260 	pop	bc
   00E3 C3r66r00      [10]  261 	jp	00101$
   00E6                     262 00104$:
                            263 ;e4vm_core.c:45: }
   00E6 F1            [10]  264 	pop	af
   00E7 DD E1         [14]  265 	pop	ix
   00E9 C9            [10]  266 	ret
                            267 ;e4vm_core.c:48: void e4vm_core_do_exit (e4vm_type_x4thPtr *v)
                            268 ;	---------------------------------
                            269 ; Function e4vm_core_do_exit
                            270 ; ---------------------------------
   00EA                     271 _e4vm_core_do_exit::
   00EA CDr00r00      [17]  272 	call	___sdcc_enter_ix
                            273 ;e4vm_core.c:50: (*v)->rs_p = (*v)->rs_p - 1;
   00ED DD 4E 04      [19]  274 	ld	c, 4 (ix)
   00F0 DD 46 05      [19]  275 	ld	b, 5 (ix)
   00F3 69            [ 4]  276 	ld	l, c
   00F4 60            [ 4]  277 	ld	h, b
   00F5 5E            [ 7]  278 	ld	e, (hl)
   00F6 23            [ 6]  279 	inc	hl
   00F7 56            [ 7]  280 	ld	d, (hl)
   00F8 21 84 00      [10]  281 	ld	hl, #0x0084
   00FB 19            [11]  282 	add	hl, de
   00FC 5E            [ 7]  283 	ld	e, (hl)
   00FD 23            [ 6]  284 	inc	hl
   00FE 56            [ 7]  285 	ld	d, (hl)
   00FF 2B            [ 6]  286 	dec	hl
   0100 1B            [ 6]  287 	dec	de
   0101 73            [ 7]  288 	ld	(hl), e
   0102 23            [ 6]  289 	inc	hl
   0103 72            [ 7]  290 	ld	(hl), d
   0104 69            [ 4]  291 	ld	l, c
   0105 60            [ 4]  292 	ld	h, b
   0106 4E            [ 7]  293 	ld	c, (hl)
   0107 23            [ 6]  294 	inc	hl
   0108 46            [ 7]  295 	ld	b, (hl)
                            296 ;e4vm_core.c:51: (*v)->ip = (*v)->rs[(*v)->rs_p];
   0109 21 04 00      [10]  297 	ld	hl, #0x0004
   010C 09            [11]  298 	add	hl, bc
   010D EB            [ 4]  299 	ex	de, hl
   010E 69            [ 4]  300 	ld	l, c
   010F 60            [ 4]  301 	ld	h, b
   0110 C5            [11]  302 	push	bc
   0111 01 84 00      [10]  303 	ld	bc, #0x0084
   0114 09            [11]  304 	add	hl, bc
   0115 C1            [10]  305 	pop	bc
   0116 7E            [ 7]  306 	ld	a, (hl)
   0117 23            [ 6]  307 	inc	hl
   0118 66            [ 7]  308 	ld	h, (hl)
   0119 6F            [ 4]  309 	ld	l, a
   011A 29            [11]  310 	add	hl, hl
   011B 19            [11]  311 	add	hl, de
   011C 5E            [ 7]  312 	ld	e, (hl)
   011D 23            [ 6]  313 	inc	hl
   011E 56            [ 7]  314 	ld	d, (hl)
   011F 7B            [ 4]  315 	ld	a, e
   0120 02            [ 7]  316 	ld	(bc), a
   0121 03            [ 6]  317 	inc	bc
   0122 7A            [ 4]  318 	ld	a, d
   0123 02            [ 7]  319 	ld	(bc), a
                            320 ;e4vm_core.c:52: }
   0124 DD E1         [14]  321 	pop	ix
   0126 C9            [10]  322 	ret
                            323 ;e4vm_core.c:55: void e4vm_core_add_core_words (e4vm_type_x4thPtr *v)
                            324 ;	---------------------------------
                            325 ; Function e4vm_core_add_core_words
                            326 ; ---------------------------------
   0127                     327 _e4vm_core_add_core_words::
   0127 CDr00r00      [17]  328 	call	___sdcc_enter_ix
   012A 21 D8 FF      [10]  329 	ld	hl, #-40
   012D 39            [11]  330 	add	hl, sp
   012E F9            [ 6]  331 	ld	sp, hl
                            332 ;e4vm_core.c:61: __MOVE((CHAR*)"nop", _str__5, 4);
   012F 21 00 00      [10]  333 	ld	hl, #0
   0132 39            [11]  334 	add	hl, sp
   0133 4D            [ 4]  335 	ld	c, l
   0134 44            [ 4]  336 	ld	b, h
   0135 E5            [11]  337 	push	hl
   0136 11 04 00      [10]  338 	ld	de, #0x0004
   0139 D5            [11]  339 	push	de
   013A 11rE4r01      [10]  340 	ld	de, #___str_0
   013D D5            [11]  341 	push	de
   013E C5            [11]  342 	push	bc
   013F CDr00r00      [17]  343 	call	_memcpy
   0142 F1            [10]  344 	pop	af
   0143 F1            [10]  345 	pop	af
   0144 F1            [10]  346 	pop	af
   0145 E1            [10]  347 	pop	hl
                            348 ;e4vm_core.c:62: e4vm_utils_add_core_word(v, (void*)_str__5, e4vm_core_do_nop, 0);
   0146 AF            [ 4]  349 	xor	a, a
   0147 F5            [11]  350 	push	af
   0148 33            [ 6]  351 	inc	sp
   0149 01r00r00      [10]  352 	ld	bc, #_e4vm_core_do_nop
   014C C5            [11]  353 	push	bc
   014D E5            [11]  354 	push	hl
   014E DD 6E 04      [19]  355 	ld	l, 4 (ix)
   0151 DD 66 05      [19]  356 	ld	h, 5 (ix)
   0154 E5            [11]  357 	push	hl
   0155 CDr00r00      [17]  358 	call	_e4vm_utils_add_core_word
   0158 F1            [10]  359 	pop	af
   0159 F1            [10]  360 	pop	af
   015A F1            [10]  361 	pop	af
   015B 33            [ 6]  362 	inc	sp
                            363 ;e4vm_core.c:63: __MOVE((CHAR*)"dolist", _str__4, 7);
   015C 21 0A 00      [10]  364 	ld	hl, #10
   015F 39            [11]  365 	add	hl, sp
   0160 4D            [ 4]  366 	ld	c, l
   0161 44            [ 4]  367 	ld	b, h
   0162 E5            [11]  368 	push	hl
   0163 11 07 00      [10]  369 	ld	de, #0x0007
   0166 D5            [11]  370 	push	de
   0167 11rE8r01      [10]  371 	ld	de, #___str_1
   016A D5            [11]  372 	push	de
   016B C5            [11]  373 	push	bc
   016C CDr00r00      [17]  374 	call	_memcpy
   016F F1            [10]  375 	pop	af
   0170 F1            [10]  376 	pop	af
   0171 F1            [10]  377 	pop	af
   0172 E1            [10]  378 	pop	hl
                            379 ;e4vm_core.c:64: e4vm_utils_add_core_word(v, (void*)_str__4, e4vm_core_do_list, 0);
   0173 AF            [ 4]  380 	xor	a, a
   0174 F5            [11]  381 	push	af
   0175 33            [ 6]  382 	inc	sp
   0176 01r01r00      [10]  383 	ld	bc, #_e4vm_core_do_list
   0179 C5            [11]  384 	push	bc
   017A E5            [11]  385 	push	hl
   017B DD 6E 04      [19]  386 	ld	l, 4 (ix)
   017E DD 66 05      [19]  387 	ld	h, 5 (ix)
   0181 E5            [11]  388 	push	hl
   0182 CDr00r00      [17]  389 	call	_e4vm_utils_add_core_word
   0185 F1            [10]  390 	pop	af
   0186 F1            [10]  391 	pop	af
   0187 F1            [10]  392 	pop	af
   0188 33            [ 6]  393 	inc	sp
                            394 ;e4vm_core.c:65: __MOVE((CHAR*)"next", _str__3, 5);
   0189 21 14 00      [10]  395 	ld	hl, #20
   018C 39            [11]  396 	add	hl, sp
   018D 4D            [ 4]  397 	ld	c, l
   018E 44            [ 4]  398 	ld	b, h
   018F E5            [11]  399 	push	hl
   0190 11 05 00      [10]  400 	ld	de, #0x0005
   0193 D5            [11]  401 	push	de
   0194 11rEFr01      [10]  402 	ld	de, #___str_2
   0197 D5            [11]  403 	push	de
   0198 C5            [11]  404 	push	bc
   0199 CDr00r00      [17]  405 	call	_memcpy
   019C F1            [10]  406 	pop	af
   019D F1            [10]  407 	pop	af
   019E F1            [10]  408 	pop	af
   019F E1            [10]  409 	pop	hl
                            410 ;e4vm_core.c:66: e4vm_utils_add_core_word(v, (void*)_str__3, e4vm_core_do_next, 0);
   01A0 AF            [ 4]  411 	xor	a, a
   01A1 F5            [11]  412 	push	af
   01A2 33            [ 6]  413 	inc	sp
   01A3 01r5Cr00      [10]  414 	ld	bc, #_e4vm_core_do_next
   01A6 C5            [11]  415 	push	bc
   01A7 E5            [11]  416 	push	hl
   01A8 DD 6E 04      [19]  417 	ld	l, 4 (ix)
   01AB DD 66 05      [19]  418 	ld	h, 5 (ix)
   01AE E5            [11]  419 	push	hl
   01AF CDr00r00      [17]  420 	call	_e4vm_utils_add_core_word
   01B2 F1            [10]  421 	pop	af
   01B3 F1            [10]  422 	pop	af
   01B4 F1            [10]  423 	pop	af
   01B5 33            [ 6]  424 	inc	sp
                            425 ;e4vm_core.c:67: __MOVE((CHAR*)"exit", _str__2, 5);
   01B6 21 1E 00      [10]  426 	ld	hl, #30
   01B9 39            [11]  427 	add	hl, sp
   01BA 4D            [ 4]  428 	ld	c, l
   01BB 44            [ 4]  429 	ld	b, h
   01BC E5            [11]  430 	push	hl
   01BD 11 05 00      [10]  431 	ld	de, #0x0005
   01C0 D5            [11]  432 	push	de
   01C1 11rF4r01      [10]  433 	ld	de, #___str_3
   01C4 D5            [11]  434 	push	de
   01C5 C5            [11]  435 	push	bc
   01C6 CDr00r00      [17]  436 	call	_memcpy
   01C9 F1            [10]  437 	pop	af
   01CA F1            [10]  438 	pop	af
   01CB F1            [10]  439 	pop	af
   01CC E1            [10]  440 	pop	hl
                            441 ;e4vm_core.c:68: e4vm_utils_add_core_word(v, (void*)_str__2, e4vm_core_do_exit, 0);
   01CD AF            [ 4]  442 	xor	a, a
   01CE F5            [11]  443 	push	af
   01CF 33            [ 6]  444 	inc	sp
   01D0 01rEAr00      [10]  445 	ld	bc, #_e4vm_core_do_exit
   01D3 C5            [11]  446 	push	bc
   01D4 E5            [11]  447 	push	hl
   01D5 DD 6E 04      [19]  448 	ld	l, 4 (ix)
   01D8 DD 66 05      [19]  449 	ld	h, 5 (ix)
   01DB E5            [11]  450 	push	hl
   01DC CDr00r00      [17]  451 	call	_e4vm_utils_add_core_word
                            452 ;e4vm_core.c:69: }
   01DF DD F9         [10]  453 	ld	sp,ix
   01E1 DD E1         [14]  454 	pop	ix
   01E3 C9            [10]  455 	ret
   01E4                     456 ___str_0:
   01E4 6E 6F 70            457 	.ascii "nop"
   01E7 00                  458 	.db 0x00
   01E8                     459 ___str_1:
   01E8 64 6F 6C 69 73 74   460 	.ascii "dolist"
   01EE 00                  461 	.db 0x00
   01EF                     462 ___str_2:
   01EF 6E 65 78 74         463 	.ascii "next"
   01F3 00                  464 	.db 0x00
   01F4                     465 ___str_3:
   01F4 65 78 69 74         466 	.ascii "exit"
   01F8 00                  467 	.db 0x00
                            468 ;e4vm_core.c:73: export void *e4vm_core__init (void)
                            469 ;	---------------------------------
                            470 ; Function e4vm_core__init
                            471 ; ---------------------------------
   01F9                     472 _e4vm_core__init::
                            473 ;e4vm_core.c:75: __DEFMOD;
   01F9 21rF9r01      [10]  474 	LD	HL,#. 
   01FC 36 C9         [10]  475 	LD (HL),#0xC9 
                            476 ;e4vm_core.c:78: __IMPORT(e4vm_type__init);
   01FE CDr00r00      [17]  477 	call	_e4vm_type__init
                            478 ;e4vm_core.c:79: __IMPORT(e4vm_utils__init);
                            479 ;e4vm_core.c:83: }
   0201 C3r00r00      [10]  480 	jp  _e4vm_utils__init
                            481 	.area _CODE
                            482 	.area _INITIALIZER
                            483 	.area _CABS (ABS)
