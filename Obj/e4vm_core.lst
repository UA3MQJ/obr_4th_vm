                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.9.3 #11378 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module e4vm_core
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _e4vm_core__init
                             12 	.globl _e4vm_utils__init
                             13 	.globl _e4vm_utils_add_core_word
                             14 	.globl _e4vm_type__init
                             15 	.globl _memcpy
                             16 	.globl _e4vm_core_do_nop
                             17 	.globl _e4vm_core_do_list
                             18 	.globl _e4vm_core_do_next
                             19 	.globl _e4vm_core_do_exit
                             20 	.globl _e4vm_core_add_core_words
                             21 ;--------------------------------------------------------
                             22 ; special function registers
                             23 ;--------------------------------------------------------
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DATA
                             28 ;--------------------------------------------------------
                             29 ; ram data
                             30 ;--------------------------------------------------------
                             31 	.area _INITIALIZED
                             32 ;--------------------------------------------------------
                             33 ; absolute external ram data
                             34 ;--------------------------------------------------------
                             35 	.area _DABS (ABS)
                             36 ;--------------------------------------------------------
                             37 ; global & static initialisations
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _GSINIT
                             41 	.area _GSFINAL
                             42 	.area _GSINIT
                             43 ;--------------------------------------------------------
                             44 ; Home
                             45 ;--------------------------------------------------------
                             46 	.area _HOME
                             47 	.area _HOME
                             48 ;--------------------------------------------------------
                             49 ; code
                             50 ;--------------------------------------------------------
                             51 	.area _CODE
                             52 ;e4vm_core.c:22: void e4vm_core_do_nop (e4vm_type_x4thPtr *v)
                             53 ;	---------------------------------
                             54 ; Function e4vm_core_do_nop
                             55 ; ---------------------------------
   0000                      56 _e4vm_core_do_nop::
                             57 ;e4vm_core.c:24: }
   0000 C9            [10]   58 	ret
                             59 ;e4vm_core.c:27: void e4vm_core_do_list (e4vm_type_x4thPtr *v)
                             60 ;	---------------------------------
                             61 ; Function e4vm_core_do_list
                             62 ; ---------------------------------
   0001                      63 _e4vm_core_do_list::
   0001 CDr00r00      [17]   64 	call	___sdcc_enter_ix
   0004 F5            [11]   65 	push	af
                             66 ;e4vm_core.c:30: (*v)->rs[(*v)->rs_p] = (*v)->ip;
   0005 DD 7E 04      [19]   67 	ld	a, 4 (ix)
   0008 DD 77 FE      [19]   68 	ld	-2 (ix), a
   000B DD 7E 05      [19]   69 	ld	a, 5 (ix)
   000E DD 77 FF      [19]   70 	ld	-1 (ix), a
   0011 E1            [10]   71 	pop	hl
   0012 E5            [11]   72 	push	hl
   0013 4E            [ 7]   73 	ld	c, (hl)
   0014 23            [ 6]   74 	inc	hl
   0015 46            [ 7]   75 	ld	b, (hl)
   0016 21 04 00      [10]   76 	ld	hl, #0x0004
   0019 09            [11]   77 	add	hl, bc
   001A EB            [ 4]   78 	ex	de, hl
   001B 69            [ 4]   79 	ld	l, c
   001C 60            [ 4]   80 	ld	h, b
   001D C5            [11]   81 	push	bc
   001E 01 84 00      [10]   82 	ld	bc, #0x0084
   0021 09            [11]   83 	add	hl, bc
   0022 C1            [10]   84 	pop	bc
   0023 7E            [ 7]   85 	ld	a, (hl)
   0024 23            [ 6]   86 	inc	hl
   0025 66            [ 7]   87 	ld	h, (hl)
   0026 6F            [ 4]   88 	ld	l, a
   0027 29            [11]   89 	add	hl, hl
   0028 19            [11]   90 	add	hl, de
   0029 EB            [ 4]   91 	ex	de, hl
   002A 69            [ 4]   92 	ld	l, c
   002B 60            [ 4]   93 	ld	h, b
   002C 4E            [ 7]   94 	ld	c, (hl)
   002D 23            [ 6]   95 	inc	hl
   002E 46            [ 7]   96 	ld	b, (hl)
   002F 79            [ 4]   97 	ld	a, c
   0030 12            [ 7]   98 	ld	(de), a
   0031 13            [ 6]   99 	inc	de
   0032 78            [ 4]  100 	ld	a, b
   0033 12            [ 7]  101 	ld	(de), a
                            102 ;e4vm_core.c:31: (*v)->rs_p = (*v)->rs_p + 1;
   0034 E1            [10]  103 	pop	hl
   0035 E5            [11]  104 	push	hl
   0036 4E            [ 7]  105 	ld	c, (hl)
   0037 23            [ 6]  106 	inc	hl
   0038 46            [ 7]  107 	ld	b, (hl)
   0039 21 84 00      [10]  108 	ld	hl, #0x0084
   003C 09            [11]  109 	add	hl, bc
   003D 4E            [ 7]  110 	ld	c, (hl)
   003E 23            [ 6]  111 	inc	hl
   003F 46            [ 7]  112 	ld	b, (hl)
   0040 2B            [ 6]  113 	dec	hl
   0041 03            [ 6]  114 	inc	bc
   0042 78            [ 4]  115 	ld	a, b
   0043 71            [ 7]  116 	ld	(hl), c
   0044 23            [ 6]  117 	inc	hl
   0045 77            [ 7]  118 	ld	(hl), a
                            119 ;e4vm_core.c:30: (*v)->rs[(*v)->rs_p] = (*v)->ip;
   0046 E1            [10]  120 	pop	hl
   0047 E5            [11]  121 	push	hl
   0048 4E            [ 7]  122 	ld	c, (hl)
   0049 23            [ 6]  123 	inc	hl
   004A 46            [ 7]  124 	ld	b, (hl)
                            125 ;e4vm_core.c:32: (*v)->ip = (*v)->wp + 1;
   004B 69            [ 4]  126 	ld	l, c
   004C 60            [ 4]  127 	ld	h, b
   004D 23            [ 6]  128 	inc	hl
   004E 23            [ 6]  129 	inc	hl
   004F 5E            [ 7]  130 	ld	e, (hl)
   0050 23            [ 6]  131 	inc	hl
   0051 56            [ 7]  132 	ld	d, (hl)
   0052 13            [ 6]  133 	inc	de
   0053 7B            [ 4]  134 	ld	a, e
   0054 02            [ 7]  135 	ld	(bc), a
   0055 03            [ 6]  136 	inc	bc
   0056 7A            [ 4]  137 	ld	a, d
   0057 02            [ 7]  138 	ld	(bc), a
                            139 ;e4vm_core.c:33: }
   0058 F1            [10]  140 	pop	af
   0059 DD E1         [14]  141 	pop	ix
   005B C9            [10]  142 	ret
                            143 ;e4vm_core.c:36: void e4vm_core_do_next (e4vm_type_x4thPtr *v)
                            144 ;	---------------------------------
                            145 ; Function e4vm_core_do_next
                            146 ; ---------------------------------
   005C                     147 _e4vm_core_do_next::
   005C CDr00r00      [17]  148 	call	___sdcc_enter_ix
   005F F5            [11]  149 	push	af
                            150 ;e4vm_core.c:39: while (!((*v)->ip == 0)) {
   0060 DD 4E 04      [19]  151 	ld	c, 4 (ix)
   0063 DD 46 05      [19]  152 	ld	b, 5 (ix)
   0066                     153 00101$:
   0066 69            [ 4]  154 	ld	l, c
   0067 60            [ 4]  155 	ld	h, b
   0068 5E            [ 7]  156 	ld	e, (hl)
   0069 23            [ 6]  157 	inc	hl
   006A 56            [ 7]  158 	ld	d, (hl)
   006B 6B            [ 4]  159 	ld	l, e
   006C 62            [ 4]  160 	ld	h, d
   006D 7E            [ 7]  161 	ld	a, (hl)
   006E 23            [ 6]  162 	inc	hl
   006F 66            [ 7]  163 	ld	h, (hl)
   0070 6F            [ 4]  164 	ld	l,a
   0071 B4            [ 4]  165 	or	a,h
   0072 28 77         [12]  166 	jr	Z,00104$
                            167 ;e4vm_core.c:40: (*v)->wp = (*v)->mem[(*v)->ip];
   0074 7B            [ 4]  168 	ld	a, e
   0075 C6 02         [ 7]  169 	add	a, #0x02
   0077 DD 77 FE      [19]  170 	ld	-2 (ix), a
   007A 7A            [ 4]  171 	ld	a, d
   007B CE 00         [ 7]  172 	adc	a, #0x00
   007D DD 77 FF      [19]  173 	ld	-1 (ix), a
   0080 7B            [ 4]  174 	ld	a, e
   0081 C6 8A         [ 7]  175 	add	a, #0x8a
   0083 5F            [ 4]  176 	ld	e, a
   0084 30 01         [12]  177 	jr	NC,00116$
   0086 14            [ 4]  178 	inc	d
   0087                     179 00116$:
   0087 29            [11]  180 	add	hl, hl
   0088 19            [11]  181 	add	hl, de
   0089 5E            [ 7]  182 	ld	e, (hl)
   008A 23            [ 6]  183 	inc	hl
   008B 56            [ 7]  184 	ld	d, (hl)
   008C E1            [10]  185 	pop	hl
   008D E5            [11]  186 	push	hl
   008E 73            [ 7]  187 	ld	(hl), e
   008F 23            [ 6]  188 	inc	hl
   0090 72            [ 7]  189 	ld	(hl), d
                            190 ;e4vm_core.c:39: while (!((*v)->ip == 0)) {
   0091 69            [ 4]  191 	ld	l, c
   0092 60            [ 4]  192 	ld	h, b
   0093 5E            [ 7]  193 	ld	e, (hl)
   0094 23            [ 6]  194 	inc	hl
   0095 56            [ 7]  195 	ld	d, (hl)
                            196 ;e4vm_core.c:41: (*v)->ip = (*v)->ip + 1;
   0096 6B            [ 4]  197 	ld	l, e
   0097 62            [ 4]  198 	ld	h, d
   0098 7E            [ 7]  199 	ld	a, (hl)
   0099 23            [ 6]  200 	inc	hl
   009A 66            [ 7]  201 	ld	h, (hl)
   009B 6F            [ 4]  202 	ld	l, a
   009C 23            [ 6]  203 	inc	hl
   009D E3            [19]  204 	ex	(sp), hl
   009E DD 7E FE      [19]  205 	ld	a, -2 (ix)
   00A1 12            [ 7]  206 	ld	(de), a
   00A2 13            [ 6]  207 	inc	de
   00A3 DD 7E FF      [19]  208 	ld	a, -1 (ix)
   00A6 12            [ 7]  209 	ld	(de), a
                            210 ;e4vm_core.c:42: word_index = (*v)->mem[(*v)->wp];
   00A7 69            [ 4]  211 	ld	l, c
   00A8 60            [ 4]  212 	ld	h, b
   00A9 5E            [ 7]  213 	ld	e, (hl)
   00AA 23            [ 6]  214 	inc	hl
   00AB 56            [ 7]  215 	ld	d, (hl)
   00AC 21 8A 00      [10]  216 	ld	hl, #0x008a
   00AF 19            [11]  217 	add	hl, de
   00B0 E3            [19]  218 	ex	(sp), hl
   00B1 6B            [ 4]  219 	ld	l, e
   00B2 62            [ 4]  220 	ld	h, d
   00B3 23            [ 6]  221 	inc	hl
   00B4 23            [ 6]  222 	inc	hl
   00B5 7E            [ 7]  223 	ld	a, (hl)
   00B6 23            [ 6]  224 	inc	hl
   00B7 66            [ 7]  225 	ld	h, (hl)
   00B8 6F            [ 4]  226 	ld	l, a
   00B9 29            [11]  227 	add	hl, hl
   00BA 7D            [ 4]  228 	ld	a, l
   00BB DD 86 FE      [19]  229 	add	a, -2 (ix)
   00BE 6F            [ 4]  230 	ld	l, a
   00BF 7C            [ 4]  231 	ld	a, h
   00C0 DD 8E FF      [19]  232 	adc	a, -1 (ix)
   00C3 67            [ 4]  233 	ld	h, a
   00C4 7E            [ 7]  234 	ld	a, (hl)
   00C5 23            [ 6]  235 	inc	hl
   00C6 66            [ 7]  236 	ld	h, (hl)
   00C7 6F            [ 4]  237 	ld	l, a
                            238 ;e4vm_core.c:43: (*(*v)->words[word_index].proc)(v);
   00C8 7B            [ 4]  239 	ld	a, e
   00C9 C6 CD         [ 7]  240 	add	a, #0xcd
   00CB 5F            [ 4]  241 	ld	e, a
   00CC 30 01         [12]  242 	jr	NC,00117$
   00CE 14            [ 4]  243 	inc	d
   00CF                     244 00117$:
   00CF D5            [11]  245 	push	de
   00D0 5D            [ 4]  246 	ld	e, l
   00D1 54            [ 4]  247 	ld	d, h
   00D2 29            [11]  248 	add	hl, hl
   00D3 19            [11]  249 	add	hl, de
   00D4 29            [11]  250 	add	hl, hl
   00D5 19            [11]  251 	add	hl, de
   00D6 29            [11]  252 	add	hl, hl
   00D7 D1            [10]  253 	pop	de
   00D8 19            [11]  254 	add	hl, de
   00D9 11 0A 00      [10]  255 	ld	de, #0x000a
   00DC 19            [11]  256 	add	hl, de
   00DD 7E            [ 7]  257 	ld	a, (hl)
   00DE 23            [ 6]  258 	inc	hl
   00DF 66            [ 7]  259 	ld	h, (hl)
   00E0 6F            [ 4]  260 	ld	l, a
   00E1 C5            [11]  261 	push	bc
   00E2 C5            [11]  262 	push	bc
   00E3 CDr00r00      [17]  263 	call	___sdcc_call_hl
   00E6 F1            [10]  264 	pop	af
   00E7 C1            [10]  265 	pop	bc
   00E8 C3r66r00      [10]  266 	jp	00101$
   00EB                     267 00104$:
                            268 ;e4vm_core.c:45: }
   00EB F1            [10]  269 	pop	af
   00EC DD E1         [14]  270 	pop	ix
   00EE C9            [10]  271 	ret
                            272 ;e4vm_core.c:48: void e4vm_core_do_exit (e4vm_type_x4thPtr *v)
                            273 ;	---------------------------------
                            274 ; Function e4vm_core_do_exit
                            275 ; ---------------------------------
   00EF                     276 _e4vm_core_do_exit::
   00EF CDr00r00      [17]  277 	call	___sdcc_enter_ix
                            278 ;e4vm_core.c:50: (*v)->rs_p = (*v)->rs_p - 1;
   00F2 DD 4E 04      [19]  279 	ld	c, 4 (ix)
   00F5 DD 46 05      [19]  280 	ld	b, 5 (ix)
   00F8 69            [ 4]  281 	ld	l, c
   00F9 60            [ 4]  282 	ld	h, b
   00FA 5E            [ 7]  283 	ld	e, (hl)
   00FB 23            [ 6]  284 	inc	hl
   00FC 56            [ 7]  285 	ld	d, (hl)
   00FD 21 84 00      [10]  286 	ld	hl, #0x0084
   0100 19            [11]  287 	add	hl, de
   0101 5E            [ 7]  288 	ld	e, (hl)
   0102 23            [ 6]  289 	inc	hl
   0103 56            [ 7]  290 	ld	d, (hl)
   0104 2B            [ 6]  291 	dec	hl
   0105 1B            [ 6]  292 	dec	de
   0106 73            [ 7]  293 	ld	(hl), e
   0107 23            [ 6]  294 	inc	hl
   0108 72            [ 7]  295 	ld	(hl), d
   0109 69            [ 4]  296 	ld	l, c
   010A 60            [ 4]  297 	ld	h, b
   010B 4E            [ 7]  298 	ld	c, (hl)
   010C 23            [ 6]  299 	inc	hl
   010D 46            [ 7]  300 	ld	b, (hl)
                            301 ;e4vm_core.c:51: (*v)->ip = (*v)->rs[(*v)->rs_p];
   010E 21 04 00      [10]  302 	ld	hl, #0x0004
   0111 09            [11]  303 	add	hl, bc
   0112 EB            [ 4]  304 	ex	de, hl
   0113 69            [ 4]  305 	ld	l, c
   0114 60            [ 4]  306 	ld	h, b
   0115 C5            [11]  307 	push	bc
   0116 01 84 00      [10]  308 	ld	bc, #0x0084
   0119 09            [11]  309 	add	hl, bc
   011A C1            [10]  310 	pop	bc
   011B 7E            [ 7]  311 	ld	a, (hl)
   011C 23            [ 6]  312 	inc	hl
   011D 66            [ 7]  313 	ld	h, (hl)
   011E 6F            [ 4]  314 	ld	l, a
   011F 29            [11]  315 	add	hl, hl
   0120 19            [11]  316 	add	hl, de
   0121 5E            [ 7]  317 	ld	e, (hl)
   0122 23            [ 6]  318 	inc	hl
   0123 56            [ 7]  319 	ld	d, (hl)
   0124 7B            [ 4]  320 	ld	a, e
   0125 02            [ 7]  321 	ld	(bc), a
   0126 03            [ 6]  322 	inc	bc
   0127 7A            [ 4]  323 	ld	a, d
   0128 02            [ 7]  324 	ld	(bc), a
                            325 ;e4vm_core.c:52: }
   0129 DD E1         [14]  326 	pop	ix
   012B C9            [10]  327 	ret
                            328 ;e4vm_core.c:55: void e4vm_core_add_core_words (e4vm_type_x4thPtr *v)
                            329 ;	---------------------------------
                            330 ; Function e4vm_core_add_core_words
                            331 ; ---------------------------------
   012C                     332 _e4vm_core_add_core_words::
   012C CDr00r00      [17]  333 	call	___sdcc_enter_ix
   012F 21 E0 FF      [10]  334 	ld	hl, #-32
   0132 39            [11]  335 	add	hl, sp
   0133 F9            [ 6]  336 	ld	sp, hl
                            337 ;e4vm_core.c:61: __MOVE((CHAR*)"nop", _str__5, 4);
   0134 21 00 00      [10]  338 	ld	hl, #0
   0137 39            [11]  339 	add	hl, sp
   0138 4D            [ 4]  340 	ld	c, l
   0139 44            [ 4]  341 	ld	b, h
   013A E5            [11]  342 	push	hl
   013B 11 04 00      [10]  343 	ld	de, #0x0004
   013E D5            [11]  344 	push	de
   013F 11rE9r01      [10]  345 	ld	de, #___str_0
   0142 D5            [11]  346 	push	de
   0143 C5            [11]  347 	push	bc
   0144 CDr00r00      [17]  348 	call	_memcpy
   0147 F1            [10]  349 	pop	af
   0148 F1            [10]  350 	pop	af
   0149 F1            [10]  351 	pop	af
   014A E1            [10]  352 	pop	hl
                            353 ;e4vm_core.c:62: e4vm_utils_add_core_word(v, (void*)_str__5, e4vm_core_do_nop, 0);
   014B AF            [ 4]  354 	xor	a, a
   014C F5            [11]  355 	push	af
   014D 33            [ 6]  356 	inc	sp
   014E 01r00r00      [10]  357 	ld	bc, #_e4vm_core_do_nop
   0151 C5            [11]  358 	push	bc
   0152 E5            [11]  359 	push	hl
   0153 DD 6E 04      [19]  360 	ld	l, 4 (ix)
   0156 DD 66 05      [19]  361 	ld	h, 5 (ix)
   0159 E5            [11]  362 	push	hl
   015A CDr00r00      [17]  363 	call	_e4vm_utils_add_core_word
   015D F1            [10]  364 	pop	af
   015E F1            [10]  365 	pop	af
   015F F1            [10]  366 	pop	af
   0160 33            [ 6]  367 	inc	sp
                            368 ;e4vm_core.c:63: __MOVE((CHAR*)"dolist", _str__4, 7);
   0161 21 08 00      [10]  369 	ld	hl, #8
   0164 39            [11]  370 	add	hl, sp
   0165 4D            [ 4]  371 	ld	c, l
   0166 44            [ 4]  372 	ld	b, h
   0167 E5            [11]  373 	push	hl
   0168 11 07 00      [10]  374 	ld	de, #0x0007
   016B D5            [11]  375 	push	de
   016C 11rEDr01      [10]  376 	ld	de, #___str_1
   016F D5            [11]  377 	push	de
   0170 C5            [11]  378 	push	bc
   0171 CDr00r00      [17]  379 	call	_memcpy
   0174 F1            [10]  380 	pop	af
   0175 F1            [10]  381 	pop	af
   0176 F1            [10]  382 	pop	af
   0177 E1            [10]  383 	pop	hl
                            384 ;e4vm_core.c:64: e4vm_utils_add_core_word(v, (void*)_str__4, e4vm_core_do_list, 0);
   0178 AF            [ 4]  385 	xor	a, a
   0179 F5            [11]  386 	push	af
   017A 33            [ 6]  387 	inc	sp
   017B 01r01r00      [10]  388 	ld	bc, #_e4vm_core_do_list
   017E C5            [11]  389 	push	bc
   017F E5            [11]  390 	push	hl
   0180 DD 6E 04      [19]  391 	ld	l, 4 (ix)
   0183 DD 66 05      [19]  392 	ld	h, 5 (ix)
   0186 E5            [11]  393 	push	hl
   0187 CDr00r00      [17]  394 	call	_e4vm_utils_add_core_word
   018A F1            [10]  395 	pop	af
   018B F1            [10]  396 	pop	af
   018C F1            [10]  397 	pop	af
   018D 33            [ 6]  398 	inc	sp
                            399 ;e4vm_core.c:65: __MOVE((CHAR*)"next", _str__3, 5);
   018E 21 10 00      [10]  400 	ld	hl, #16
   0191 39            [11]  401 	add	hl, sp
   0192 4D            [ 4]  402 	ld	c, l
   0193 44            [ 4]  403 	ld	b, h
   0194 E5            [11]  404 	push	hl
   0195 11 05 00      [10]  405 	ld	de, #0x0005
   0198 D5            [11]  406 	push	de
   0199 11rF4r01      [10]  407 	ld	de, #___str_2
   019C D5            [11]  408 	push	de
   019D C5            [11]  409 	push	bc
   019E CDr00r00      [17]  410 	call	_memcpy
   01A1 F1            [10]  411 	pop	af
   01A2 F1            [10]  412 	pop	af
   01A3 F1            [10]  413 	pop	af
   01A4 E1            [10]  414 	pop	hl
                            415 ;e4vm_core.c:66: e4vm_utils_add_core_word(v, (void*)_str__3, e4vm_core_do_next, 0);
   01A5 AF            [ 4]  416 	xor	a, a
   01A6 F5            [11]  417 	push	af
   01A7 33            [ 6]  418 	inc	sp
   01A8 01r5Cr00      [10]  419 	ld	bc, #_e4vm_core_do_next
   01AB C5            [11]  420 	push	bc
   01AC E5            [11]  421 	push	hl
   01AD DD 6E 04      [19]  422 	ld	l, 4 (ix)
   01B0 DD 66 05      [19]  423 	ld	h, 5 (ix)
   01B3 E5            [11]  424 	push	hl
   01B4 CDr00r00      [17]  425 	call	_e4vm_utils_add_core_word
   01B7 F1            [10]  426 	pop	af
   01B8 F1            [10]  427 	pop	af
   01B9 F1            [10]  428 	pop	af
   01BA 33            [ 6]  429 	inc	sp
                            430 ;e4vm_core.c:67: __MOVE((CHAR*)"exit", _str__2, 5);
   01BB 21 18 00      [10]  431 	ld	hl, #24
   01BE 39            [11]  432 	add	hl, sp
   01BF 4D            [ 4]  433 	ld	c, l
   01C0 44            [ 4]  434 	ld	b, h
   01C1 E5            [11]  435 	push	hl
   01C2 11 05 00      [10]  436 	ld	de, #0x0005
   01C5 D5            [11]  437 	push	de
   01C6 11rF9r01      [10]  438 	ld	de, #___str_3
   01C9 D5            [11]  439 	push	de
   01CA C5            [11]  440 	push	bc
   01CB CDr00r00      [17]  441 	call	_memcpy
   01CE F1            [10]  442 	pop	af
   01CF F1            [10]  443 	pop	af
   01D0 F1            [10]  444 	pop	af
   01D1 E1            [10]  445 	pop	hl
                            446 ;e4vm_core.c:68: e4vm_utils_add_core_word(v, (void*)_str__2, e4vm_core_do_exit, 0);
   01D2 AF            [ 4]  447 	xor	a, a
   01D3 F5            [11]  448 	push	af
   01D4 33            [ 6]  449 	inc	sp
   01D5 01rEFr00      [10]  450 	ld	bc, #_e4vm_core_do_exit
   01D8 C5            [11]  451 	push	bc
   01D9 E5            [11]  452 	push	hl
   01DA DD 6E 04      [19]  453 	ld	l, 4 (ix)
   01DD DD 66 05      [19]  454 	ld	h, 5 (ix)
   01E0 E5            [11]  455 	push	hl
   01E1 CDr00r00      [17]  456 	call	_e4vm_utils_add_core_word
                            457 ;e4vm_core.c:69: }
   01E4 DD F9         [10]  458 	ld	sp,ix
   01E6 DD E1         [14]  459 	pop	ix
   01E8 C9            [10]  460 	ret
   01E9                     461 ___str_0:
   01E9 6E 6F 70            462 	.ascii "nop"
   01EC 00                  463 	.db 0x00
   01ED                     464 ___str_1:
   01ED 64 6F 6C 69 73 74   465 	.ascii "dolist"
   01F3 00                  466 	.db 0x00
   01F4                     467 ___str_2:
   01F4 6E 65 78 74         468 	.ascii "next"
   01F8 00                  469 	.db 0x00
   01F9                     470 ___str_3:
   01F9 65 78 69 74         471 	.ascii "exit"
   01FD 00                  472 	.db 0x00
                            473 ;e4vm_core.c:73: export void *e4vm_core__init (void)
                            474 ;	---------------------------------
                            475 ; Function e4vm_core__init
                            476 ; ---------------------------------
   01FE                     477 _e4vm_core__init::
                            478 ;e4vm_core.c:75: __DEFMOD;
   01FE 21rFEr01      [10]  479 	LD	HL,#. 
   0201 36 C9         [10]  480 	LD (HL),#0xC9 
                            481 ;e4vm_core.c:78: __IMPORT(e4vm_type__init);
   0203 CDr00r00      [17]  482 	call	_e4vm_type__init
                            483 ;e4vm_core.c:79: __IMPORT(e4vm_utils__init);
                            484 ;e4vm_core.c:83: }
   0206 C3r00r00      [10]  485 	jp  _e4vm_utils__init
                            486 	.area _CODE
                            487 	.area _INITIALIZER
                            488 	.area _CABS (ABS)
