                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.9.3 #11378 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module e4vm_core
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _e4vm_core__init
                             12 	.globl _e4vm_utils__init
                             13 	.globl _e4vm_utils_add_core_word
                             14 	.globl _e4vm_type__init
                             15 	.globl _memcpy
                             16 	.globl _e4vm_core_do_nop
                             17 	.globl _e4vm_core_do_list
                             18 	.globl _e4vm_core_do_next
                             19 	.globl _e4vm_core_do_exit
                             20 	.globl _e4vm_core_add_core_words
                             21 ;--------------------------------------------------------
                             22 ; special function registers
                             23 ;--------------------------------------------------------
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DATA
                             28 ;--------------------------------------------------------
                             29 ; ram data
                             30 ;--------------------------------------------------------
                             31 	.area _INITIALIZED
                             32 ;--------------------------------------------------------
                             33 ; absolute external ram data
                             34 ;--------------------------------------------------------
                             35 	.area _DABS (ABS)
                             36 ;--------------------------------------------------------
                             37 ; global & static initialisations
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _GSINIT
                             41 	.area _GSFINAL
                             42 	.area _GSINIT
                             43 ;--------------------------------------------------------
                             44 ; Home
                             45 ;--------------------------------------------------------
                             46 	.area _HOME
                             47 	.area _HOME
                             48 ;--------------------------------------------------------
                             49 ; code
                             50 ;--------------------------------------------------------
                             51 	.area _CODE
                             52 ;e4vm_core.c:22: void e4vm_core_do_nop (e4vm_type_x4thPtr *v)
                             53 ;	---------------------------------
                             54 ; Function e4vm_core_do_nop
                             55 ; ---------------------------------
   0000                      56 _e4vm_core_do_nop::
                             57 ;e4vm_core.c:24: }
   0000 C9            [10]   58 	ret
                             59 ;e4vm_core.c:27: void e4vm_core_do_list (e4vm_type_x4thPtr *v)
                             60 ;	---------------------------------
                             61 ; Function e4vm_core_do_list
                             62 ; ---------------------------------
   0001                      63 _e4vm_core_do_list::
   0001 CDr00r00      [17]   64 	call	___sdcc_enter_ix
   0004 F5            [11]   65 	push	af
                             66 ;e4vm_core.c:30: (*v)->rs[(*v)->rs_p] = (*v)->ip;
   0005 DD 7E 04      [19]   67 	ld	a, 4 (ix)
   0008 DD 77 FE      [19]   68 	ld	-2 (ix), a
   000B DD 7E 05      [19]   69 	ld	a, 5 (ix)
   000E DD 77 FF      [19]   70 	ld	-1 (ix), a
   0011 E1            [10]   71 	pop	hl
   0012 E5            [11]   72 	push	hl
   0013 4E            [ 7]   73 	ld	c, (hl)
   0014 23            [ 6]   74 	inc	hl
   0015 46            [ 7]   75 	ld	b, (hl)
   0016 21 04 00      [10]   76 	ld	hl, #0x0004
   0019 09            [11]   77 	add	hl, bc
   001A EB            [ 4]   78 	ex	de, hl
   001B 69            [ 4]   79 	ld	l, c
   001C 60            [ 4]   80 	ld	h, b
   001D C5            [11]   81 	push	bc
   001E 01 84 00      [10]   82 	ld	bc, #0x0084
   0021 09            [11]   83 	add	hl, bc
   0022 C1            [10]   84 	pop	bc
   0023 7E            [ 7]   85 	ld	a, (hl)
   0024 23            [ 6]   86 	inc	hl
   0025 66            [ 7]   87 	ld	h, (hl)
   0026 6F            [ 4]   88 	ld	l, a
   0027 29            [11]   89 	add	hl, hl
   0028 19            [11]   90 	add	hl, de
   0029 EB            [ 4]   91 	ex	de, hl
   002A 69            [ 4]   92 	ld	l, c
   002B 60            [ 4]   93 	ld	h, b
   002C 4E            [ 7]   94 	ld	c, (hl)
   002D 23            [ 6]   95 	inc	hl
   002E 46            [ 7]   96 	ld	b, (hl)
   002F 79            [ 4]   97 	ld	a, c
   0030 12            [ 7]   98 	ld	(de), a
   0031 13            [ 6]   99 	inc	de
   0032 78            [ 4]  100 	ld	a, b
   0033 12            [ 7]  101 	ld	(de), a
                            102 ;e4vm_core.c:31: (*v)->rs_p = (*v)->rs_p + 1;
   0034 E1            [10]  103 	pop	hl
   0035 E5            [11]  104 	push	hl
   0036 4E            [ 7]  105 	ld	c, (hl)
   0037 23            [ 6]  106 	inc	hl
   0038 46            [ 7]  107 	ld	b, (hl)
   0039 21 84 00      [10]  108 	ld	hl, #0x0084
   003C 09            [11]  109 	add	hl, bc
   003D 4E            [ 7]  110 	ld	c, (hl)
   003E 23            [ 6]  111 	inc	hl
   003F 46            [ 7]  112 	ld	b, (hl)
   0040 2B            [ 6]  113 	dec	hl
   0041 03            [ 6]  114 	inc	bc
   0042 78            [ 4]  115 	ld	a, b
   0043 71            [ 7]  116 	ld	(hl), c
   0044 23            [ 6]  117 	inc	hl
   0045 77            [ 7]  118 	ld	(hl), a
                            119 ;e4vm_core.c:30: (*v)->rs[(*v)->rs_p] = (*v)->ip;
   0046 E1            [10]  120 	pop	hl
   0047 E5            [11]  121 	push	hl
   0048 4E            [ 7]  122 	ld	c, (hl)
   0049 23            [ 6]  123 	inc	hl
   004A 46            [ 7]  124 	ld	b, (hl)
                            125 ;e4vm_core.c:32: (*v)->ip = (*v)->wp + 1;
   004B 69            [ 4]  126 	ld	l, c
   004C 60            [ 4]  127 	ld	h, b
   004D 23            [ 6]  128 	inc	hl
   004E 23            [ 6]  129 	inc	hl
   004F 5E            [ 7]  130 	ld	e, (hl)
   0050 23            [ 6]  131 	inc	hl
   0051 56            [ 7]  132 	ld	d, (hl)
   0052 13            [ 6]  133 	inc	de
   0053 7B            [ 4]  134 	ld	a, e
   0054 02            [ 7]  135 	ld	(bc), a
   0055 03            [ 6]  136 	inc	bc
   0056 7A            [ 4]  137 	ld	a, d
   0057 02            [ 7]  138 	ld	(bc), a
                            139 ;e4vm_core.c:33: }
   0058 F1            [10]  140 	pop	af
   0059 DD E1         [14]  141 	pop	ix
   005B C9            [10]  142 	ret
                            143 ;e4vm_core.c:36: void e4vm_core_do_next (e4vm_type_x4thPtr *v)
                            144 ;	---------------------------------
                            145 ; Function e4vm_core_do_next
                            146 ; ---------------------------------
   005C                     147 _e4vm_core_do_next::
   005C CDr00r00      [17]  148 	call	___sdcc_enter_ix
   005F F5            [11]  149 	push	af
                            150 ;e4vm_core.c:39: while (!((*v)->ip == 0)) {
   0060 DD 4E 04      [19]  151 	ld	c, 4 (ix)
   0063 DD 46 05      [19]  152 	ld	b, 5 (ix)
   0066                     153 00101$:
   0066 69            [ 4]  154 	ld	l, c
   0067 60            [ 4]  155 	ld	h, b
   0068 5E            [ 7]  156 	ld	e, (hl)
   0069 23            [ 6]  157 	inc	hl
   006A 56            [ 7]  158 	ld	d, (hl)
   006B 6B            [ 4]  159 	ld	l, e
   006C 62            [ 4]  160 	ld	h, d
   006D 7E            [ 7]  161 	ld	a, (hl)
   006E 23            [ 6]  162 	inc	hl
   006F 66            [ 7]  163 	ld	h, (hl)
   0070 6F            [ 4]  164 	ld	l,a
   0071 B4            [ 4]  165 	or	a,h
   0072 28 6A         [12]  166 	jr	Z,00104$
                            167 ;e4vm_core.c:40: (*v)->wp = (*v)->mem[(*v)->ip];
   0074 7B            [ 4]  168 	ld	a, e
   0075 C6 02         [ 7]  169 	add	a, #0x02
   0077 DD 77 FE      [19]  170 	ld	-2 (ix), a
   007A 7A            [ 4]  171 	ld	a, d
   007B CE 00         [ 7]  172 	adc	a, #0x00
   007D DD 77 FF      [19]  173 	ld	-1 (ix), a
   0080 7B            [ 4]  174 	ld	a, e
   0081 C6 8A         [ 7]  175 	add	a, #0x8a
   0083 5F            [ 4]  176 	ld	e, a
   0084 30 01         [12]  177 	jr	NC,00116$
   0086 14            [ 4]  178 	inc	d
   0087                     179 00116$:
   0087 29            [11]  180 	add	hl, hl
   0088 19            [11]  181 	add	hl, de
   0089 5E            [ 7]  182 	ld	e, (hl)
   008A 23            [ 6]  183 	inc	hl
   008B 56            [ 7]  184 	ld	d, (hl)
   008C E1            [10]  185 	pop	hl
   008D E5            [11]  186 	push	hl
   008E 73            [ 7]  187 	ld	(hl), e
   008F 23            [ 6]  188 	inc	hl
   0090 72            [ 7]  189 	ld	(hl), d
                            190 ;e4vm_core.c:39: while (!((*v)->ip == 0)) {
   0091 69            [ 4]  191 	ld	l, c
   0092 60            [ 4]  192 	ld	h, b
   0093 7E            [ 7]  193 	ld	a, (hl)
   0094 23            [ 6]  194 	inc	hl
   0095 66            [ 7]  195 	ld	h, (hl)
   0096 6F            [ 4]  196 	ld	l, a
                            197 ;e4vm_core.c:41: (*v)->ip = (*v)->ip + 1;
   0097 5E            [ 7]  198 	ld	e, (hl)
   0098 23            [ 6]  199 	inc	hl
   0099 56            [ 7]  200 	ld	d, (hl)
   009A 2B            [ 6]  201 	dec	hl
   009B 13            [ 6]  202 	inc	de
   009C 7A            [ 4]  203 	ld	a, d
   009D 73            [ 7]  204 	ld	(hl), e
   009E 23            [ 6]  205 	inc	hl
   009F 77            [ 7]  206 	ld	(hl), a
                            207 ;e4vm_core.c:42: word_index = (*v)->mem[(*v)->wp];
   00A0 69            [ 4]  208 	ld	l, c
   00A1 60            [ 4]  209 	ld	h, b
   00A2 5E            [ 7]  210 	ld	e, (hl)
   00A3 23            [ 6]  211 	inc	hl
   00A4 56            [ 7]  212 	ld	d, (hl)
   00A5 21 8A 00      [10]  213 	ld	hl, #0x008a
   00A8 19            [11]  214 	add	hl, de
   00A9 E3            [19]  215 	ex	(sp), hl
   00AA 6B            [ 4]  216 	ld	l, e
   00AB 62            [ 4]  217 	ld	h, d
   00AC 23            [ 6]  218 	inc	hl
   00AD 23            [ 6]  219 	inc	hl
   00AE 7E            [ 7]  220 	ld	a, (hl)
   00AF 23            [ 6]  221 	inc	hl
   00B0 66            [ 7]  222 	ld	h, (hl)
   00B1 6F            [ 4]  223 	ld	l, a
   00B2 29            [11]  224 	add	hl, hl
   00B3 7D            [ 4]  225 	ld	a, l
   00B4 DD 86 FE      [19]  226 	add	a, -2 (ix)
   00B7 6F            [ 4]  227 	ld	l, a
   00B8 7C            [ 4]  228 	ld	a, h
   00B9 DD 8E FF      [19]  229 	adc	a, -1 (ix)
   00BC 67            [ 4]  230 	ld	h, a
   00BD 7E            [ 7]  231 	ld	a, (hl)
   00BE 23            [ 6]  232 	inc	hl
   00BF 66            [ 7]  233 	ld	h, (hl)
   00C0 6F            [ 4]  234 	ld	l, a
                            235 ;e4vm_core.c:43: (*(*v)->words[word_index].proc)(v);
   00C1 7B            [ 4]  236 	ld	a, e
   00C2 C6 CD         [ 7]  237 	add	a, #0xcd
   00C4 5F            [ 4]  238 	ld	e, a
   00C5 30 01         [12]  239 	jr	NC,00117$
   00C7 14            [ 4]  240 	inc	d
   00C8                     241 00117$:
   00C8 29            [11]  242 	add	hl, hl
   00C9 29            [11]  243 	add	hl, hl
   00CA 29            [11]  244 	add	hl, hl
   00CB 29            [11]  245 	add	hl, hl
   00CC 19            [11]  246 	add	hl, de
   00CD 11 0C 00      [10]  247 	ld	de, #0x000c
   00D0 19            [11]  248 	add	hl, de
   00D1 7E            [ 7]  249 	ld	a, (hl)
   00D2 23            [ 6]  250 	inc	hl
   00D3 66            [ 7]  251 	ld	h, (hl)
   00D4 6F            [ 4]  252 	ld	l, a
   00D5 C5            [11]  253 	push	bc
   00D6 C5            [11]  254 	push	bc
   00D7 CDr00r00      [17]  255 	call	___sdcc_call_hl
   00DA F1            [10]  256 	pop	af
   00DB C1            [10]  257 	pop	bc
   00DC 18 88         [12]  258 	jr	00101$
   00DE                     259 00104$:
                            260 ;e4vm_core.c:45: }
   00DE F1            [10]  261 	pop	af
   00DF DD E1         [14]  262 	pop	ix
   00E1 C9            [10]  263 	ret
                            264 ;e4vm_core.c:48: void e4vm_core_do_exit (e4vm_type_x4thPtr *v)
                            265 ;	---------------------------------
                            266 ; Function e4vm_core_do_exit
                            267 ; ---------------------------------
   00E2                     268 _e4vm_core_do_exit::
   00E2 CDr00r00      [17]  269 	call	___sdcc_enter_ix
                            270 ;e4vm_core.c:50: (*v)->rs_p = (*v)->rs_p - 1;
   00E5 DD 4E 04      [19]  271 	ld	c, 4 (ix)
   00E8 DD 46 05      [19]  272 	ld	b, 5 (ix)
   00EB 69            [ 4]  273 	ld	l, c
   00EC 60            [ 4]  274 	ld	h, b
   00ED 5E            [ 7]  275 	ld	e, (hl)
   00EE 23            [ 6]  276 	inc	hl
   00EF 56            [ 7]  277 	ld	d, (hl)
   00F0 21 84 00      [10]  278 	ld	hl, #0x0084
   00F3 19            [11]  279 	add	hl, de
   00F4 5E            [ 7]  280 	ld	e, (hl)
   00F5 23            [ 6]  281 	inc	hl
   00F6 56            [ 7]  282 	ld	d, (hl)
   00F7 2B            [ 6]  283 	dec	hl
   00F8 1B            [ 6]  284 	dec	de
   00F9 73            [ 7]  285 	ld	(hl), e
   00FA 23            [ 6]  286 	inc	hl
   00FB 72            [ 7]  287 	ld	(hl), d
   00FC 69            [ 4]  288 	ld	l, c
   00FD 60            [ 4]  289 	ld	h, b
   00FE 4E            [ 7]  290 	ld	c, (hl)
   00FF 23            [ 6]  291 	inc	hl
   0100 46            [ 7]  292 	ld	b, (hl)
                            293 ;e4vm_core.c:51: (*v)->ip = (*v)->rs[(*v)->rs_p];
   0101 21 04 00      [10]  294 	ld	hl, #0x0004
   0104 09            [11]  295 	add	hl, bc
   0105 EB            [ 4]  296 	ex	de, hl
   0106 69            [ 4]  297 	ld	l, c
   0107 60            [ 4]  298 	ld	h, b
   0108 C5            [11]  299 	push	bc
   0109 01 84 00      [10]  300 	ld	bc, #0x0084
   010C 09            [11]  301 	add	hl, bc
   010D C1            [10]  302 	pop	bc
   010E 7E            [ 7]  303 	ld	a, (hl)
   010F 23            [ 6]  304 	inc	hl
   0110 66            [ 7]  305 	ld	h, (hl)
   0111 6F            [ 4]  306 	ld	l, a
   0112 29            [11]  307 	add	hl, hl
   0113 19            [11]  308 	add	hl, de
   0114 5E            [ 7]  309 	ld	e, (hl)
   0115 23            [ 6]  310 	inc	hl
   0116 56            [ 7]  311 	ld	d, (hl)
   0117 7B            [ 4]  312 	ld	a, e
   0118 02            [ 7]  313 	ld	(bc), a
   0119 03            [ 6]  314 	inc	bc
   011A 7A            [ 4]  315 	ld	a, d
   011B 02            [ 7]  316 	ld	(bc), a
                            317 ;e4vm_core.c:52: }
   011C DD E1         [14]  318 	pop	ix
   011E C9            [10]  319 	ret
                            320 ;e4vm_core.c:55: void e4vm_core_add_core_words (e4vm_type_x4thPtr *v)
                            321 ;	---------------------------------
                            322 ; Function e4vm_core_add_core_words
                            323 ; ---------------------------------
   011F                     324 _e4vm_core_add_core_words::
   011F CDr00r00      [17]  325 	call	___sdcc_enter_ix
   0122 21 D8 FF      [10]  326 	ld	hl, #-40
   0125 39            [11]  327 	add	hl, sp
   0126 F9            [ 6]  328 	ld	sp, hl
                            329 ;e4vm_core.c:61: __MOVE((CHAR*)"nop", _str__5, 4);
   0127 21 00 00      [10]  330 	ld	hl, #0
   012A 39            [11]  331 	add	hl, sp
   012B 4D            [ 4]  332 	ld	c, l
   012C 44            [ 4]  333 	ld	b, h
   012D E5            [11]  334 	push	hl
   012E 11 04 00      [10]  335 	ld	de, #0x0004
   0131 D5            [11]  336 	push	de
   0132 11rDCr01      [10]  337 	ld	de, #___str_0
   0135 D5            [11]  338 	push	de
   0136 C5            [11]  339 	push	bc
   0137 CDr00r00      [17]  340 	call	_memcpy
   013A F1            [10]  341 	pop	af
   013B F1            [10]  342 	pop	af
   013C F1            [10]  343 	pop	af
   013D E1            [10]  344 	pop	hl
                            345 ;e4vm_core.c:62: e4vm_utils_add_core_word(v, (void*)_str__5, e4vm_core_do_nop, 0);
   013E AF            [ 4]  346 	xor	a, a
   013F F5            [11]  347 	push	af
   0140 33            [ 6]  348 	inc	sp
   0141 01r00r00      [10]  349 	ld	bc, #_e4vm_core_do_nop
   0144 C5            [11]  350 	push	bc
   0145 E5            [11]  351 	push	hl
   0146 DD 6E 04      [19]  352 	ld	l, 4 (ix)
   0149 DD 66 05      [19]  353 	ld	h, 5 (ix)
   014C E5            [11]  354 	push	hl
   014D CDr00r00      [17]  355 	call	_e4vm_utils_add_core_word
   0150 F1            [10]  356 	pop	af
   0151 F1            [10]  357 	pop	af
   0152 F1            [10]  358 	pop	af
   0153 33            [ 6]  359 	inc	sp
                            360 ;e4vm_core.c:63: __MOVE((CHAR*)"dolist", _str__4, 7);
   0154 21 0A 00      [10]  361 	ld	hl, #10
   0157 39            [11]  362 	add	hl, sp
   0158 4D            [ 4]  363 	ld	c, l
   0159 44            [ 4]  364 	ld	b, h
   015A E5            [11]  365 	push	hl
   015B 11 07 00      [10]  366 	ld	de, #0x0007
   015E D5            [11]  367 	push	de
   015F 11rE0r01      [10]  368 	ld	de, #___str_1
   0162 D5            [11]  369 	push	de
   0163 C5            [11]  370 	push	bc
   0164 CDr00r00      [17]  371 	call	_memcpy
   0167 F1            [10]  372 	pop	af
   0168 F1            [10]  373 	pop	af
   0169 F1            [10]  374 	pop	af
   016A E1            [10]  375 	pop	hl
                            376 ;e4vm_core.c:64: e4vm_utils_add_core_word(v, (void*)_str__4, e4vm_core_do_list, 0);
   016B AF            [ 4]  377 	xor	a, a
   016C F5            [11]  378 	push	af
   016D 33            [ 6]  379 	inc	sp
   016E 01r01r00      [10]  380 	ld	bc, #_e4vm_core_do_list
   0171 C5            [11]  381 	push	bc
   0172 E5            [11]  382 	push	hl
   0173 DD 6E 04      [19]  383 	ld	l, 4 (ix)
   0176 DD 66 05      [19]  384 	ld	h, 5 (ix)
   0179 E5            [11]  385 	push	hl
   017A CDr00r00      [17]  386 	call	_e4vm_utils_add_core_word
   017D F1            [10]  387 	pop	af
   017E F1            [10]  388 	pop	af
   017F F1            [10]  389 	pop	af
   0180 33            [ 6]  390 	inc	sp
                            391 ;e4vm_core.c:65: __MOVE((CHAR*)"next", _str__3, 5);
   0181 21 14 00      [10]  392 	ld	hl, #20
   0184 39            [11]  393 	add	hl, sp
   0185 4D            [ 4]  394 	ld	c, l
   0186 44            [ 4]  395 	ld	b, h
   0187 E5            [11]  396 	push	hl
   0188 11 05 00      [10]  397 	ld	de, #0x0005
   018B D5            [11]  398 	push	de
   018C 11rE7r01      [10]  399 	ld	de, #___str_2
   018F D5            [11]  400 	push	de
   0190 C5            [11]  401 	push	bc
   0191 CDr00r00      [17]  402 	call	_memcpy
   0194 F1            [10]  403 	pop	af
   0195 F1            [10]  404 	pop	af
   0196 F1            [10]  405 	pop	af
   0197 E1            [10]  406 	pop	hl
                            407 ;e4vm_core.c:66: e4vm_utils_add_core_word(v, (void*)_str__3, e4vm_core_do_next, 0);
   0198 AF            [ 4]  408 	xor	a, a
   0199 F5            [11]  409 	push	af
   019A 33            [ 6]  410 	inc	sp
   019B 01r5Cr00      [10]  411 	ld	bc, #_e4vm_core_do_next
   019E C5            [11]  412 	push	bc
   019F E5            [11]  413 	push	hl
   01A0 DD 6E 04      [19]  414 	ld	l, 4 (ix)
   01A3 DD 66 05      [19]  415 	ld	h, 5 (ix)
   01A6 E5            [11]  416 	push	hl
   01A7 CDr00r00      [17]  417 	call	_e4vm_utils_add_core_word
   01AA F1            [10]  418 	pop	af
   01AB F1            [10]  419 	pop	af
   01AC F1            [10]  420 	pop	af
   01AD 33            [ 6]  421 	inc	sp
                            422 ;e4vm_core.c:67: __MOVE((CHAR*)"exit", _str__2, 5);
   01AE 21 1E 00      [10]  423 	ld	hl, #30
   01B1 39            [11]  424 	add	hl, sp
   01B2 4D            [ 4]  425 	ld	c, l
   01B3 44            [ 4]  426 	ld	b, h
   01B4 E5            [11]  427 	push	hl
   01B5 11 05 00      [10]  428 	ld	de, #0x0005
   01B8 D5            [11]  429 	push	de
   01B9 11rECr01      [10]  430 	ld	de, #___str_3
   01BC D5            [11]  431 	push	de
   01BD C5            [11]  432 	push	bc
   01BE CDr00r00      [17]  433 	call	_memcpy
   01C1 F1            [10]  434 	pop	af
   01C2 F1            [10]  435 	pop	af
   01C3 F1            [10]  436 	pop	af
   01C4 E1            [10]  437 	pop	hl
                            438 ;e4vm_core.c:68: e4vm_utils_add_core_word(v, (void*)_str__2, e4vm_core_do_exit, 0);
   01C5 AF            [ 4]  439 	xor	a, a
   01C6 F5            [11]  440 	push	af
   01C7 33            [ 6]  441 	inc	sp
   01C8 01rE2r00      [10]  442 	ld	bc, #_e4vm_core_do_exit
   01CB C5            [11]  443 	push	bc
   01CC E5            [11]  444 	push	hl
   01CD DD 6E 04      [19]  445 	ld	l, 4 (ix)
   01D0 DD 66 05      [19]  446 	ld	h, 5 (ix)
   01D3 E5            [11]  447 	push	hl
   01D4 CDr00r00      [17]  448 	call	_e4vm_utils_add_core_word
                            449 ;e4vm_core.c:69: }
   01D7 DD F9         [10]  450 	ld	sp,ix
   01D9 DD E1         [14]  451 	pop	ix
   01DB C9            [10]  452 	ret
   01DC                     453 ___str_0:
   01DC 6E 6F 70            454 	.ascii "nop"
   01DF 00                  455 	.db 0x00
   01E0                     456 ___str_1:
   01E0 64 6F 6C 69 73 74   457 	.ascii "dolist"
   01E6 00                  458 	.db 0x00
   01E7                     459 ___str_2:
   01E7 6E 65 78 74         460 	.ascii "next"
   01EB 00                  461 	.db 0x00
   01EC                     462 ___str_3:
   01EC 65 78 69 74         463 	.ascii "exit"
   01F0 00                  464 	.db 0x00
                            465 ;e4vm_core.c:73: export void *e4vm_core__init (void)
                            466 ;	---------------------------------
                            467 ; Function e4vm_core__init
                            468 ; ---------------------------------
   01F1                     469 _e4vm_core__init::
                            470 ;e4vm_core.c:75: __DEFMOD;
   01F1 21rF1r01      [10]  471 	LD	HL,#. 
   01F4 36 C9         [10]  472 	LD (HL),#0xC9 
                            473 ;e4vm_core.c:78: __IMPORT(e4vm_type__init);
   01F6 CDr00r00      [17]  474 	call	_e4vm_type__init
                            475 ;e4vm_core.c:79: __IMPORT(e4vm_utils__init);
                            476 ;e4vm_core.c:83: }
   01F9 C3r00r00      [10]  477 	jp  _e4vm_utils__init
                            478 	.area _CODE
                            479 	.area _INITIALIZER
                            480 	.area _CABS (ABS)
