                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.9.3 #11378 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module e4vm_core
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _e4vm_core__init
                             12 	.globl _Console_WriteStr_C_COMPACT
                             13 	.globl _Console_WriteLn_COMPACT
                             14 	.globl _e4vm_core_do_nop
                             15 	.globl _e4vm_core_do_list
                             16 	.globl _e4vm_core_do_next
                             17 	.globl _e4vm_core_do_exit
                             18 ;--------------------------------------------------------
                             19 ; special function registers
                             20 ;--------------------------------------------------------
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _DATA
                             25 ;--------------------------------------------------------
                             26 ; ram data
                             27 ;--------------------------------------------------------
                             28 	.area _INITIALIZED
                             29 ;--------------------------------------------------------
                             30 ; absolute external ram data
                             31 ;--------------------------------------------------------
                             32 	.area _DABS (ABS)
                             33 ;--------------------------------------------------------
                             34 ; global & static initialisations
                             35 ;--------------------------------------------------------
                             36 	.area _HOME
                             37 	.area _GSINIT
                             38 	.area _GSFINAL
                             39 	.area _GSINIT
                             40 ;--------------------------------------------------------
                             41 ; Home
                             42 ;--------------------------------------------------------
                             43 	.area _HOME
                             44 	.area _HOME
                             45 ;--------------------------------------------------------
                             46 ; code
                             47 ;--------------------------------------------------------
                             48 	.area _CODE
                             49 ;e4vm_core.c:20: void e4vm_core_do_nop (e4vm_type_x4thPtr *v)
                             50 ;	---------------------------------
                             51 ; Function e4vm_core_do_nop
                             52 ; ---------------------------------
   0000                      53 _e4vm_core_do_nop::
   0000 CDr00r00      [17]   54 	call	___sdcc_enter_ix
                             55 ;e4vm_core.c:22: Console_WriteStrLn((CHAR*)"nop", 4);
   0003 21r0Er00      [10]   56 	ld	hl, #___str_0
   0006 CDr00r00      [17]   57 	call	_Console_WriteStr_C_COMPACT
                             58 ;e4vm_core.c:23: }
   0009 DD E1         [14]   59 	pop	ix
   000B C3r00r00      [10]   60 	jp	_Console_WriteLn_COMPACT
   000E                      61 ___str_0:
   000E 6E 6F 70             62 	.ascii "nop"
   0011 00                   63 	.db 0x00
                             64 ;e4vm_core.c:26: void e4vm_core_do_list (e4vm_type_x4thPtr *v)
                             65 ;	---------------------------------
                             66 ; Function e4vm_core_do_list
                             67 ; ---------------------------------
   0012                      68 _e4vm_core_do_list::
   0012 CDr00r00      [17]   69 	call	___sdcc_enter_ix
   0015 F5            [11]   70 	push	af
                             71 ;e4vm_core.c:29: (*v)->rs[(*v)->rs_p] = (*v)->ip;
   0016 DD 7E 04      [19]   72 	ld	a, 4 (ix)
   0019 DD 77 FE      [19]   73 	ld	-2 (ix), a
   001C DD 7E 05      [19]   74 	ld	a, 5 (ix)
   001F DD 77 FF      [19]   75 	ld	-1 (ix), a
   0022 E1            [10]   76 	pop	hl
   0023 E5            [11]   77 	push	hl
   0024 4E            [ 7]   78 	ld	c, (hl)
   0025 23            [ 6]   79 	inc	hl
   0026 46            [ 7]   80 	ld	b, (hl)
   0027 21 04 00      [10]   81 	ld	hl, #0x0004
   002A 09            [11]   82 	add	hl, bc
   002B EB            [ 4]   83 	ex	de, hl
   002C 69            [ 4]   84 	ld	l, c
   002D 60            [ 4]   85 	ld	h, b
   002E C5            [11]   86 	push	bc
   002F 01 84 00      [10]   87 	ld	bc, #0x0084
   0032 09            [11]   88 	add	hl, bc
   0033 C1            [10]   89 	pop	bc
   0034 7E            [ 7]   90 	ld	a, (hl)
   0035 23            [ 6]   91 	inc	hl
   0036 66            [ 7]   92 	ld	h, (hl)
   0037 6F            [ 4]   93 	ld	l, a
   0038 29            [11]   94 	add	hl, hl
   0039 19            [11]   95 	add	hl, de
   003A EB            [ 4]   96 	ex	de, hl
   003B 69            [ 4]   97 	ld	l, c
   003C 60            [ 4]   98 	ld	h, b
   003D 4E            [ 7]   99 	ld	c, (hl)
   003E 23            [ 6]  100 	inc	hl
   003F 46            [ 7]  101 	ld	b, (hl)
   0040 79            [ 4]  102 	ld	a, c
   0041 12            [ 7]  103 	ld	(de), a
   0042 13            [ 6]  104 	inc	de
   0043 78            [ 4]  105 	ld	a, b
   0044 12            [ 7]  106 	ld	(de), a
                            107 ;e4vm_core.c:30: (*v)->rs_p = (*v)->rs_p + 1;
   0045 E1            [10]  108 	pop	hl
   0046 E5            [11]  109 	push	hl
   0047 4E            [ 7]  110 	ld	c, (hl)
   0048 23            [ 6]  111 	inc	hl
   0049 46            [ 7]  112 	ld	b, (hl)
   004A 21 84 00      [10]  113 	ld	hl, #0x0084
   004D 09            [11]  114 	add	hl, bc
   004E 4E            [ 7]  115 	ld	c, (hl)
   004F 23            [ 6]  116 	inc	hl
   0050 46            [ 7]  117 	ld	b, (hl)
   0051 2B            [ 6]  118 	dec	hl
   0052 03            [ 6]  119 	inc	bc
   0053 78            [ 4]  120 	ld	a, b
   0054 71            [ 7]  121 	ld	(hl), c
   0055 23            [ 6]  122 	inc	hl
   0056 77            [ 7]  123 	ld	(hl), a
                            124 ;e4vm_core.c:29: (*v)->rs[(*v)->rs_p] = (*v)->ip;
   0057 E1            [10]  125 	pop	hl
   0058 E5            [11]  126 	push	hl
   0059 4E            [ 7]  127 	ld	c, (hl)
   005A 23            [ 6]  128 	inc	hl
   005B 46            [ 7]  129 	ld	b, (hl)
                            130 ;e4vm_core.c:31: (*v)->ip = (*v)->wp + 1;
   005C 69            [ 4]  131 	ld	l, c
   005D 60            [ 4]  132 	ld	h, b
   005E 23            [ 6]  133 	inc	hl
   005F 23            [ 6]  134 	inc	hl
   0060 5E            [ 7]  135 	ld	e, (hl)
   0061 23            [ 6]  136 	inc	hl
   0062 56            [ 7]  137 	ld	d, (hl)
   0063 13            [ 6]  138 	inc	de
   0064 7B            [ 4]  139 	ld	a, e
   0065 02            [ 7]  140 	ld	(bc), a
   0066 03            [ 6]  141 	inc	bc
   0067 7A            [ 4]  142 	ld	a, d
   0068 02            [ 7]  143 	ld	(bc), a
                            144 ;e4vm_core.c:32: }
   0069 F1            [10]  145 	pop	af
   006A DD E1         [14]  146 	pop	ix
   006C C9            [10]  147 	ret
                            148 ;e4vm_core.c:35: void e4vm_core_do_next (e4vm_type_x4thPtr *v)
                            149 ;	---------------------------------
                            150 ; Function e4vm_core_do_next
                            151 ; ---------------------------------
   006D                     152 _e4vm_core_do_next::
   006D CDr00r00      [17]  153 	call	___sdcc_enter_ix
   0070 F5            [11]  154 	push	af
   0071 F5            [11]  155 	push	af
                            156 ;e4vm_core.c:38: while (!((*v)->ip == 0)) {
   0072 DD 4E 04      [19]  157 	ld	c, 4 (ix)
   0075 DD 46 05      [19]  158 	ld	b, 5 (ix)
   0078                     159 00101$:
   0078 0A            [ 7]  160 	ld	a, (bc)
   0079 DD 77 FC      [19]  161 	ld	-4 (ix), a
   007C 03            [ 6]  162 	inc	bc
   007D 0A            [ 7]  163 	ld	a, (bc)
   007E DD 77 FD      [19]  164 	ld	-3 (ix), a
   0081 0B            [ 6]  165 	dec	bc
   0082 E1            [10]  166 	pop	hl
   0083 E5            [11]  167 	push	hl
   0084 5E            [ 7]  168 	ld	e, (hl)
   0085 23            [ 6]  169 	inc	hl
   0086 56            [ 7]  170 	ld	d, (hl)
   0087 7A            [ 4]  171 	ld	a, d
   0088 B3            [ 4]  172 	or	a, e
   0089 28 78         [12]  173 	jr	Z,00104$
                            174 ;e4vm_core.c:39: next_wp = (*v)->mem[(*v)->ip];
   008B DD 7E FC      [19]  175 	ld	a, -4 (ix)
   008E C6 8A         [ 7]  176 	add	a, #0x8a
   0090 DD 77 FE      [19]  177 	ld	-2 (ix), a
   0093 DD 7E FD      [19]  178 	ld	a, -3 (ix)
   0096 CE 00         [ 7]  179 	adc	a, #0x00
   0098 DD 77 FF      [19]  180 	ld	-1 (ix), a
   009B 6B            [ 4]  181 	ld	l, e
   009C 62            [ 4]  182 	ld	h, d
   009D 29            [11]  183 	add	hl, hl
   009E 7D            [ 4]  184 	ld	a, l
   009F DD 86 FE      [19]  185 	add	a, -2 (ix)
   00A2 6F            [ 4]  186 	ld	l, a
   00A3 7C            [ 4]  187 	ld	a, h
   00A4 DD 8E FF      [19]  188 	adc	a, -1 (ix)
   00A7 67            [ 4]  189 	ld	h, a
   00A8 7E            [ 7]  190 	ld	a, (hl)
   00A9 DD 77 FE      [19]  191 	ld	-2 (ix), a
   00AC 23            [ 6]  192 	inc	hl
   00AD 7E            [ 7]  193 	ld	a, (hl)
   00AE DD 77 FF      [19]  194 	ld	-1 (ix), a
                            195 ;e4vm_core.c:40: next_ip = (*v)->ip + 1;
   00B1 13            [ 6]  196 	inc	de
                            197 ;e4vm_core.c:41: (*v)->ip = next_ip;
   00B2 E1            [10]  198 	pop	hl
   00B3 E5            [11]  199 	push	hl
   00B4 73            [ 7]  200 	ld	(hl), e
   00B5 23            [ 6]  201 	inc	hl
   00B6 72            [ 7]  202 	ld	(hl), d
                            203 ;e4vm_core.c:42: (*v)->wp = next_wp;
   00B7 69            [ 4]  204 	ld	l, c
   00B8 60            [ 4]  205 	ld	h, b
   00B9 7E            [ 7]  206 	ld	a, (hl)
   00BA 23            [ 6]  207 	inc	hl
   00BB 66            [ 7]  208 	ld	h, (hl)
   00BC 6F            [ 4]  209 	ld	l, a
   00BD 23            [ 6]  210 	inc	hl
   00BE 23            [ 6]  211 	inc	hl
   00BF DD 7E FE      [19]  212 	ld	a, -2 (ix)
   00C2 77            [ 7]  213 	ld	(hl), a
   00C3 23            [ 6]  214 	inc	hl
   00C4 DD 7E FF      [19]  215 	ld	a, -1 (ix)
   00C7 77            [ 7]  216 	ld	(hl), a
                            217 ;e4vm_core.c:43: word_index = (*v)->mem[next_ip];
   00C8 0A            [ 7]  218 	ld	a, (bc)
   00C9 DD 77 FE      [19]  219 	ld	-2 (ix), a
   00CC 03            [ 6]  220 	inc	bc
   00CD 0A            [ 7]  221 	ld	a, (bc)
   00CE DD 77 FF      [19]  222 	ld	-1 (ix), a
   00D1 0B            [ 6]  223 	dec	bc
   00D2 DD 7E FE      [19]  224 	ld	a, -2 (ix)
   00D5 C6 8A         [ 7]  225 	add	a, #0x8a
   00D7 6F            [ 4]  226 	ld	l, a
   00D8 DD 7E FF      [19]  227 	ld	a, -1 (ix)
   00DB CE 00         [ 7]  228 	adc	a, #0x00
   00DD 67            [ 4]  229 	ld	h, a
   00DE CB 23         [ 8]  230 	sla	e
   00E0 CB 12         [ 8]  231 	rl	d
   00E2 19            [11]  232 	add	hl, de
   00E3 7E            [ 7]  233 	ld	a, (hl)
   00E4 23            [ 6]  234 	inc	hl
   00E5 66            [ 7]  235 	ld	h, (hl)
   00E6 6F            [ 4]  236 	ld	l, a
                            237 ;e4vm_core.c:44: (*(*v)->core[word_index])(v);
   00E7 DD 7E FE      [19]  238 	ld	a, -2 (ix)
   00EA C6 CD         [ 7]  239 	add	a, #0xcd
   00EC 5F            [ 4]  240 	ld	e, a
   00ED DD 7E FF      [19]  241 	ld	a, -1 (ix)
   00F0 CE 00         [ 7]  242 	adc	a, #0x00
   00F2 57            [ 4]  243 	ld	d, a
   00F3 29            [11]  244 	add	hl, hl
   00F4 19            [11]  245 	add	hl, de
   00F5 7E            [ 7]  246 	ld	a, (hl)
   00F6 23            [ 6]  247 	inc	hl
   00F7 66            [ 7]  248 	ld	h, (hl)
   00F8 6F            [ 4]  249 	ld	l, a
   00F9 C5            [11]  250 	push	bc
   00FA C5            [11]  251 	push	bc
   00FB CDr00r00      [17]  252 	call	___sdcc_call_hl
   00FE F1            [10]  253 	pop	af
   00FF C1            [10]  254 	pop	bc
   0100 C3r78r00      [10]  255 	jp	00101$
   0103                     256 00104$:
                            257 ;e4vm_core.c:46: }
   0103 DD F9         [10]  258 	ld	sp, ix
   0105 DD E1         [14]  259 	pop	ix
   0107 C9            [10]  260 	ret
                            261 ;e4vm_core.c:49: void e4vm_core_do_exit (e4vm_type_x4thPtr *v)
                            262 ;	---------------------------------
                            263 ; Function e4vm_core_do_exit
                            264 ; ---------------------------------
   0108                     265 _e4vm_core_do_exit::
   0108 CDr00r00      [17]  266 	call	___sdcc_enter_ix
                            267 ;e4vm_core.c:51: (*v)->rs_p = (*v)->rs_p - 1;
   010B DD 4E 04      [19]  268 	ld	c, 4 (ix)
   010E DD 46 05      [19]  269 	ld	b, 5 (ix)
   0111 69            [ 4]  270 	ld	l, c
   0112 60            [ 4]  271 	ld	h, b
   0113 5E            [ 7]  272 	ld	e, (hl)
   0114 23            [ 6]  273 	inc	hl
   0115 56            [ 7]  274 	ld	d, (hl)
   0116 21 84 00      [10]  275 	ld	hl, #0x0084
   0119 19            [11]  276 	add	hl, de
   011A 5E            [ 7]  277 	ld	e, (hl)
   011B 23            [ 6]  278 	inc	hl
   011C 56            [ 7]  279 	ld	d, (hl)
   011D 2B            [ 6]  280 	dec	hl
   011E 1B            [ 6]  281 	dec	de
   011F 73            [ 7]  282 	ld	(hl), e
   0120 23            [ 6]  283 	inc	hl
   0121 72            [ 7]  284 	ld	(hl), d
   0122 69            [ 4]  285 	ld	l, c
   0123 60            [ 4]  286 	ld	h, b
   0124 4E            [ 7]  287 	ld	c, (hl)
   0125 23            [ 6]  288 	inc	hl
   0126 46            [ 7]  289 	ld	b, (hl)
                            290 ;e4vm_core.c:52: (*v)->ip = (*v)->rs[(*v)->rs_p];
   0127 21 04 00      [10]  291 	ld	hl, #0x0004
   012A 09            [11]  292 	add	hl, bc
   012B EB            [ 4]  293 	ex	de, hl
   012C 69            [ 4]  294 	ld	l, c
   012D 60            [ 4]  295 	ld	h, b
   012E C5            [11]  296 	push	bc
   012F 01 84 00      [10]  297 	ld	bc, #0x0084
   0132 09            [11]  298 	add	hl, bc
   0133 C1            [10]  299 	pop	bc
   0134 7E            [ 7]  300 	ld	a, (hl)
   0135 23            [ 6]  301 	inc	hl
   0136 66            [ 7]  302 	ld	h, (hl)
   0137 6F            [ 4]  303 	ld	l, a
   0138 29            [11]  304 	add	hl, hl
   0139 19            [11]  305 	add	hl, de
   013A 5E            [ 7]  306 	ld	e, (hl)
   013B 23            [ 6]  307 	inc	hl
   013C 56            [ 7]  308 	ld	d, (hl)
   013D 7B            [ 4]  309 	ld	a, e
   013E 02            [ 7]  310 	ld	(bc), a
   013F 03            [ 6]  311 	inc	bc
   0140 7A            [ 4]  312 	ld	a, d
   0141 02            [ 7]  313 	ld	(bc), a
                            314 ;e4vm_core.c:53: }
   0142 DD E1         [14]  315 	pop	ix
   0144 C9            [10]  316 	ret
                            317 ;e4vm_core.c:57: export void *e4vm_core__init (void)
                            318 ;	---------------------------------
                            319 ; Function e4vm_core__init
                            320 ; ---------------------------------
   0145                     321 _e4vm_core__init::
                            322 ;e4vm_core.c:59: __DEFMOD;
   0145 21r45r01      [10]  323 	LD	HL,#. 
   0148 36 C9         [10]  324 	LD (HL),#0xC9 
                            325 ;e4vm_core.c:65: }
   014A C9            [10]  326 	ret
                            327 	.area _CODE
                            328 	.area _INITIALIZER
                            329 	.area _CABS (ABS)
