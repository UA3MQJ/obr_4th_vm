                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.9.3 #11378 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module e4vm_boolean
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _e4vm_boolean__init
                             12 	.globl _e4vm_utils__init
                             13 	.globl _e4vm_utils_true_const
                             14 	.globl _e4vm_utils_false_const
                             15 	.globl _Console_WriteStr_C_COMPACT
                             16 	.globl _Console_WriteLn_COMPACT
                             17 	.globl _e4vm_boolean_true
                             18 	.globl _e4vm_boolean_false
                             19 	.globl _e4vm_boolean_not
                             20 	.globl _e4vm_boolean_invert
                             21 	.globl _e4vm_boolean_or
                             22 	.globl _e4vm_boolean_and
                             23 	.globl _e4vm_boolean_xor
                             24 ;--------------------------------------------------------
                             25 ; special function registers
                             26 ;--------------------------------------------------------
                             27 ;--------------------------------------------------------
                             28 ; ram data
                             29 ;--------------------------------------------------------
                             30 	.area _DATA
                             31 ;--------------------------------------------------------
                             32 ; ram data
                             33 ;--------------------------------------------------------
                             34 	.area _INITIALIZED
                             35 ;--------------------------------------------------------
                             36 ; absolute external ram data
                             37 ;--------------------------------------------------------
                             38 	.area _DABS (ABS)
                             39 ;--------------------------------------------------------
                             40 ; global & static initialisations
                             41 ;--------------------------------------------------------
                             42 	.area _HOME
                             43 	.area _GSINIT
                             44 	.area _GSFINAL
                             45 	.area _GSINIT
                             46 ;--------------------------------------------------------
                             47 ; Home
                             48 ;--------------------------------------------------------
                             49 	.area _HOME
                             50 	.area _HOME
                             51 ;--------------------------------------------------------
                             52 ; code
                             53 ;--------------------------------------------------------
                             54 	.area _CODE
                             55 ;e4vm_boolean.c:28: void e4vm_boolean_true (e4vm_type_x4thPtr *v)
                             56 ;	---------------------------------
                             57 ; Function e4vm_boolean_true
                             58 ; ---------------------------------
   0000                      59 _e4vm_boolean_true::
   0000 CDr00r00      [17]   60 	call	___sdcc_enter_ix
   0003 F5            [11]   61 	push	af
                             62 ;e4vm_boolean.c:30: Console_WriteStrLn((CHAR*)"true", 5);
   0004 21r5Ar00      [10]   63 	ld	hl, #___str_0
   0007 CDr00r00      [17]   64 	call	_Console_WriteStr_C_COMPACT
   000A CDr00r00      [17]   65 	call	_Console_WriteLn_COMPACT
                             66 ;e4vm_boolean.c:31: (*v)->ds[(*v)->ds_p] = e4vm_utils_true_const(v);
   000D DD 4E 04      [19]   67 	ld	c, 4 (ix)
   0010 DD 46 05      [19]   68 	ld	b, 5 (ix)
   0013 69            [ 4]   69 	ld	l, c
   0014 60            [ 4]   70 	ld	h, b
   0015 7E            [ 7]   71 	ld	a, (hl)
   0016 23            [ 6]   72 	inc	hl
   0017 66            [ 7]   73 	ld	h, (hl)
   0018 6F            [ 4]   74 	ld	l, a
   0019 C6 44         [ 7]   75 	add	a, #0x44
   001B 5F            [ 4]   76 	ld	e, a
   001C 7C            [ 4]   77 	ld	a, h
   001D CE 00         [ 7]   78 	adc	a, #0x00
   001F 57            [ 4]   79 	ld	d, a
   0020 C5            [11]   80 	push	bc
   0021 01 86 00      [10]   81 	ld	bc, #0x0086
   0024 09            [11]   82 	add	hl, bc
   0025 C1            [10]   83 	pop	bc
   0026 7E            [ 7]   84 	ld	a, (hl)
   0027 23            [ 6]   85 	inc	hl
   0028 66            [ 7]   86 	ld	h, (hl)
   0029 6F            [ 4]   87 	ld	l, a
   002A 29            [11]   88 	add	hl, hl
   002B 19            [11]   89 	add	hl, de
   002C C5            [11]   90 	push	bc
   002D E5            [11]   91 	push	hl
   002E C5            [11]   92 	push	bc
   002F CDr00r00      [17]   93 	call	_e4vm_utils_true_const
   0032 F1            [10]   94 	pop	af
   0033 DD 75 FE      [19]   95 	ld	-2 (ix), l
   0036 DD 74 FF      [19]   96 	ld	-1 (ix), h
   0039 D1            [10]   97 	pop	de
   003A C1            [10]   98 	pop	bc
   003B DD 7E FE      [19]   99 	ld	a, -2 (ix)
   003E 12            [ 7]  100 	ld	(de), a
   003F 13            [ 6]  101 	inc	de
   0040 DD 7E FF      [19]  102 	ld	a, -1 (ix)
   0043 12            [ 7]  103 	ld	(de), a
                            104 ;e4vm_boolean.c:32: (*v)->ds_p = (*v)->ds_p + 1;
   0044 69            [ 4]  105 	ld	l, c
   0045 60            [ 4]  106 	ld	h, b
   0046 4E            [ 7]  107 	ld	c, (hl)
   0047 23            [ 6]  108 	inc	hl
   0048 46            [ 7]  109 	ld	b, (hl)
   0049 21 86 00      [10]  110 	ld	hl, #0x0086
   004C 09            [11]  111 	add	hl, bc
   004D 4E            [ 7]  112 	ld	c, (hl)
   004E 23            [ 6]  113 	inc	hl
   004F 46            [ 7]  114 	ld	b, (hl)
   0050 2B            [ 6]  115 	dec	hl
   0051 03            [ 6]  116 	inc	bc
   0052 78            [ 4]  117 	ld	a, b
   0053 71            [ 7]  118 	ld	(hl), c
   0054 23            [ 6]  119 	inc	hl
   0055 77            [ 7]  120 	ld	(hl), a
                            121 ;e4vm_boolean.c:33: }
   0056 F1            [10]  122 	pop	af
   0057 DD E1         [14]  123 	pop	ix
   0059 C9            [10]  124 	ret
   005A                     125 ___str_0:
   005A 74 72 75 65         126 	.ascii "true"
   005E 00                  127 	.db 0x00
                            128 ;e4vm_boolean.c:36: void e4vm_boolean_false (e4vm_type_x4thPtr *v)
                            129 ;	---------------------------------
                            130 ; Function e4vm_boolean_false
                            131 ; ---------------------------------
   005F                     132 _e4vm_boolean_false::
   005F CDr00r00      [17]  133 	call	___sdcc_enter_ix
   0062 F5            [11]  134 	push	af
                            135 ;e4vm_boolean.c:38: Console_WriteStrLn((CHAR*)"false", 6);
   0063 21rB9r00      [10]  136 	ld	hl, #___str_1
   0066 CDr00r00      [17]  137 	call	_Console_WriteStr_C_COMPACT
   0069 CDr00r00      [17]  138 	call	_Console_WriteLn_COMPACT
                            139 ;e4vm_boolean.c:39: (*v)->ds[(*v)->ds_p] = e4vm_utils_false_const(v);
   006C DD 4E 04      [19]  140 	ld	c, 4 (ix)
   006F DD 46 05      [19]  141 	ld	b, 5 (ix)
   0072 69            [ 4]  142 	ld	l, c
   0073 60            [ 4]  143 	ld	h, b
   0074 7E            [ 7]  144 	ld	a, (hl)
   0075 23            [ 6]  145 	inc	hl
   0076 66            [ 7]  146 	ld	h, (hl)
   0077 6F            [ 4]  147 	ld	l, a
   0078 C6 44         [ 7]  148 	add	a, #0x44
   007A 5F            [ 4]  149 	ld	e, a
   007B 7C            [ 4]  150 	ld	a, h
   007C CE 00         [ 7]  151 	adc	a, #0x00
   007E 57            [ 4]  152 	ld	d, a
   007F C5            [11]  153 	push	bc
   0080 01 86 00      [10]  154 	ld	bc, #0x0086
   0083 09            [11]  155 	add	hl, bc
   0084 C1            [10]  156 	pop	bc
   0085 7E            [ 7]  157 	ld	a, (hl)
   0086 23            [ 6]  158 	inc	hl
   0087 66            [ 7]  159 	ld	h, (hl)
   0088 6F            [ 4]  160 	ld	l, a
   0089 29            [11]  161 	add	hl, hl
   008A 19            [11]  162 	add	hl, de
   008B C5            [11]  163 	push	bc
   008C E5            [11]  164 	push	hl
   008D C5            [11]  165 	push	bc
   008E CDr00r00      [17]  166 	call	_e4vm_utils_false_const
   0091 F1            [10]  167 	pop	af
   0092 DD 75 FE      [19]  168 	ld	-2 (ix), l
   0095 DD 74 FF      [19]  169 	ld	-1 (ix), h
   0098 D1            [10]  170 	pop	de
   0099 C1            [10]  171 	pop	bc
   009A DD 7E FE      [19]  172 	ld	a, -2 (ix)
   009D 12            [ 7]  173 	ld	(de), a
   009E 13            [ 6]  174 	inc	de
   009F DD 7E FF      [19]  175 	ld	a, -1 (ix)
   00A2 12            [ 7]  176 	ld	(de), a
                            177 ;e4vm_boolean.c:40: (*v)->ds_p = (*v)->ds_p + 1;
   00A3 69            [ 4]  178 	ld	l, c
   00A4 60            [ 4]  179 	ld	h, b
   00A5 4E            [ 7]  180 	ld	c, (hl)
   00A6 23            [ 6]  181 	inc	hl
   00A7 46            [ 7]  182 	ld	b, (hl)
   00A8 21 86 00      [10]  183 	ld	hl, #0x0086
   00AB 09            [11]  184 	add	hl, bc
   00AC 4E            [ 7]  185 	ld	c, (hl)
   00AD 23            [ 6]  186 	inc	hl
   00AE 46            [ 7]  187 	ld	b, (hl)
   00AF 2B            [ 6]  188 	dec	hl
   00B0 03            [ 6]  189 	inc	bc
   00B1 78            [ 4]  190 	ld	a, b
   00B2 71            [ 7]  191 	ld	(hl), c
   00B3 23            [ 6]  192 	inc	hl
   00B4 77            [ 7]  193 	ld	(hl), a
                            194 ;e4vm_boolean.c:41: }
   00B5 F1            [10]  195 	pop	af
   00B6 DD E1         [14]  196 	pop	ix
   00B8 C9            [10]  197 	ret
   00B9                     198 ___str_1:
   00B9 66 61 6C 73 65      199 	.ascii "false"
   00BE 00                  200 	.db 0x00
                            201 ;e4vm_boolean.c:44: void e4vm_boolean_not (e4vm_type_x4thPtr *v)
                            202 ;	---------------------------------
                            203 ; Function e4vm_boolean_not
                            204 ; ---------------------------------
   00BF                     205 _e4vm_boolean_not::
   00BF CDr00r00      [17]  206 	call	___sdcc_enter_ix
   00C2 F5            [11]  207 	push	af
   00C3 F5            [11]  208 	push	af
                            209 ;e4vm_boolean.c:46: Console_WriteStrLn((CHAR*)"not", 4);
   00C4 21r9Br01      [10]  210 	ld	hl, #___str_2
   00C7 CDr00r00      [17]  211 	call	_Console_WriteStr_C_COMPACT
   00CA CDr00r00      [17]  212 	call	_Console_WriteLn_COMPACT
                            213 ;e4vm_boolean.c:47: if ((*v)->ds[(*v)->ds_p - 1] == e4vm_utils_true_const(v)) {
   00CD DD 4E 04      [19]  214 	ld	c, 4 (ix)
   00D0 DD 46 05      [19]  215 	ld	b, 5 (ix)
   00D3 69            [ 4]  216 	ld	l, c
   00D4 60            [ 4]  217 	ld	h, b
   00D5 7E            [ 7]  218 	ld	a, (hl)
   00D6 23            [ 6]  219 	inc	hl
   00D7 66            [ 7]  220 	ld	h, (hl)
   00D8 6F            [ 4]  221 	ld	l, a
   00D9 C6 44         [ 7]  222 	add	a, #0x44
   00DB 5F            [ 4]  223 	ld	e, a
   00DC 7C            [ 4]  224 	ld	a, h
   00DD CE 00         [ 7]  225 	adc	a, #0x00
   00DF 57            [ 4]  226 	ld	d, a
   00E0 C5            [11]  227 	push	bc
   00E1 01 86 00      [10]  228 	ld	bc, #0x0086
   00E4 09            [11]  229 	add	hl, bc
   00E5 C1            [10]  230 	pop	bc
   00E6 7E            [ 7]  231 	ld	a, (hl)
   00E7 3D            [ 4]  232 	dec	a
   00E8 87            [ 4]  233 	add	a, a
   00E9 83            [ 4]  234 	add	a, e
   00EA 5F            [ 4]  235 	ld	e, a
   00EB 3E 00         [ 7]  236 	ld	a, #0x00
   00ED 8A            [ 4]  237 	adc	a, d
   00EE 57            [ 4]  238 	ld	d, a
   00EF C5            [11]  239 	push	bc
   00F0 D5            [11]  240 	push	de
   00F1 C5            [11]  241 	push	bc
   00F2 CDr00r00      [17]  242 	call	_e4vm_utils_true_const
   00F5 F1            [10]  243 	pop	af
   00F6 DD 75 FC      [19]  244 	ld	-4 (ix), l
   00F9 DD 74 FD      [19]  245 	ld	-3 (ix), h
   00FC D1            [10]  246 	pop	de
   00FD C1            [10]  247 	pop	bc
   00FE 1A            [ 7]  248 	ld	a, (de)
   00FF DD 77 FE      [19]  249 	ld	-2 (ix), a
   0102 13            [ 6]  250 	inc	de
   0103 1A            [ 7]  251 	ld	a, (de)
   0104 DD 77 FF      [19]  252 	ld	-1 (ix), a
   0107 69            [ 4]  253 	ld	l, c
   0108 60            [ 4]  254 	ld	h, b
   0109 7E            [ 7]  255 	ld	a, (hl)
   010A 23            [ 6]  256 	inc	hl
   010B 66            [ 7]  257 	ld	h, (hl)
                            258 ;e4vm_boolean.c:48: (*v)->ds[(*v)->ds_p - 1] = e4vm_utils_false_const(v);
   010C 6F            [ 4]  259 	ld	l, a
   010D C6 44         [ 7]  260 	add	a, #0x44
   010F 5F            [ 4]  261 	ld	e, a
   0110 7C            [ 4]  262 	ld	a, h
   0111 CE 00         [ 7]  263 	adc	a, #0x00
   0113 57            [ 4]  264 	ld	d, a
   0114 C5            [11]  265 	push	bc
   0115 01 86 00      [10]  266 	ld	bc, #0x0086
   0118 09            [11]  267 	add	hl, bc
   0119 C1            [10]  268 	pop	bc
   011A 7E            [ 7]  269 	ld	a, (hl)
   011B 3D            [ 4]  270 	dec	a
   011C 87            [ 4]  271 	add	a, a
   011D 83            [ 4]  272 	add	a, e
   011E 5F            [ 4]  273 	ld	e, a
   011F 3E 00         [ 7]  274 	ld	a, #0x00
   0121 8A            [ 4]  275 	adc	a, d
   0122 57            [ 4]  276 	ld	d, a
                            277 ;e4vm_boolean.c:47: if ((*v)->ds[(*v)->ds_p - 1] == e4vm_utils_true_const(v)) {
   0123 DD 7E FC      [19]  278 	ld	a, -4 (ix)
   0126 DD 96 FE      [19]  279 	sub	a, -2 (ix)
   0129 20 18         [12]  280 	jr	NZ,00105$
   012B DD 7E FD      [19]  281 	ld	a, -3 (ix)
   012E DD 96 FF      [19]  282 	sub	a, -1 (ix)
   0131 20 10         [12]  283 	jr	NZ,00105$
                            284 ;e4vm_boolean.c:48: (*v)->ds[(*v)->ds_p - 1] = e4vm_utils_false_const(v);
   0133 D5            [11]  285 	push	de
   0134 C5            [11]  286 	push	bc
   0135 CDr00r00      [17]  287 	call	_e4vm_utils_false_const
   0138 F1            [10]  288 	pop	af
   0139 4D            [ 4]  289 	ld	c, l
   013A 44            [ 4]  290 	ld	b, h
   013B D1            [10]  291 	pop	de
   013C 79            [ 4]  292 	ld	a, c
   013D 12            [ 7]  293 	ld	(de), a
   013E 13            [ 6]  294 	inc	de
   013F 78            [ 4]  295 	ld	a, b
   0140 12            [ 7]  296 	ld	(de), a
   0141 18 53         [12]  297 	jr	00107$
   0143                     298 00105$:
                            299 ;e4vm_boolean.c:50: if ((*v)->ds[(*v)->ds_p - 1] == e4vm_utils_false_const(v)) {
   0143 C5            [11]  300 	push	bc
   0144 D5            [11]  301 	push	de
   0145 C5            [11]  302 	push	bc
   0146 CDr00r00      [17]  303 	call	_e4vm_utils_false_const
   0149 F1            [10]  304 	pop	af
   014A DD 75 FE      [19]  305 	ld	-2 (ix), l
   014D DD 74 FF      [19]  306 	ld	-1 (ix), h
   0150 D1            [10]  307 	pop	de
   0151 C1            [10]  308 	pop	bc
   0152 EB            [ 4]  309 	ex	de,hl
   0153 5E            [ 7]  310 	ld	e, (hl)
   0154 23            [ 6]  311 	inc	hl
   0155 56            [ 7]  312 	ld	d, (hl)
   0156 DD 6E FE      [19]  313 	ld	l, -2 (ix)
   0159 DD 66 FF      [19]  314 	ld	h, -1 (ix)
   015C BF            [ 4]  315 	cp	a, a
   015D ED 52         [15]  316 	sbc	hl, de
   015F 20 2C         [12]  317 	jr	NZ,00102$
                            318 ;e4vm_boolean.c:51: (*v)->ds[(*v)->ds_p - 1] = e4vm_utils_true_const(v);
   0161 69            [ 4]  319 	ld	l, c
   0162 60            [ 4]  320 	ld	h, b
   0163 7E            [ 7]  321 	ld	a, (hl)
   0164 23            [ 6]  322 	inc	hl
   0165 66            [ 7]  323 	ld	h, (hl)
   0166 6F            [ 4]  324 	ld	l, a
   0167 C6 44         [ 7]  325 	add	a, #0x44
   0169 5F            [ 4]  326 	ld	e, a
   016A 7C            [ 4]  327 	ld	a, h
   016B CE 00         [ 7]  328 	adc	a, #0x00
   016D 57            [ 4]  329 	ld	d, a
   016E C5            [11]  330 	push	bc
   016F 01 86 00      [10]  331 	ld	bc, #0x0086
   0172 09            [11]  332 	add	hl, bc
   0173 C1            [10]  333 	pop	bc
   0174 7E            [ 7]  334 	ld	a, (hl)
   0175 3D            [ 4]  335 	dec	a
   0176 87            [ 4]  336 	add	a, a
   0177 83            [ 4]  337 	add	a, e
   0178 5F            [ 4]  338 	ld	e, a
   0179 3E 00         [ 7]  339 	ld	a, #0x00
   017B 8A            [ 4]  340 	adc	a, d
   017C 57            [ 4]  341 	ld	d, a
   017D D5            [11]  342 	push	de
   017E C5            [11]  343 	push	bc
   017F CDr00r00      [17]  344 	call	_e4vm_utils_true_const
   0182 F1            [10]  345 	pop	af
   0183 4D            [ 4]  346 	ld	c, l
   0184 44            [ 4]  347 	ld	b, h
   0185 D1            [10]  348 	pop	de
   0186 79            [ 4]  349 	ld	a, c
   0187 12            [ 7]  350 	ld	(de), a
   0188 13            [ 6]  351 	inc	de
   0189 78            [ 4]  352 	ld	a, b
   018A 12            [ 7]  353 	ld	(de), a
   018B 18 09         [12]  354 	jr	00107$
   018D                     355 00102$:
                            356 ;e4vm_boolean.c:53: Console_WriteStrLn((CHAR*)"not logical", 12);
   018D 21r9Fr01      [10]  357 	ld	hl, #___str_3
   0190 CDr00r00      [17]  358 	call	_Console_WriteStr_C_COMPACT
   0193 CDr00r00      [17]  359 	call	_Console_WriteLn_COMPACT
   0196                     360 00107$:
                            361 ;e4vm_boolean.c:56: }
   0196 DD F9         [10]  362 	ld	sp, ix
   0198 DD E1         [14]  363 	pop	ix
   019A C9            [10]  364 	ret
   019B                     365 ___str_2:
   019B 6E 6F 74            366 	.ascii "not"
   019E 00                  367 	.db 0x00
   019F                     368 ___str_3:
   019F 6E 6F 74 20 6C 6F   369 	.ascii "not logical"
        67 69 63 61 6C
   01AA 00                  370 	.db 0x00
                            371 ;e4vm_boolean.c:59: void e4vm_boolean_invert (e4vm_type_x4thPtr *v)
                            372 ;	---------------------------------
                            373 ; Function e4vm_boolean_invert
                            374 ; ---------------------------------
   01AB                     375 _e4vm_boolean_invert::
   01AB CDr00r00      [17]  376 	call	___sdcc_enter_ix
                            377 ;e4vm_boolean.c:61: Console_WriteStrLn((CHAR*)"invert", 7);
   01AE 21rE0r01      [10]  378 	ld	hl, #___str_4
   01B1 CDr00r00      [17]  379 	call	_Console_WriteStr_C_COMPACT
   01B4 CDr00r00      [17]  380 	call	_Console_WriteLn_COMPACT
                            381 ;e4vm_boolean.c:62: (*v)->ds[(*v)->ds_p - 1] = e4vm_boolean_BitwiseNot((*v)->ds[(*v)->ds_p - 1]);
   01B7 DD 6E 04      [19]  382 	ld	l, 4 (ix)
   01BA DD 66 05      [19]  383 	ld	h, 5 (ix)
   01BD 4E            [ 7]  384 	ld	c, (hl)
   01BE 23            [ 6]  385 	inc	hl
   01BF 46            [ 7]  386 	ld	b, (hl)
   01C0 21 44 00      [10]  387 	ld	hl, #0x0044
   01C3 09            [11]  388 	add	hl, bc
   01C4 EB            [ 4]  389 	ex	de, hl
   01C5 69            [ 4]  390 	ld	l, c
   01C6 60            [ 4]  391 	ld	h, b
   01C7 01 86 00      [10]  392 	ld	bc, #0x0086
   01CA 09            [11]  393 	add	hl, bc
   01CB 7E            [ 7]  394 	ld	a, (hl)
   01CC 3D            [ 4]  395 	dec	a
   01CD 87            [ 4]  396 	add	a, a
   01CE 6F            [ 4]  397 	ld	l, a
   01CF 26 00         [ 7]  398 	ld	h, #0x00
   01D1 19            [11]  399 	add	hl, de
   01D2 46            [ 7]  400 	ld	b, (hl)
   01D3 23            [ 6]  401 	inc	hl
   01D4 7E            [ 7]  402 	ld	a, (hl)
   01D5 2B            [ 6]  403 	dec	hl
   01D6 2F            [ 4]  404 	cpl
   01D7 4F            [ 4]  405 	ld	c, a
   01D8 78            [ 4]  406 	ld	a, b
   01D9 2F            [ 4]  407 	cpl
   01DA 77            [ 7]  408 	ld	(hl), a
   01DB 23            [ 6]  409 	inc	hl
   01DC 71            [ 7]  410 	ld	(hl), c
                            411 ;e4vm_boolean.c:63: }
   01DD DD E1         [14]  412 	pop	ix
   01DF C9            [10]  413 	ret
   01E0                     414 ___str_4:
   01E0 69 6E 76 65 72 74   415 	.ascii "invert"
   01E6 00                  416 	.db 0x00
                            417 ;e4vm_boolean.c:66: void e4vm_boolean_or (e4vm_type_x4thPtr *v)
                            418 ;	---------------------------------
                            419 ; Function e4vm_boolean_or
                            420 ; ---------------------------------
   01E7                     421 _e4vm_boolean_or::
   01E7 CDr00r00      [17]  422 	call	___sdcc_enter_ix
   01EA F5            [11]  423 	push	af
                            424 ;e4vm_boolean.c:68: Console_WriteStrLn((CHAR*)"or", 3);
   01EB 21r48r02      [10]  425 	ld	hl, #___str_5
   01EE CDr00r00      [17]  426 	call	_Console_WriteStr_C_COMPACT
   01F1 CDr00r00      [17]  427 	call	_Console_WriteLn_COMPACT
                            428 ;e4vm_boolean.c:69: (*v)->ds[(*v)->ds_p - 2] = e4vm_boolean_BitwiseOR((*v)->ds[(*v)->ds_p - 2], (*v)->ds[(*v)->ds_p - 1]);
   01F4 DD 7E 04      [19]  429 	ld	a, 4 (ix)
   01F7 DD 77 FE      [19]  430 	ld	-2 (ix), a
   01FA DD 7E 05      [19]  431 	ld	a, 5 (ix)
   01FD DD 77 FF      [19]  432 	ld	-1 (ix), a
   0200 E1            [10]  433 	pop	hl
   0201 E5            [11]  434 	push	hl
   0202 4E            [ 7]  435 	ld	c, (hl)
   0203 23            [ 6]  436 	inc	hl
   0204 46            [ 7]  437 	ld	b, (hl)
   0205 21 44 00      [10]  438 	ld	hl, #0x0044
   0208 09            [11]  439 	add	hl, bc
   0209 EB            [ 4]  440 	ex	de, hl
   020A 69            [ 4]  441 	ld	l, c
   020B 60            [ 4]  442 	ld	h, b
   020C 01 86 00      [10]  443 	ld	bc, #0x0086
   020F 09            [11]  444 	add	hl, bc
   0210 6E            [ 7]  445 	ld	l, (hl)
   0211 7D            [ 4]  446 	ld	a, l
   0212 3D            [ 4]  447 	dec	a
   0213 3D            [ 4]  448 	dec	a
   0214 87            [ 4]  449 	add	a, a
   0215 83            [ 4]  450 	add	a, e
   0216 4F            [ 4]  451 	ld	c, a
   0217 3E 00         [ 7]  452 	ld	a, #0x00
   0219 8A            [ 4]  453 	adc	a, d
   021A 47            [ 4]  454 	ld	b, a
   021B 2D            [ 4]  455 	dec	l
   021C CB 25         [ 8]  456 	sla	l
   021E 26 00         [ 7]  457 	ld	h, #0x00
   0220 19            [11]  458 	add	hl, de
   0221 5E            [ 7]  459 	ld	e, (hl)
   0222 23            [ 6]  460 	inc	hl
   0223 56            [ 7]  461 	ld	d, (hl)
   0224 69            [ 4]  462 	ld	l, c
   0225 60            [ 4]  463 	ld	h, b
   0226 7E            [ 7]  464 	ld	a, (hl)
   0227 23            [ 6]  465 	inc	hl
   0228 66            [ 7]  466 	ld	h, (hl)
   0229 B3            [ 4]  467 	or	a,e
   022A 5F            [ 4]  468 	ld	e, a
   022B 7A            [ 4]  469 	ld	a, d
   022C B4            [ 4]  470 	or	a, h
   022D 57            [ 4]  471 	ld	d, a
   022E 7B            [ 4]  472 	ld	a, e
   022F 02            [ 7]  473 	ld	(bc), a
   0230 03            [ 6]  474 	inc	bc
   0231 7A            [ 4]  475 	ld	a, d
   0232 02            [ 7]  476 	ld	(bc), a
                            477 ;e4vm_boolean.c:70: (*v)->ds_p = (*v)->ds_p - 1;
   0233 E1            [10]  478 	pop	hl
   0234 E5            [11]  479 	push	hl
   0235 4E            [ 7]  480 	ld	c, (hl)
   0236 23            [ 6]  481 	inc	hl
   0237 46            [ 7]  482 	ld	b, (hl)
   0238 21 86 00      [10]  483 	ld	hl, #0x0086
   023B 09            [11]  484 	add	hl, bc
   023C 4E            [ 7]  485 	ld	c, (hl)
   023D 23            [ 6]  486 	inc	hl
   023E 46            [ 7]  487 	ld	b, (hl)
   023F 2B            [ 6]  488 	dec	hl
   0240 0B            [ 6]  489 	dec	bc
   0241 71            [ 7]  490 	ld	(hl), c
   0242 23            [ 6]  491 	inc	hl
   0243 70            [ 7]  492 	ld	(hl), b
                            493 ;e4vm_boolean.c:71: }
   0244 F1            [10]  494 	pop	af
   0245 DD E1         [14]  495 	pop	ix
   0247 C9            [10]  496 	ret
   0248                     497 ___str_5:
   0248 6F 72               498 	.ascii "or"
   024A 00                  499 	.db 0x00
                            500 ;e4vm_boolean.c:74: void e4vm_boolean_and (e4vm_type_x4thPtr *v)
                            501 ;	---------------------------------
                            502 ; Function e4vm_boolean_and
                            503 ; ---------------------------------
   024B                     504 _e4vm_boolean_and::
   024B CDr00r00      [17]  505 	call	___sdcc_enter_ix
   024E F5            [11]  506 	push	af
   024F F5            [11]  507 	push	af
                            508 ;e4vm_boolean.c:76: Console_WriteStrLn((CHAR*)"and", 4);
   0250 21rBBr02      [10]  509 	ld	hl, #___str_6
   0253 CDr00r00      [17]  510 	call	_Console_WriteStr_C_COMPACT
   0256 CDr00r00      [17]  511 	call	_Console_WriteLn_COMPACT
                            512 ;e4vm_boolean.c:77: (*v)->ds[(*v)->ds_p - 2] = e4vm_boolean_BitwiseAND((*v)->ds[(*v)->ds_p - 2], (*v)->ds[(*v)->ds_p - 1]);
   0259 DD 7E 04      [19]  513 	ld	a, 4 (ix)
   025C DD 77 FC      [19]  514 	ld	-4 (ix), a
   025F DD 7E 05      [19]  515 	ld	a, 5 (ix)
   0262 DD 77 FD      [19]  516 	ld	-3 (ix), a
   0265 E1            [10]  517 	pop	hl
   0266 E5            [11]  518 	push	hl
   0267 4E            [ 7]  519 	ld	c, (hl)
   0268 23            [ 6]  520 	inc	hl
   0269 46            [ 7]  521 	ld	b, (hl)
   026A 21 44 00      [10]  522 	ld	hl, #0x0044
   026D 09            [11]  523 	add	hl, bc
   026E EB            [ 4]  524 	ex	de, hl
   026F 69            [ 4]  525 	ld	l, c
   0270 60            [ 4]  526 	ld	h, b
   0271 01 86 00      [10]  527 	ld	bc, #0x0086
   0274 09            [11]  528 	add	hl, bc
   0275 6E            [ 7]  529 	ld	l, (hl)
   0276 7D            [ 4]  530 	ld	a, l
   0277 3D            [ 4]  531 	dec	a
   0278 3D            [ 4]  532 	dec	a
   0279 87            [ 4]  533 	add	a, a
   027A 83            [ 4]  534 	add	a, e
   027B 4F            [ 4]  535 	ld	c, a
   027C 3E 00         [ 7]  536 	ld	a, #0x00
   027E 8A            [ 4]  537 	adc	a, d
   027F 47            [ 4]  538 	ld	b, a
   0280 7D            [ 4]  539 	ld	a, l
   0281 3D            [ 4]  540 	dec	a
   0282 87            [ 4]  541 	add	a, a
   0283 83            [ 4]  542 	add	a, e
   0284 DD 77 FE      [19]  543 	ld	-2 (ix), a
   0287 3E 00         [ 7]  544 	ld	a, #0x00
   0289 8A            [ 4]  545 	adc	a, d
   028A DD 77 FF      [19]  546 	ld	-1 (ix), a
   028D 69            [ 4]  547 	ld	l, c
   028E 60            [ 4]  548 	ld	h, b
   028F 5E            [ 7]  549 	ld	e, (hl)
   0290 23            [ 6]  550 	inc	hl
   0291 56            [ 7]  551 	ld	d, (hl)
   0292 DD 6E FE      [19]  552 	ld	l, -2 (ix)
   0295 DD 66 FF      [19]  553 	ld	h, -1 (ix)
   0298 7E            [ 7]  554 	ld	a, (hl)
   0299 23            [ 6]  555 	inc	hl
   029A 66            [ 7]  556 	ld	h, (hl)
   029B A3            [ 4]  557 	and	a, e
   029C 5F            [ 4]  558 	ld	e, a
   029D 7C            [ 4]  559 	ld	a, h
   029E A2            [ 4]  560 	and	a, d
   029F 57            [ 4]  561 	ld	d, a
   02A0 7B            [ 4]  562 	ld	a, e
   02A1 02            [ 7]  563 	ld	(bc), a
   02A2 03            [ 6]  564 	inc	bc
   02A3 7A            [ 4]  565 	ld	a, d
   02A4 02            [ 7]  566 	ld	(bc), a
                            567 ;e4vm_boolean.c:78: (*v)->ds_p = (*v)->ds_p - 1;
   02A5 E1            [10]  568 	pop	hl
   02A6 E5            [11]  569 	push	hl
   02A7 4E            [ 7]  570 	ld	c, (hl)
   02A8 23            [ 6]  571 	inc	hl
   02A9 46            [ 7]  572 	ld	b, (hl)
   02AA 21 86 00      [10]  573 	ld	hl, #0x0086
   02AD 09            [11]  574 	add	hl, bc
   02AE 4E            [ 7]  575 	ld	c, (hl)
   02AF 23            [ 6]  576 	inc	hl
   02B0 46            [ 7]  577 	ld	b, (hl)
   02B1 2B            [ 6]  578 	dec	hl
   02B2 0B            [ 6]  579 	dec	bc
   02B3 71            [ 7]  580 	ld	(hl), c
   02B4 23            [ 6]  581 	inc	hl
   02B5 70            [ 7]  582 	ld	(hl), b
                            583 ;e4vm_boolean.c:79: }
   02B6 DD F9         [10]  584 	ld	sp, ix
   02B8 DD E1         [14]  585 	pop	ix
   02BA C9            [10]  586 	ret
   02BB                     587 ___str_6:
   02BB 61 6E 64            588 	.ascii "and"
   02BE 00                  589 	.db 0x00
                            590 ;e4vm_boolean.c:82: void e4vm_boolean_xor (e4vm_type_x4thPtr *v)
                            591 ;	---------------------------------
                            592 ; Function e4vm_boolean_xor
                            593 ; ---------------------------------
   02BF                     594 _e4vm_boolean_xor::
   02BF CDr00r00      [17]  595 	call	___sdcc_enter_ix
   02C2 F5            [11]  596 	push	af
                            597 ;e4vm_boolean.c:84: Console_WriteStrLn((CHAR*)"xor", 4);
   02C3 21r22r03      [10]  598 	ld	hl, #___str_7
   02C6 CDr00r00      [17]  599 	call	_Console_WriteStr_C_COMPACT
   02C9 CDr00r00      [17]  600 	call	_Console_WriteLn_COMPACT
                            601 ;e4vm_boolean.c:85: (*v)->ds[(*v)->ds_p - 2] = e4vm_boolean_BitwiseXOR((*v)->ds[(*v)->ds_p - 2], (*v)->ds[(*v)->ds_p - 1]);
   02CC DD 7E 04      [19]  602 	ld	a, 4 (ix)
   02CF DD 77 FE      [19]  603 	ld	-2 (ix), a
   02D2 DD 7E 05      [19]  604 	ld	a, 5 (ix)
   02D5 DD 77 FF      [19]  605 	ld	-1 (ix), a
   02D8 E1            [10]  606 	pop	hl
   02D9 E5            [11]  607 	push	hl
   02DA 4E            [ 7]  608 	ld	c, (hl)
   02DB 23            [ 6]  609 	inc	hl
   02DC 46            [ 7]  610 	ld	b, (hl)
   02DD 21 44 00      [10]  611 	ld	hl, #0x0044
   02E0 09            [11]  612 	add	hl, bc
   02E1 EB            [ 4]  613 	ex	de, hl
   02E2 69            [ 4]  614 	ld	l, c
   02E3 60            [ 4]  615 	ld	h, b
   02E4 01 86 00      [10]  616 	ld	bc, #0x0086
   02E7 09            [11]  617 	add	hl, bc
   02E8 6E            [ 7]  618 	ld	l, (hl)
   02E9 7D            [ 4]  619 	ld	a, l
   02EA 3D            [ 4]  620 	dec	a
   02EB 3D            [ 4]  621 	dec	a
   02EC 87            [ 4]  622 	add	a, a
   02ED 83            [ 4]  623 	add	a, e
   02EE 4F            [ 4]  624 	ld	c, a
   02EF 3E 00         [ 7]  625 	ld	a, #0x00
   02F1 8A            [ 4]  626 	adc	a, d
   02F2 47            [ 4]  627 	ld	b, a
   02F3 2D            [ 4]  628 	dec	l
   02F4 CB 25         [ 8]  629 	sla	l
   02F6 26 00         [ 7]  630 	ld	h, #0x00
   02F8 19            [11]  631 	add	hl, de
   02F9 5E            [ 7]  632 	ld	e, (hl)
   02FA 23            [ 6]  633 	inc	hl
   02FB 56            [ 7]  634 	ld	d, (hl)
   02FC 69            [ 4]  635 	ld	l, c
   02FD 60            [ 4]  636 	ld	h, b
   02FE 7E            [ 7]  637 	ld	a, (hl)
   02FF 23            [ 6]  638 	inc	hl
   0300 66            [ 7]  639 	ld	h, (hl)
   0301 6F            [ 4]  640 	ld	l, a
   0302 7B            [ 4]  641 	ld	a, e
   0303 AD            [ 4]  642 	xor	a, l
   0304 5F            [ 4]  643 	ld	e, a
   0305 7A            [ 4]  644 	ld	a, d
   0306 AC            [ 4]  645 	xor	a, h
   0307 57            [ 4]  646 	ld	d, a
   0308 7B            [ 4]  647 	ld	a, e
   0309 02            [ 7]  648 	ld	(bc), a
   030A 03            [ 6]  649 	inc	bc
   030B 7A            [ 4]  650 	ld	a, d
   030C 02            [ 7]  651 	ld	(bc), a
                            652 ;e4vm_boolean.c:86: (*v)->ds_p = (*v)->ds_p - 1;
   030D E1            [10]  653 	pop	hl
   030E E5            [11]  654 	push	hl
   030F 4E            [ 7]  655 	ld	c, (hl)
   0310 23            [ 6]  656 	inc	hl
   0311 46            [ 7]  657 	ld	b, (hl)
   0312 21 86 00      [10]  658 	ld	hl, #0x0086
   0315 09            [11]  659 	add	hl, bc
   0316 4E            [ 7]  660 	ld	c, (hl)
   0317 23            [ 6]  661 	inc	hl
   0318 46            [ 7]  662 	ld	b, (hl)
   0319 2B            [ 6]  663 	dec	hl
   031A 0B            [ 6]  664 	dec	bc
   031B 71            [ 7]  665 	ld	(hl), c
   031C 23            [ 6]  666 	inc	hl
   031D 70            [ 7]  667 	ld	(hl), b
                            668 ;e4vm_boolean.c:87: }
   031E F1            [10]  669 	pop	af
   031F DD E1         [14]  670 	pop	ix
   0321 C9            [10]  671 	ret
   0322                     672 ___str_7:
   0322 78 6F 72            673 	.ascii "xor"
   0325 00                  674 	.db 0x00
                            675 ;e4vm_boolean.c:91: export void *e4vm_boolean__init (void)
                            676 ;	---------------------------------
                            677 ; Function e4vm_boolean__init
                            678 ; ---------------------------------
   0326                     679 _e4vm_boolean__init::
                            680 ;e4vm_boolean.c:93: __DEFMOD;
   0326 21r26r03      [10]  681 	LD	HL,#. 
   0329 36 C9         [10]  682 	LD (HL),#0xC9 
                            683 ;e4vm_boolean.c:96: __IMPORT(e4vm_utils__init);
                            684 ;e4vm_boolean.c:100: }
   032B C3r00r00      [10]  685 	jp  _e4vm_utils__init
                            686 	.area _CODE
                            687 	.area _INITIALIZER
                            688 	.area _CABS (ABS)
